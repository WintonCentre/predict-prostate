{"version":3,"sources":["predict_prostate/pages/model_tests.cljs"],"mappings":";AASA,AAAKA,+CAAU,mDAAA,nDAACC;AAEhB,mDAAA,nDAAMC;AAAN,AACE,6CAAA,iBAAA,2CAAA,2DAAA,WAAAC,/KAACC;AAAD,AAC4B,4GAAAD,rGAACE,wDAAKL;;;AAClC,IAAAM,mBAAA,AAAAL,mDAAA;AAAA,AAAA,AAAAM,kCAAA;AAAA,AAAA,IAAAC,mBAAA,iBAAAC,wBAAA,WAAAC;AAAA,AAAA,IAAAC,kBAAA,CAAAD,YAAA;AAAA,AAAA,GAAA,CAAAC,oBAAA;AAAA,IAAAC,aAAA,aAAA,AAAA,kBAAAC;AAAA,AACoB,OAACmB,6CAAe,sDAAAnB,tDAACoB;;;IADrCnB,aAAA,sGAAAF,tGACGmB,yDAAM/B;IADTU,kBAAAA;AAAA,AAAA,OAAAK,6CAAAL,gBAAAI;;AAAA;;;AAAA,AAAA;;;AAAA,AAAA,IAAAE,iBAAA,CAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA;AAAA,AAAA,CAAAA,eAAA,OAAAC;;AAAA,CAAAD,eAAA,OAAA;;AAAAA;;oGAAAN;;AAAA,AAAA,IAAAQ,2BAAA,iBAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA,AAAAV,sBAAAC;AAAA,AAAA,GAAA,AAAAU,mCAAAD,sBAAA;AAAA;;AAAAA;;;;gBAAA,IAAAE,oBAAAC;AAAA,AAAA,IAAAC,uBAAAb;AAAA,AAAA,CAAAa,qBAAA,OAAAF;;AAAAE;AAAA,GAAA,AAAAC,cAAA,CAAAd,YAAA;AAAA,IAAAe,uBAAAf;AAAA,AAAA,CAAAe,qBAAA,OAAA,AAAAC,gBAAA,CAAAhB,YAAA;;AAAAe;AAAA,MAAAJ;;;AAAA;;AAAA,AAAA,GAAA,AAAAD,mCAAAF,yBAAA;AAAA,eAAAR;;;;AAAAQ;;;;;2FAAAR;;;;;oGAAAA;;;;;;;;;IAAAiB,uBAAA,iBAAAC,iBAAA,AAAApB;AAAA,AAAA,CAAAoB,eAAAC,AAAA,OAAAvB;;AAAAsB;;AAAA,AAAA,OAAAE,2DAAAH;;;AAAArB;;AAGF,iDAAA,jDAAM4B;AAAN,AAAA,0FAAA,sGAAA,2CAAA,gEAAA,0BAAA,qDAAA,SAAA,+TAAA,IAAA,tQAGgDhC,yDAC7C,2BAAA,2CAAA,0DAAA,wDAAA,xLAACiC;;AAGJ,iDAAA,AAAAC,oBAAAC,oBAAA,zFAAUG,oGAA0BE;AAApC,AAAA,AAAA,OAAAJ,6BAAA,MAAA,aAAA,aAAA,CAAA,AAAAA,6BAAA,MAAA,aAAA,OAAA,CAAA,AAAAA,6BAAA,MAAA,aAAA,aAAA,4CAAA,AAAAA,6BAAA,MAAA,aAAA,OAAA,CAAA,AAAAA,6BAAA,MAAA,aAAA,UAAA,CAAA,AAAAA,6BAAA,MAAA,OAAA,iCAAA,aAAA,aAAA,0BAAA,kBAAA,UAAA,AAAAA,6BAAA,MAAA,aAAA,OAAA,CAAA,AAAAA,6BAAA,MAAA,SAAA,WAAA,wBAAA,sBAAA,UAAA,CAAA,AAAAC,qFAAA,AAAAD,6BAAA,MAAA,aAAA,OAAA,CAAA,AAAAA,6BAAA,MAAA,SAAA,aAAA,oCAAA,sBAAA,iBAAA,wBAAA,sBAAA,UAAA,CAAA,AAAAA,6BAAA,IAAA,KAAA,CAAA,AAAAA,6BAAA,IAAA,KAAA,CAAA,z3BAKK,AAACK,sCAAOD,0dAYN,AAACR,qbAQH,AAACU;GAzBN,4GAAA,zBAAwBH","names":["predict-prostate.pages.model-tests/load-chan","cljs.core.async.chan","predict-prostate.pages.model-tests/click-handler","p1__59961#","predict-prostate.models.tests/get-test-cases","cljs.core.async.put_BANG_","c__30019__auto__","cljs.core.async.impl.dispatch/run","f__30020__auto__","switch__29949__auto__","state_59966","state_val_59967","inst_59963","p1__59962#","inst_59964","cljs.core.async.impl.ioc-helpers/return-chan","statearr-59968","state-machine__29950__auto__","ret-value__29951__auto__","result__29952__auto__","cljs.core/keyword-identical?","ex__29953__auto__","e59969","statearr-59970","cljs.core/seq","statearr-59971","cljs.core/first","state__30021__auto__","statearr-59972","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","cljs.core.async.take_BANG_","predict-prostate.models.tests/test-all-cases","cljs.reader.read_string","predict-prostate.pages.model-tests/test-button","graphics.simple-icons/icon","rum.core/lazy-build","rum.core/build-defc","daiquiri.core/create-element","daiquiri.interpreter/interpret","predict-prostate.pages.model-tests/model-tests","rum.core/static","ttt","predict-prostate.layout.header/header","predict-prostate.layout.header/footer"],"sourcesContent":["(ns predict-prostate.pages.model-tests\n  (:require [rum.core :as rum]\n            [predict-prostate.layout.header :refer [header footer]]\n            [graphics.simple-icons :as simple]\n            [cljs.reader :as edn]\n            [predict-prostate.models.tests :refer [get-test-cases test-all-cases]]\n            [cljs.core.async :refer [chan put! take!]])\n  (:require-macros [cljs.core.async :refer [go]]))\n\n(def load-chan (chan 0))\n\n(defn click-handler []\n  (get-test-cases \"/test-runs.txt\"\n                  {:handler  #(put! load-chan %)})\n  (go\n    (take! load-chan #(test-all-cases (edn/read-string %)))))\n\n(defn test-button []\n  [:button.btn.btn-primary.btn-lg {:aria-label \"launch a batch of tests\"\n                                   :type       \"button\"\n                                   :on-click    click-handler}\n   (simple/icon {:family :fa} \"chevron-right\") \" \" \"Launch model tests\"])\n\n\n(rum/defc model-tests < rum/static [ttt]\n\n  [:.container\n   [:.row\n    [:.col-sm-12\n     (header ttt)\n\n     [:.row\n      [:.col-12\n       [:img.img-responsive {:src   \"assets/model-tests.png\"\n                             :style {:margin-top \"3ex\"}\n                             :alt   \"Model tests\"}]]]\n     [:.row\n\n      [:.col-12 {:style {;:min-height \"calc(100vh - 200px)\"\n                         :display \"flex\"\n                         :justify-content \"center\"}}\n       (test-button)]]\n     [:.row\n      [:.col-12 {:style {:min-height \"calc(100vh - 200px)\"\n                         :padding-left  \"25px\"\n                         :padding-right \"25px\"\n                         :display \"flex\"\n                         :justify-content \"center\"}}\n       [:p [:i \"Open the console to see the results of the tests.\"]]]]\n     (footer)]]])"]}