{"version":3,"sources":["predict_prostate/pages/model_tests.cljs"],"mappings":";AAQA,mDAAA,nDAAMA;AAAN,AACE,6CAAA,iBAAA,2CAAA,2DAAA,WAAAC,/KAACC;AAAD,AAC2B,+GAAA,xGAACC,mDAAMC,qCAAKC,4FAAwB,sDAAAJ,tDAACK;;;AAGhE,AAACC,yGAAQ,AAAA,0GAAA,AAAAC,gBAAoBJ;;AAC7B,OAACK,6CAAe,AAAA,0GAAA,AAAAD,gBAAoBJ;;AAGtC,iDAAA,jDAAMM;AAAN,AAAA,0FAAA,sGAAA,2CAAA,gEAAA,0BAAA,qDAAA,SAAA,+TAAA,IAAA,tQAGgDV,yDAC7C,2BAAA,2CAAA,0DAAA,wDAAA,xLAACW;;AAGJ,iDAAA,AAAAC,oBAAAC,oBAAA,zFAAUG,oGAA0BE;AAApC,AAAA,AAAA,OAAAJ,6BAAA,MAAA,aAAA,aAAA,CAAA,AAAAA,6BAAA,MAAA,aAAA,OAAA,CAAA,AAAAA,6BAAA,MAAA,aAAA,aAAA,4CAAA,AAAAA,6BAAA,MAAA,aAAA,OAAA,CAAA,AAAAA,6BAAA,MAAA,SAAA,eAAA,sBAAA,oBAAA,YAAA,CAAA,AAAAA,6BAAA,IAAA,KAAA,CAAA,wDAAA,AAAAA,6BAAA,MAAA,SAAA,aAAA,mCAAA,sBAAA,CAAA,AAAAC,iFAAA,AAAAD,6BAAA,MAAA,OAAA,yBAAA,aAAA,aAAA,wBAAA,kBAAA,/nBAKK,AAACK,sCAAOD,gaASN,AAACR,mMAKH,AAACU;GAnBN,4GAAA,zBAAwBH","names":["predict-prostate.pages.model-tests/click-handler","p1__46666#","predict-prostate.models.tests/get-test-cases","cljs.core.swap_BANG_","predict-prostate.state.run-time/rtdb","cljs.core/assoc","cljs.reader.read_string","cljs.core.println","cljs.core/deref","predict-prostate.models.tests/test-all-cases","predict-prostate.pages.model-tests/test-button","graphics.simple-icons/icon","rum.core/lazy-build","rum.core/build-defc","daiquiri.core/create-element","daiquiri.interpreter/interpret","predict-prostate.pages.model-tests/model-tests","rum.core/static","ttt","predict-prostate.layout.header/header","predict-prostate.layout.header/footer"],"sourcesContent":["(ns predict-prostate.pages.model-tests\n  (:require [rum.core :as rum]\n            [predict-prostate.layout.header :refer [header footer]]\n            [graphics.simple-icons :as simple]\n            [cljs.reader :as edn]\n            [predict-prostate.models.tests :refer [get-test-cases test-all-cases]]\n            [predict-prostate.state.run-time :refer [test-cursor rtdb]]))\n\n(defn click-handler []\n  (get-test-cases \"/test-runs.txt\"\n                  {:handler #(swap! rtdb assoc :model-test-cases (edn/read-string %))}\n                  #_{:on-error #(put! err-chan %)\n                     :handler  #(put! static-chan %)})\n  (println (:model-test-cases @rtdb))\n  (test-all-cases (:model-test-cases @rtdb)))\n\n\n(defn test-button []\n  [:button.btn.btn-primary.btn-lg {:aria-label \"launch a batch of tests\"\n                                   :type       \"button\"\n                                   :on-click    click-handler}\n   (simple/icon {:family :fa} \"chevron-right\") \" \" \"Launch model tests\"])\n\n\n(rum/defc model-tests < rum/static [ttt]\n\n  [:.container\n   [:.row\n    [:.col-sm-12\n     (header ttt)\n\n     [:.row\n\n      [:.col-sm-4 {:style {:padding-left  \"25px\"\n                           :padding-right \"25px\"}}\n       [:p \"Open the console to see the results of the tests.\"]]\n\n      [:.col-sm-8.col-xs-12 {:style {:min-height \"calc(100vh - 200px)\"}}\n       (test-button)\n       [:img.img-responsive {:src   \"assets/404.jpg\"\n                             :style {:margin-top \"3ex\"}\n                             :alt   \"Not found\"}]]]\n     \n     (footer)]]])"]}