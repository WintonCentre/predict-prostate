{"version":3,"sources":["predict_prostate/router.cljs"],"mappings":";AAOA,AAACA;AAED,AAAKC,AAAY,AAAA,AAACC,AAAmBC;AAErC,AAAA,AAAMC;AAAN,AAA2B,AAAAC,AAAIC;AAAJ,AAAA,AAAAD;AAAAA;;AAAeJ;;;AAE1C,AAAA,AAAMM,AAASC;AAAf,AAAoB,AAAA,AAASA;;AAE7B,AAAKC,AAAK,AAAA,AAAA,AAAIH;AAGd,AAAA,AAAMI,AAAMF;AAAZ,AAAiB,AAAK,AAAA,AAAA,AAAI,AAACJ,AAA0BK,AAAKD;;AAG1D,AAAA,AAAMG,AAAQH;AAAd,AAAmB,AAAK,AAAA,AAAA,AAAI,AAACJ,AAA0BI;;AAGvD;;;AAAKI,AAEH,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACC,AAEG,AAAA,AAACF,AACD,AAAA,AAACA,AACD,AAAA,AAACA,AACD,AAAA,AAACA,AACD,AAAA,AAACA,AACD,AAAA,AAACA,AACD,AAAA,AAACA,AACD,AAAA,AAACA,AACD,AAAA,AAACA;AAGP,AAAA,AAAMG,AAAcN;AAApB,AACE,AAAA,AAACO,AAAmB,AAAA,AAACb,AAAmBC,AAA6BK;;AAEvE;;;AAAA,AAAMQ,AAEHC,AAAKC,AAAOC;AAFf,AAGM,AAAA,AAACC,AAAe,AAAA;;AACpB,AAAA,AAACC,AAAOC,AAAOL,AAAKC,AAAOC;;AAE7B,AAAKI,AACH,AAACC,AAAQC,AAAQC;AAEnB,AAAA,AAAA,AAAA,AAAA,AAACC,AAASf,AAAqB,AAAA,AAAA,AAAI,AAACR,AACLY,AACA,AAACY,AAAI,AAACxB;AAErC","names":["cljs.core/enable-console-print!","predict-prostate.router/old-browser","js/goog.object.get","js/window","predict-prostate.router/use-hash-fragment","or__4126__auto__","js/goog.DEBUG","predict-prostate.router/docroot","url","predict-prostate.router/base","predict-prostate.router/iref","predict-prostate.router/rooted","predict-prostate.router/router","bide.core/router","predict-prostate.router/set-location","js/goog.object.set","predict-prostate.router/on-navigate","name","params","query","js/$","cljs.core/reset!","predict-prostate.state.run-time/route","predict-prostate.router/navigate-to","cljs.core.partial","pubsub.feeds/publish","predict-prostate.state.run-time/route-change","bide.core/start!","cljs.core/not"],"sourcesContent":["(ns predict-prostate.router\n  (:require [bide.core :as r]\n            [predict-prostate.state.run-time :refer [route route-change]]\n            [pubsub.feeds :refer [publish]]\n            )\n  )\n\n(enable-console-print!)\n\n(def old-browser (js/goog.object.get js/window \"oldBrowser\"))\n\n(defn use-hash-fragment [] (or goog.DEBUG old-browser))\n\n(defn docroot [url] (str \"/\" url))\n\n(def base (if goog.DEBUG \"\" \"\"))\n\n; internal hrefs\n(defn iref [url] (str (if (use-hash-fragment) \"\" \"\") base url))\n; was (defn iref [url] (str (if (use-hash-fragment) \"#\" \"\") base url)), but this fails on maths pdf\n\n(defn rooted [url] (str (if (use-hash-fragment) \"\" \"\") url))\n;(def rooted identity)\n\n(def router\n  \"Longest path must be first.\"\n  (r/router\n    [\n     [(rooted \"/\") :home]\n     [(rooted \"/home\") :home]\n     [(rooted \"/about/:page/:section\") :about]\n     [(rooted \"/about/:page\") :about]\n     [(rooted \"/about\") :about]\n     [(rooted \"/tool\") :tool]\n     [(rooted \"/legal/:page\") :legal]\n     [(rooted \"/legal\") :legal]\n     [(rooted \"/contact\") :contact]\n     ]))\n\n(defn set-location [url]\n  (js/goog.object.set (js/goog.object.get js/window \"location\") \"href\" url))\n\n(defn on-navigate\n  \"A function which will be called on each route change.\"\n  [name params query]\n  (-> (js/$ \".modal\") (.modal \"hide\"))                      ;Hide any visible modals after navigation\n  (reset! route [name params query]))\n\n(def navigate-to\n  (partial publish route-change))\n\n(r/start! router {:default     (if (use-hash-fragment) :not-found :home)\n                  :on-navigate on-navigate\n                  :html5?      (not (use-hash-fragment))})\n\n(comment\n\n  (r/resolve router :about {:page \"history\"} nil)\n  ;=> \"/about/history\n\n  )"]}