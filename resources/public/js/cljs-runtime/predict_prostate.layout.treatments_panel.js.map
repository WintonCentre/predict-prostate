{"version":3,"sources":["predict_prostate/layout/treatments_panel.cljs"],"mappings":"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","names":["cljs-css-modules.runtime/inject-style!","cljs.core.apply","garden.core/css","predict-prostate.layout.treatments-panel/treatments-style","predict-prostate.layout.treatments-panel/treatment-input-style","rum.core/build-defc","p__37028","map__37030","cljs.core/--destructure-map","cljs.core.get","js/React.createElement","sablono.util/join-classes","sablono.interpreter/interpret","predict-prostate.layout.treatments-panel/dummy-input","rum.core/reactive","rum.core/static","label","help-id","key","error","props","children","G__37034","predict-prostate.components.button/small-help-button","clojure.string/replace","clojure.string/lower-case","cljs.core/name","p__37051","map__37052","sablono.interpreter/attributes","predict-prostate.layout.treatments-panel/treatment-input","predict-prostate.mixins/treatment-monitor","ttt","tk","G__37054","cljs.core.merge","cljs.core._EQ_","rum.core/react","predict-prostate.state.run-time/input-cursor","G__37058","cljs.core.keyword","predict-prostate.layout.treatments-panel/add-suffix","n","predict-prostate.layout.treatments-panel/assumed-treatment","G__37063","G__37064","predict-prostate.state.run-time/input-label","predict-prostate.state.run-time/input-widget","predict-prostate.layout.treatments-panel/labelled-treatment","G__37066","G__37067","predict-prostate.state.load-config/render-widget","rum.core/build-defcs","p__37068","map__37078","attrs37082","cljs.core/map?","predict-prostate.layout.treatments-panel/treatments-form","predict-prostate.mixins/sizing-mixin","state","width","font-scale","h-over-w","option","width-1","predict-prostate.layout.treatments-panel/treatments-options","predict-prostate.state.run-time/results-cursor","G__37094"],"sourcesContent":["(ns predict-prostate.layout.treatments-panel\n  (:require                                                 ;[org.martinklepsch.derivatives :as derivs :refer [drv]]\n            [rum.core :as rum]\n            [clojure.string :as s :refer [replace lower-case]]\n            [cljs-css-modules.macro :refer-macros [defstyle]]\n            [graphics.simple-icons :refer [icon]]\n            [predict-prostate.mixins :refer [sizing-mixin treatment-monitor]]\n            [predict-prostate.state.run-time :refer [model results-cursor input-widget input-cursor input-label]]\n            [predict-prostate.components.panels :refer [titled-panel]]\n            [predict-prostate.components.button :refer [small-help-button treatment-help-button]]\n            [predict-prostate.state.load-config :refer [live-keys-by-model render-widget]]\n            [predict-prostate.content-reader :refer [all-subsections]]\n            [pubsub.feeds :refer [publish]]\n            ))\n\n(defstyle treatments-style\n  [\"div\" {:font-size \"12px\"}]\n  [\".treatments-header\"\n   {:background-color \"rgba(255, 140, 0, 1) !important\"\n    :color            \"white !important\"\n    :font-size        \"10px !important\"}\n   [\"form\" {:border \"1px solid red\"}]])\n\n(defstyle treatment-input-style\n  [\".closer\" {:margin-bottom \"10px\"}])\n\n(rum/defc dummy-input < rum/reactive rum/static\n  [{:keys [label help-id key error] :as props} children]\n\n  #_[:div {:key   key :data-key key\n           :class (str \"form-group \" (:closer treatment-input-style) (if error \" has-error\" \"\"))}\n     [:.col-xs-6\n      [:label.control-label {:style {:width \"100%\" :text-align \"right\"} :for (name key)} label \" \"\n       (when help-id (small-help-button {:help-id (s/replace (lower-case help-id) \" \" \"-\")}))\n       ]]\n     [:.col-xs-6\n      children]]\n\n  [:div {:key   key :data-key key\n         :class (str \"form-group \")\n         :style {:vertical-align \"top\"\n                 :width          \"100%\"\n                 :display        \"inline-block\"}}\n\n   [:div {:style {:display        \"inline-block\"\n                  :margin-left    \"10px\"\n                  :width          \"30px\"\n                  :vertical-align \"middle\"}}\n    (when help-id (small-help-button {:help-id (s/replace (lower-case help-id) \" \" \"-\")}))]\n\n   [:div {:style {:display        \"inline-block\"\n                  :vertical-align \"middle\"\n                  :width          \"100px\"}}\n    [:label.control-label {:style {:width      \"100%\"\n                                   :text-align \"left\"\n                                   :padding    \"1px 5px\"} :for (name key)} label\n     ]]\n\n   [:div {:style {:display        \"inline-block\"\n                  :margin-left    \"10px\"\n                  :text-align     \"left\"\n                  :width          \"auto\"                    ;\"calc(100% - 150px)\"\n                  :vertical-align \"middle\"\n                  }}\n    [:div {:style {:padding-left   0\n                   :display        \"inline-block\"\n                   :vertical-align \"middle\"\n                   }} children]]]\n\n  )\n\n(rum/defc treatment-input < rum/reactive rum/static treatment-monitor\n  [{:keys [ttt label help-id key]} children]\n  (let [tk key]\n    [:div {:key   key :data-key key\n           :class (str \"form-group \")\n           :style {:vertical-align \"top\"\n                   :width          \"100%\"\n                   :display        \"inline-block\"}}\n\n     [:div {:style {:display        \"inline-block\"\n                    :margin-left    \"10px\"\n                    :width          \"30px\"\n                    :vertical-align \"middle\"}}\n      (when help-id (small-help-button {:help-id (s/replace (lower-case help-id) \" \" \"-\")}))]\n\n     [:div {:style {:display        \"inline-block\"\n                    :vertical-align \"middle\"\n                    :width          \"100px\"}}\n      [:label.control-label {:style (merge {:width     \"100px\"\n                                            :textAlign \"left\"\n                                            :padding   \"1px 5px\"}\n                                           (when (= :disabled (rum/react (input-cursor key)))\n                                             {:color \"#CCC\"}))\n                             :for   (name key)}\n       (ttt [(keyword (str \"treatment/\" (name key))) label]) #_label]]\n     [:div {:style {:display        \"inline-block\"\n                    :margin-left    \"10px\"\n                    :text-align     \"left\"\n                    :width          \"auto\"                  ;\"calc(100% - 150px)\"\n                    :vertical-align \"middle\"\n                    }}\n      [:div {:style {:padding-left   0\n                     :display        \"inline-block\"\n                     :vertical-align \"middle\"\n                     }} children]\n      ]\n\n     ])\n  )\n\n\n(defn add-suffix [key n] key)\n\n(comment\n  (add-suffix :chemo 0)\n  ; => :chemo\n  )\n\n\n(rum/defc assumed-treatment < rum/reactive\n                              \"Creates a labelled treatment input widget for the given treatment option and key\"\n  [label key]\n  (dummy-input {:label   (input-label key)                  ; (if-let [lab (input-label key-n)] lab label)\n                :help-id label\n                :key     key}\n               (input-widget key)))\n\n(rum/defc labelled-treatment < rum/reactive\n                               \"Creates a labelled treatment input widget for the given treatment option and key\"\n  [ttt label key]\n  (treatment-input {:ttt ttt\n                    :label   (input-label key)              ; (if-let [lab (input-label key-n)] lab label)\n                    :help-id label\n                    :key     key}\n                   (render-widget ttt key) #_(input-widget key)))\n\n\n(rum/defcs treatments-form < rum/reactive sizing-mixin\n  [state {:keys [ttt width font-scale h-over-w option]\n          :or   {width      \"100%\"\n                 h-over-w   1\n                 font-scale 1}}]\n  (let [width-1 (rum/react (:width state))]\n\n    [:form.form-horizontal {:style {:width     width\n                                    :font-size (* (/ width-1 25) font-scale)}}\n     [:div\n      (labelled-treatment ttt \"Regime\" :primary-rx)\n      ]]))\n\n\n\n(rum/defc treatments-options < rum/reactive\n  [ttt]\n  (when (rum/react results-cursor)\n    (treatments-form {:ttt ttt :h-over-w 1.5}))\n  )\n\n\n(comment\n\n  (live-keys-by-model model)\n  (:chemo (live-keys-by-model model))\n  )"]}