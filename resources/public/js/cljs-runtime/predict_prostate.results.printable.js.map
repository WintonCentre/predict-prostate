{"version":3,"sources":["predict_prostate/results/printable.cljs"],"mappings":"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","names":["var_args","args__4742__auto__","len__4736__auto__","i__4737__auto__","argseq__4743__auto__","cljs.core/IndexedSeq","predict-prostate.results.printable/avoid-break","seq44170","self__4724__auto__","cljs.core/seq","content","cljs.core.reduce","cljs.core/conj","predict-prostate.results.printable/ttt-input-label","ttt","key","predict-prostate.components.util/widget-ttt","predict-prostate.state.run-time/input-label","predict-prostate.results.printable/break-before","seq44172","predict-prostate.results.printable/option-range","n","cljs.core.into","cljs.core.map","cljs.core.juxt","cljs.core/identity","cljs.core/str","cljs.core.range","rum.core/build-defc","js/React.createElement","attrs44174","cljs.core.apply","cljs.core/map?","sablono.interpreter/attributes","sablono.interpreter/interpret","attrs44175","attrs44182","attrs44183","attrs44186","attrs44187","attrs44190","attrs44191","attrs44215","attrs44216","attrs44226","attrs44227","attrs44233","attrs44234","attrs44248","attrs44249","attrs44258","attrs44259","attrs44261","attrs44262","predict-prostate.results.printable/inputs-in-print","rum.core/reactive","G__44177","G__44179","rum.core/react","predict-prostate.state.run-time/input-cursor","G__44196","fexpr__44195","G__44202","fexpr__44201","G__44198","G__44206","G__44210","fexpr__44207","G__44222","fexpr__44221","G__44225","fexpr__44224","G__44229","fexpr__44228","G__44239","fexpr__44238","G__44242","fexpr__44241","G__44240","G__44243","G__44247","fexpr__44246","G__44251","fexpr__44250","G__44254","fexpr__44253","G__44252","G__44255","G__44257","fexpr__44256","attrs44263","sablono.normalize.merge_with_class","predict-prostate.results.printable/treatment-note","title","predict_prostate.results.printable.avoid_break","predict-prostate.results.printable/treatments-in-print","horm","horm-label","chemo-label","tra-label","bis-label","chemo","tra","bis","cljs.core._EQ_","cljs.core/not","or__4126__auto__","G__44265","fexpr__44264","G__44266","G__44267","cljs.core/rest","predict_prostate.content_reader.section","G__44268","G__44269","G__44270","G__44271","G__44272","G__44273","attrs44274","predict-prostate.results.printable/results-in-print","predict-prostate.mixins/set-default","G__44275","predict_prostate.results.printable.break_before","G__44276","G__44288","G__44277","G__44289","predict-prostate.results.curves/results-in-curves","G__44278","G__44290","predict-prostate.state.run-time/year-selected","G__44279","G__44291","predict-prostate.results.table/results-in-table","G__44280","G__44292","G__44281","G__44293","predict-prostate.results.charts/results-in-charts","G__44282","G__44294","G__44283","G__44295","G__44284","G__44296","predict-prostate.results.icons/results-in-icons*","G__44285","G__44297","G__44286","G__44298","predict-prostate.results.text/results-in-text","G__44287","G__44299","predict-prostate.results.sidefx/results-in-sidefx","predict-prostate.layout.header/footer"],"sourcesContent":["(ns predict-prostate.results.printable\n  (:require [clojure.string :refer [split join capitalize]]\n            [rum.core :as rum]\n            [predict-prostate.components.helpful-form-groups :refer [form-entry]]\n            [predict-prostate.state.config :refer [input-groups get-input-default]]\n            [predict-prostate.content-reader :refer [section]]\n            [predict-prostate.state.run-time :refer [input-cursor input-change input-widget input-label results-cursor year-selected unknown]]\n            [predict-prostate.components.button :refer [year-picker]]\n            [predict-prostate.mixins :refer [set-default]]\n            [predict-prostate.layout.header :refer [footer]]\n            [pubsub.feeds :refer [publish]]\n\n            [predict-prostate.results.table :refer [results-in-table]]\n            [predict-prostate.results.curves :refer [results-in-curves]]\n            [predict-prostate.results.charts :refer [results-in-charts]]\n            [predict-prostate.results.text :refer [results-in-text]]\n            [predict-prostate.results.icons :refer [results-in-icons*]]\n            [predict-prostate.results.sidefx :refer [results-in-sidefx]]\n            [predict-prostate.components.util :refer [widget-ttt]]\n    #_[cljs-css-modules.macro :refer-macros [defstyle]]\n            ))\n\n#_(defstyle styles\n            [\"p\" {:font-size \"12px\"}]\n            )\n\n\n\n(defn avoid-break [& content]\n  (reduce conj [:div {:style {:break-inside \"avoid\"}}] content))\n\n(defn ttt-input-label\n  [ttt key]\n  (widget-ttt ttt \"help\" key (input-label key)))\n\n(defn break-before [& content]\n  (reduce conj [:div {:style {:break-before \"always\" :page-break-before \"always\"}}] content))\n\n(defn option-range\n  [n]\n  (into {} (map (juxt identity str) (range 1 n))))\n\n(rum/defc inputs-in-print < rum/reactive [ttt]\n  [:.row\n   [:.col-sm-8.col-sm-offset-2\n    [:table.table.table-bordered.table-responsive {:style {:font-size \"16px\"}}\n     [:thead\n      [:tr\n       [:th (ttt [:print/input \"Input\"])]\n       [:th (ttt [:print/value \"Value\"])]]]\n     [:tbody\n      [:tr\n       [:td (ttt-input-label ttt :age)]\n       [:td (rum/react (input-cursor :age))]]\n      [:tr\n       [:td (ttt-input-label ttt :psa)]\n       [:td (rum/react (input-cursor :psa))]]\n      [:tr\n       [:td (ttt-input-label ttt :t-stage)\n        (when (#{4} (rum/react (input-cursor :t-stage)))\n          [:div {:style {:color      \"#686868\"\n                         :margin-top 0}}\n           [:i.fa.fa-exclamation-triangle {:aria-hidden \"true\" :style {:color \"orange\" :padding-right 5}}]\n           (ttt [:patient/lwtstages \"The tool is less well tested in higher stages\"])])]\n       [:td ((option-range 5) (rum/react (input-cursor :t-stage)))]]\n      [:tr\n       [:td (ttt-input-label ttt :h-admissions)]\n       [:td ({0 \"No\" 1 \"Yes\"} (rum/react (input-cursor :h-admissions)))]]\n      (when (pos? (rum/react (input-cursor :h-admissions)))\n        [:tr\n         [:td (ttt-input-label ttt :charlson-comorbidity)]\n         [:td ({0 \"No\" 1 \"Yes\"} (rum/react (input-cursor :charlson-comorbidity)))]])\n      [:tr\n       [:td (ttt-input-label ttt :brca)]\n       [:td ({0 \"No\" 1 \"Yes\"} (rum/react (input-cursor :brca)))]]\n      [:tr\n       [:td (ttt-input-label ttt :grade-group)\n        (when (#{4 5} (rum/react (input-cursor :grade-group)))\n          [:div {:style {:color      \"#686868\"\n                         :margin-top 0}}\n           [:i.fa.fa-exclamation-triangle {:aria-hidden \"true\" :style {:color \"orange\" :padding-right 5}}]\n           (ttt [:tumour/lwt \"The tool is less well tested for higher scores\"])])]\n       [:td ((option-range 6) (rum/react (input-cursor :grade-group)))]]\n      [:tr\n       [:td (ttt-input-label ttt :gleason)\n        (when (#{4 5} (rum/react (input-cursor :grade-group)))\n          [:div {:style {:color       \"#686868\"\n                         :margin-top  0}}\n           [:i.fa.fa-exclamation-triangle {:aria-hidden \"true\" :style {:color \"orange\" :padding-right 5}}]\n           (ttt [:tumour/lwt \"The tool is less well tested for higher scores\"])])]\n       [:td ((into {} [[1 \"3+3\"]\n                       [2 \"3+4\"]\n                       [3 \"4+3\"]\n                       [4 \"8\"]\n                       [5 \"9 or 10\"]]) (rum/react (input-cursor :gleason)))\n        ]]\n      [:tr\n       [:td (ttt-input-label ttt :biopsy-cores-taken)]\n       [:td (rum/react (input-cursor :biopsy-cores-taken))]]\n      [:tr\n       [:td (ttt-input-label ttt :biopsy-cores-involved)]\n       [:td (rum/react (input-cursor :biopsy-cores-involved))]]\n      ]]\n\n    ]])\n\n(rum/defc treatment-note [title content]\n\n  [:.col-xs-12\n   (avoid-break\n     [:h4 title]\n     content)]\n  )\n\n(rum/defc treatments-in-print < rum/reactive [ttt]\n  (let [horm (rum/react (input-cursor :horm))\n        horm-label (input-label :horm)\n        chemo-label (input-label :chemo)\n        tra-label (input-label :tra)\n        bis-label (input-label :bis)\n        chemo (rum/react (input-cursor :chemo))\n        tra (rum/react (input-cursor :tra))\n        bis (= :yes (rum/react (input-cursor :bis)))]\n    (if-not (or horm chemo tra bis)\n      [:h2 \"No Treatments Selected after Surgery\"]\n      [:.row\n       [:.col-sm-12\n        [:h2 \"Treatments after Surgery\"]\n        [:section.print-bigger\n         \"Selected treatments after surgery are:\"\n         (when horm [:li horm-label])\n         (when chemo [:li chemo-label \" (\" ({:3rd \"3rd generation\" :2nd \"2nd generation\" :none \"None\"} (rum/react (input-cursor :chemo))) \")\"])\n         (when tra [:li tra-label])\n         (when bis [:li bis-label])]\n        [:.row.print-smaller\n         (when horm (treatment-note horm-label (when horm [:div (rest (section ttt \"hormone-therapy\"))])))\n         (when chemo (treatment-note chemo-label (when chemo [:div (rest (section ttt \"chemotherapy\"))])))\n         (when tra (treatment-note tra-label (when tra [:div (rest (section ttt \"trastuzumab\"))])))\n         (when bis (treatment-note bis-label (when bis [:div (rest (section ttt \"bisphosphonates\"))])))\n         ]]])))\n\n\n\n(rum/defc results-in-print\n  < rum/reactive (set-default :result-year)\n  [ttt]\n\n  [:.row\n   [:.col-sm-12\n\n    (avoid-break\n      [:h4 (ttt [:print/inputs \"Inputs\"])]\n      (inputs-in-print ttt))\n\n    (break-before\n      (avoid-break\n        [:h4 (ttt [:print/surv-curve \"Survival curve\"])]\n        [:div {:style {:max-width \"100%\" :margin-left \"0%\"}}\n         (results-in-curves {:printable true :ttt ttt})]))\n\n    (break-before\n      (avoid-break\n        ;[:p {:style {:margin-top \"15px\"}} \"Survival estimates are based on the treatment you have selected.\"]\n        [:h4 (ttt [:print/surv-table-1 \"Survival table\"]) \" - \" (rum/react (year-selected)) \" \" (ttt [:print/surv-table-2 \"years after diagnosis.\"])]\n        [:div {:style {:max-width \"60%\" :margin-left \"0%\"}}\n         (results-in-table ttt)\n         ]))\n\n    (break-before\n      (avoid-break\n        [:h4 (ttt [:print/surv-chart \"Survival chart\"])]\n        (results-in-charts {:printable true :ttt ttt})))\n\n    (break-before\n      (avoid-break\n        [:h4 (ttt [:print/icarray-1 \"Icon array showing\"]) \" \" (rum/react (year-selected)) \" \" (ttt [:print/icarray-2 \"year outcomes for 100 men\"])]\n        (results-in-icons* {:ttt ttt :printable true})\n        ))\n\n    (break-before\n      [:h4 (ttt [:print/sum-title \"In Summary\"])]\n      (results-in-text {:printable true :ttt ttt}))\n\n    (break-before\n      [:h4 (ttt [:print/potharm-title \"Potential Harms of treatments\"])]\n      (results-in-sidefx ttt)\n      )\n\n    (footer)]])\n\n"]}