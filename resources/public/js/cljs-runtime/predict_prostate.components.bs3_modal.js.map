{"version":3,"sources":["predict_prostate/components/bs3_modal.cljs"],"mappings":"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","names":["predict-prostate.components.bs3-modal/hide","element-id","interop.jsx.jq$call","rum.core/build-defc","vec__34238","seq__34239","cljs.core/seq","first__34240","cljs.core/first","cljs.core/next","js/React.createElement","attrs34245","cljs.core.apply","cljs.core/map?","sablono.interpreter/attributes","sablono.normalize.merge_with_class","sablono.interpreter/interpret","attrs34244","predict-prostate.components.bs3-modal/top-modal","rum.core/reactive","help-key","rum.core/react","predict-prostate.state.run-time/help-key-cursor","help","predict_prostate.content_reader.section","help-header","help-content","help-text","cljs.core.into","cljs.core/cons","predict-prostate.state.run-time/help-key-change","predict-prostate.components.bs3-modal/cancel-or-print","js/print","G__34251","G__34252","graphics.simple-icons/icon","attrs34253","attrs34254","attrs34255","predict-prostate.components.bs3-modal/print-modal","and__4115__auto__","predict-prostate.state.run-time/print-cursor","predict-prostate.state.run-time/results-cursor","rum.core/with-key","predict-prostate.results.printable/results-in-print","predict-prostate.components.bs3-modal/settings-modal","predict-prostate.state.run-time/settings-change","predict-prostate.state.run-time/input-widget"],"sourcesContent":["(ns predict-prostate.components.bs3-modal\n  (:require [rum.core :as rum]\n            [predict-prostate.content-reader :refer [section]]\n            [predict-prostate.state.run-time :refer [help-key-cursor help-key-change settings-change input-widget settings-cursor print-cursor results-cursor]]\n            [predict-prostate.results.printable :refer [results-in-print]]\n            [pubsub.feeds :refer [publish]]\n            [interop.jsx :refer [jq$ jq$call]]\n            [graphics.simple-icons :as simple]))\n\n(set! *warn-on-infer* false)\n\n\n(defn hide\n  [element-id]\n  (jq$call element-id \"modal\" \"hide\"))\n\n\n(rum/defc top-modal < rum/reactive\n                      \"Note that we are assuming the _single_ modal dialog is mounted on #topModal since we\n                      are using jQuery to locate it.\"\n  []\n  (let [help-key (rum/react help-key-cursor)\n        help (section help-key)\n        [help-header & help-content] (if (seq help)\n                                       help\n                                       [\"help header\" [:p {:style {:color \"red\"}} \"add content for \" help-key]])\n        help-text (into [] (cons :div help-content))\n        ]\n\n    [:#topModal.modal.fade {:role        \"dialog\"\n                            ;:tabIndex -1\n                            :aria-hidden \"true\"}\n     [:.modal-dialog\n      [:.modal-content\n       [:.modal-header\n        [:button.close {:type                    \"button \"\n                        :on-click                #(publish help-key-change nil) ; #(hide \"#topModal\")\n                        :aria-hidden             true\n                        :dangerouslySetInnerHTML {:__html \"&times;\"}}]\n        [:h4.modal-title help-header]]\n       [:.modal-body help-text]\n       [:.modal-footer\n        [:button.btn.btn-default {:type     \"button\"\n                                  :on-click #(publish help-key-change nil) ;#(hide \"#topModal\")\n                                  }\n         \"Close\"]]]]]))\n\n\n\n(rum/defc cancel-or-print []\n  [:div.pull-right\n   [:button.btn.btn-default {:type \"button\"\n                             :on-click #(do (jq$call \"#printModal\" \"modal\" \"hide\"))\n                             }\n    \"Cancel\"]\n   \" \"\n   [:button.btn.btn-primary {:type     \"button\"\n                             :on-click #(do (jq$call \"#printModal\" \"modal\" \"hide\")\n                                            (js/print)\n                                            )\n                             }\n\n    (simple/icon {:family :fa} \"print\") \" Print\"]]\n  )\n\n\n(rum/defc print-modal < rum/reactive\n                        \"Note that we are assuming the _single_ modal dialog is mounted on #topModal since we\n                        are using jQuery to locate it.\"\n  []\n  [:div\n   [:#printModal.modal.fade {:role        \"dialog\"\n                             :tab-index   -1\n                             :aria-hidden \"true\"}\n    [:.modal-dialog.screen-only\n     [:.modal-content\n      [:.modal-header (cancel-or-print)]\n      [:.modal-body (when (and (rum/react print-cursor) (rum/react results-cursor))\n                      [:div\n                       (rum/with-key (results-in-print) 2)])]\n      [:.modal-footer (cancel-or-print)]]]]\n   [:.print-only {::style {:margin \"0 20px\"}} (when (and (rum/react print-cursor) (rum/react results-cursor)) (results-in-print))]])\n\n\n\n(rum/defc settings-modal < rum/reactive\n                           \"Note that we are assuming the _single_ modal dialog is mounted on #topModal since we\n                           are using jQuery to locate it.\"\n  []\n  [:#settingsModal.modal.fade {:role        \"dialog\"\n                               ;:tabIndex -1\n                               :aria-hidden \"true\"}\n   [:.modal-dialog\n    [:.modal-content\n     [:.modal-header\n      [:button.close {:type                    \"button \"\n                      :on-click                #(publish settings-change nil) ;(hide \"#settingsModal\")\n                      :aria-hidden             true\n                      :dangerouslySetInnerHTML {:__html \"&times;\"}}]\n      [:h4.modal-title \"Settings\"]]\n     [:.modal-body\n\n      [:p \"Choose a plot style for treatment benefit\"]\n      (input-widget :plot-style)\n\n      [:.modal-footer\n       [:button.btn.btn-default {:type     \"button\"\n                                 :on-click #(publish settings-change nil) ; #(hide \"#settingsModal\")\n                                 }\n        \"Close\"]]]]]])\n"]}