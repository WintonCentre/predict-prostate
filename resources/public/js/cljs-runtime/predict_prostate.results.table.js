goog.provide('predict_prostate.results.table');
predict_prostate.results.table.set_default = (function predict_prostate$results$table$set_default(key){

return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"did-mount","did-mount",918232960),(function (state){
return state;
})], null);
});
predict_prostate.results.table.year_selected = (function predict_prostate$results$table$year_selected(){

return predict_prostate.state.run_time.input_cursor(new cljs.core.Keyword(null,"result-year","result-year",1413238532));
});
predict_prostate.results.table.extract_data = (function predict_prostate$results$table$extract_data(results,year,dps){
var conservative_survival = ((1) - (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(results,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"conservative","conservative",-1075714010),new cljs.core.Keyword(null,"pred-PC-cum","pred-PC-cum",1965177836)], null)),year) + cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(results,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"conservative","conservative",-1075714010),new cljs.core.Keyword(null,"pred-NPC-cum","pred-NPC-cum",-1636287417)], null)),year)));
var radical_low_survival = ((1) - (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(results,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"radical-low","radical-low",-2080230438),new cljs.core.Keyword(null,"pred-PC-cum","pred-PC-cum",1965177836)], null)),year) + cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(results,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"radical-low","radical-low",-2080230438),new cljs.core.Keyword(null,"pred-NPC-cum","pred-NPC-cum",-1636287417)], null)),year)));
var radical_high_survival = ((1) - (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(results,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"radical-high","radical-high",1024405463),new cljs.core.Keyword(null,"pred-PC-cum","pred-PC-cum",1965177836)], null)),year) + cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(results,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"radical-high","radical-high",1024405463),new cljs.core.Keyword(null,"pred-NPC-cum","pred-NPC-cum",-1636287417)], null)),year)));
var radical_survival = ((1) - (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(results,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"radical","radical",1159030213),new cljs.core.Keyword(null,"pred-PC-cum","pred-PC-cum",1965177836)], null)),year) + cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(results,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"radical","radical",1159030213),new cljs.core.Keyword(null,"pred-NPC-cum","pred-NPC-cum",-1636287417)], null)),year)));
var data = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"dotted-orange","dotted-orange",-573056274),predict_prostate.results.util.percent.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(results,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"conservative","conservative",-1075714010),new cljs.core.Keyword(null,"NPC-survival","NPC-survival",-1399930619)], null)),year),dps),new cljs.core.Keyword(null,"conservative","conservative",-1075714010),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"overall","overall",-704031008),predict_prostate.results.util.percent.cljs$core$IFn$_invoke$arity$2(conservative_survival,dps),new cljs.core.Keyword(null,"benefit","benefit",-190946480),"-"], null),new cljs.core.Keyword(null,"radical","radical",1159030213),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"overall","overall",-704031008),predict_prostate.results.util.percent.cljs$core$IFn$_invoke$arity$2(radical_survival,dps),new cljs.core.Keyword(null,"benefit-low","benefit-low",1727677898),predict_prostate.results.util.percent.cljs$core$IFn$_invoke$arity$2((radical_low_survival - conservative_survival),dps),new cljs.core.Keyword(null,"benefit-high","benefit-high",-712554386),predict_prostate.results.util.percent.cljs$core$IFn$_invoke$arity$2((radical_high_survival - conservative_survival),dps),new cljs.core.Keyword(null,"benefit","benefit",-190946480),predict_prostate.results.util.percent.cljs$core$IFn$_invoke$arity$2((radical_survival - conservative_survival),dps)], null)], null);
return data;
});
predict_prostate.results.table.tables = rum.core.build_defc((function (data,uncertainty_QMARK_){
var radical_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((1),rum.core.react(predict_prostate.state.run_time.input_cursor(new cljs.core.Keyword(null,"primary-rx","primary-rx",-1656848904))));
return React.createElement("div",({"style": ({"marginTop": "15px", "fontSize": "1.2em"}), "className": "table-responsive"}),React.createElement("table",({"style": ({"padding": (0), "margin": (0), "fontSize": "16px"}), "className": "table table-hover"}),React.createElement("thead",null,React.createElement("tr",null,React.createElement("th",null,"Treatment"),React.createElement("th",null,"Additional Benefit"),React.createElement("th",null,"Overall Survival %"))),React.createElement("tbody",null,React.createElement("tr",null,React.createElement("td",null,"Initial conservative management "),React.createElement("td",null,"-"),(function (){var attrs128965 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(data,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"conservative","conservative",-1075714010),new cljs.core.Keyword(null,"overall","overall",-704031008)], null));
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(React.createElement,"td",((cljs.core.map_QMARK_(attrs128965))?sablono.interpreter.attributes(attrs128965):null),((cljs.core.map_QMARK_(attrs128965))?null:new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret(attrs128965)], null)));
})()),sablono.interpreter.interpret(((radical_QMARK_)?new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"tr","tr",-1424774646),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"td","td",1479933353),"Radical treatment"], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"td","td",1479933353),cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(data,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"radical","radical",1159030213),new cljs.core.Keyword(null,"benefit","benefit",-190946480)], null)),(cljs.core.truth_(uncertainty_QMARK_)?[" (",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(data,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"radical","radical",1159030213),new cljs.core.Keyword(null,"benefit-high","benefit-high",-712554386)], null))),"\u2013",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(data,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"radical","radical",1159030213),new cljs.core.Keyword(null,"benefit-low","benefit-low",1727677898)], null))),")"].join(''):null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"td","td",1479933353),cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(data,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"radical","radical",1159030213),new cljs.core.Keyword(null,"overall","overall",-704031008)], null))], null)], null):null)),React.createElement("tr",null,React.createElement("td",({"colSpan": (3)}),"If deaths from prostate cancer were excluded ",sablono.interpreter.interpret(cljs.core.get.cljs$core$IFn$_invoke$arity$2(data,new cljs.core.Keyword(null,"dotted-orange","dotted-orange",-573056274)))," would survive ",sablono.interpreter.interpret(rum.core.react(predict_prostate.state.run_time.input_cursor(new cljs.core.Keyword(null,"result-year","result-year",1413238532))))," years.")))));
}),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [rum.core.reactive], null),"tables");
predict_prostate.results.table.results_in_table = rum.core.build_defc((function (ttt){
var radical_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((1),rum.core.react(predict_prostate.state.run_time.input_cursor(new cljs.core.Keyword(null,"primary-rx","primary-rx",-1656848904))));
var year = rum.core.react(predict_prostate.state.run_time.input_cursor(new cljs.core.Keyword(null,"result-year","result-year",1413238532)));
var uncertainty_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"yes","yes",182838819),rum.core.react(predict_prostate.state.run_time.input_cursor(new cljs.core.Keyword(null,"show-uncertainty","show-uncertainty",-166217605))));
var data = predict_prostate.results.table.extract_data(rum.core.react(predict_prostate.state.run_time.results_cursor),year,((uncertainty_QMARK_)?(1):(0)));
var text1 = "This table shows the percentage of men who survive at least ";
var text2 = " years after diagnosis, based on the information you have provided.";
return React.createElement("div",({"style": ({"marginTop": (15)}), "className": "row"}),React.createElement("div",({"style": ({"fontSize": (16)}), "className": "col-sm-12 screen-only"}),sablono.interpreter.interpret(text1),(function (){var attrs128978 = (predict_prostate.components.button.year_picker.cljs$core$IFn$_invoke$arity$1 ? predict_prostate.components.button.year_picker.cljs$core$IFn$_invoke$arity$1(ttt) : predict_prostate.components.button.year_picker.call(null,ttt));
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(React.createElement,"span",((cljs.core.map_QMARK_(attrs128978))?sablono.interpreter.attributes(sablono.normalize.merge_with_class.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"class","class",-2030961996),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["screen-only"], null)], null),attrs128978], 0))):({"className": "screen-only"})),((cljs.core.map_QMARK_(attrs128978))?null:new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret(attrs128978)], null)));
})(),sablono.interpreter.interpret(text2)),(function (){var attrs128975 = text1;
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(React.createElement,"div",((cljs.core.map_QMARK_(attrs128975))?sablono.interpreter.attributes(sablono.normalize.merge_with_class.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"class","class",-2030961996),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["col-sm-12","print-only"], null)], null),attrs128975], 0))):({"className": "col-sm-12 print-only"})),((cljs.core.map_QMARK_(attrs128975))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var attrs128976 = year;
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(React.createElement,"span",((cljs.core.map_QMARK_(attrs128976))?sablono.interpreter.attributes(sablono.normalize.merge_with_class.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"class","class",-2030961996),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["print-only"], null)], null),attrs128976], 0))):({"className": "print-only"})),((cljs.core.map_QMARK_(attrs128976))?null:new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret(attrs128976)], null)));
})(),sablono.interpreter.interpret(text2)], null):new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret(attrs128975),(function (){var attrs128977 = year;
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(React.createElement,"span",((cljs.core.map_QMARK_(attrs128977))?sablono.interpreter.attributes(sablono.normalize.merge_with_class.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"class","class",-2030961996),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["print-only"], null)], null),attrs128977], 0))):({"className": "print-only"})),((cljs.core.map_QMARK_(attrs128977))?null:new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret(attrs128977)], null)));
})(),sablono.interpreter.interpret(text2)], null)));
})(),React.createElement("div",({"style": ({"marginBottom": "15px"}), "className": "col-sm-12"}),sablono.interpreter.interpret((predict_prostate.results.table.tables.cljs$core$IFn$_invoke$arity$2 ? predict_prostate.results.table.tables.cljs$core$IFn$_invoke$arity$2(data,uncertainty_QMARK_) : predict_prostate.results.table.tables.call(null,data,uncertainty_QMARK_))),sablono.interpreter.interpret(((radical_QMARK_)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,".screen-only",".screen-only",-984588690),(function (){var G__128979 = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"key","key",-1516042587),new cljs.core.Keyword(null,"show-uncertainty","show-uncertainty",-166217605),new cljs.core.Keyword(null,"label","label",1718410804),"show-ranges"], null);
return (predict_prostate.components.helpful_form_groups.form_entry.cljs$core$IFn$_invoke$arity$1 ? predict_prostate.components.helpful_form_groups.form_entry.cljs$core$IFn$_invoke$arity$1(G__128979) : predict_prostate.components.helpful_form_groups.form_entry.call(null,G__128979));
})()], null):null))));
}),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [rum.core.reactive], null),"results-in-table");

//# sourceMappingURL=predict_prostate.results.table.js.map
