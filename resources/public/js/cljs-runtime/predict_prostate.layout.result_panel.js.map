{"version":3,"sources":["predict_prostate/layout/result_panel.cljs"],"mappings":"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","names":["predict-prostate.layout.result-panel/tab-label-key","label-key","label","cljs.core/name","cljs.core.keyword","clojure.string/capitalize","var_args","G__56841","predict-prostate.layout.result-panel/safe-check","js/Error","kn1","kn2","predict_prostate.layout.result_panel.safe_check","f","cljs.core._EQ_","rum.core/lazy-build","rum.core/build-defc","daiquiri.core/create-element","daiquiri.util/join-classes","daiquiri.interpreter/interpret","predict-prostate.layout.result-panel/result-tab-button","rum.core/reactive","ttt","rum.core/react","predict-prostate.state.run-time/active-results-pane","predict-prostate.state.run-time/active-results-change","G__56843","predict-prostate.layout.result-panel/result-tab-pane","content","js/window","js/window.ga","predict-prostate.layout.result-panel/result-tabs","rum.core/static","p1__56846#","cljs.core.map","rum.core/with-key","predict-prostate.layout.result-panel/result-panes","predict-prostate.results.charts/results-in-charts","G__56850","predict-prostate.results.icons/results-in-icons*","predict-prostate.results.curves/results-in-curves","predict-prostate.results.table/results-in-table","predict-prostate.results.text/results-in-text","predict-prostate.layout.result-panel/result-panel","G__56852","predict-prostate.layout.treatments-panel/treatments-options","predict-prostate.layout.result-panel/side-panel","predict-prostate.results.util/alison-blue-1","predict-prostate.content-reader/all-subsections","G__56854","cljs.core/deref","fexpr__56853","predict-prostate.state.run-time/input-cursor","cljs.core.not_EQ_","p__56855","map__56856","cljs.core/--destructure-map","cljs.core.get","predict-prostate.layout.result-panel/results","container?","props"],"sourcesContent":["(ns predict-prostate.layout.result-panel\n  (:require [clojure.string :refer [capitalize]]\n            [rum.core :as rum]\n            [predict-prostate.state.run-time :refer [active-results-pane active-results-change input-cursor]]\n            [predict-prostate.layout.treatments-panel :refer [treatments-options]]\n            [predict-prostate.components.panels :refer [titled-panel]]\n            [predict-prostate.results.util :refer [alison-blue-1]]\n            [pubsub.feeds :refer [publish]]\n            [interop.jsx :refer [jsx]]\n            [predict-prostate.results.table :refer [results-in-table]]\n            [predict-prostate.results.curves :refer [results-in-curves]]\n            [predict-prostate.results.charts :refer [results-in-charts]]\n            [predict-prostate.results.icons :refer [results-in-icons*]]\n            [predict-prostate.results.text :refer [results-in-text]]\n            [predict-prostate.results.sidefx :refer [results-in-sidefx]]\n            [predict-prostate.content-reader :refer [all-subsections]]\n            ))\n\n(defn tab-label-key\n  \"Lookup/edit key for a tab given a label or a key for that label\n  ; (tab-label-key :curve)\n  ; => [:tab-label/curve \\\"Curve\\\"]\n  \"\n  [label-key]\n  (let [label (name label-key)]\n    [(keyword (str \"tab-label/\" label)) (capitalize label)]))\n\n(defn safe-check\n  \"Check whether kn1 and kn2 share same names (2-arity) or some other property f (3-arity).\"\n  ([kn1 kn2]\n   (safe-check kn1 kn2 name))\n  ([kn1 kn2 f]\n   (= (f kn1) (f kn2))))\n\n(rum/defc result-tab-button < rum/reactive [ttt label-key]\n  [:li {:role     \"presentation\"\n        :class    (if (safe-check (rum/react active-results-pane) label-key) \"active\" nil)\n        :on-click #(publish active-results-change (name label-key))\n        :style    {:cursor           \"pointer\"\n                   :border-radius    \"3px\"\n                   :background-color \"#def\"}\n        :key      (name label-key)\n        }\n   [:a {:aria-controls (name label-key) :role \"tab\"\n        ;:data-on \"click\" :data-event-category \"Results Tab\" :data-event-action label       ; Old html-tag trigger.\n        } (ttt (tab-label-key label-key))]\n   ])\n\n(rum/defc result-tab-pane < rum/reactive [label content]\n  [:div {:id    label :role \"tabpanel\"\n         :class (str \"tab-pane\" (if (= (rum/react active-results-pane) label) \"active\" nil))\n         }\n   (when (= (rum/react active-results-pane) label)\n     (if content\n       (do (if (exists? js/window.ga)\n             (.ga js/window \"send\" \"event\" \"Results Tab\" label)\n             ) (content))\n       [:p \"No content yet\"])\n     ;(.log js/console \"content called: \" label)\n     )\n   ]\n  )\n\n(rum/defc result-tabs < rum/static [ttt]\n  [:ul.nav.nav-pills {:role  \"tablist\"\n                      :style {:font-size \"16px\"}}\n   (map #(rum/with-key (result-tab-button ttt %) (name %)) [:charts\n                                                            :icons\n                                                            :curves\n                                                            :table \n                                                            :texts])\n   #_[:a {\n        :ga-on \"click\" :ga-event-category \"Results Tab\" :ga-event-action \"test\"\n        :style {:background-color \"green\"}\n        } \"Some test clickable item\"]\n   ])\n\n(rum/defc result-panes < rum/static [ttt]\n  [:.tab-content\n   (result-tab-pane \"charts\" #(results-in-charts {:title (ttt [:chart/title \"Overall Survival\"]) :ttt ttt}))\n   (result-tab-pane \"icons\" #(results-in-icons* {:ttt ttt}))\n   (result-tab-pane \"curves\" #(results-in-curves {:ttt ttt}))\n   (result-tab-pane \"table\" #(results-in-table ttt))\n   (result-tab-pane \"texts\" #(results-in-text {:ttt ttt}))\n   ])\n\n(rum/defc result-panel < rum/reactive [ttt]\n  [:div#results\n   [:h3 {:style {:margin-top 20}} (ttt [:results/title \"Results\"])]\n   (result-tabs ttt)\n   (treatments-options ttt)\n   (result-panes ttt)]\n  )\n\n(rum/defc side-panel [ttt]\n  [:.well {:style {:margin-top 20  :background-color alison-blue-1}}\n   (all-subsections ttt \"tool-postamble\")\n   (when (#{4 5} @(input-cursor :grade-group))\n     (all-subsections ttt \"high-grade-group-warning\"))\n   (when (not= :no @(input-cursor :metastasis))\n     (all-subsections ttt \"metastasis-warning\"))\n   (all-subsections ttt \"scroll-down-for\")\n   ])\n\n(rum/defc results < rum/reactive [{:keys [ttt container?] :as props}]\n  [:div #_(when container? {:class-name \"container\"})\n   [:.row\n    [:.col-md-6.col-md-offset-1\n     (result-panel ttt)]\n    [:.col-md-4\n     (side-panel ttt)]\n    ]])"]}