{"version":3,"sources":["predict_prostate/layout/result_panel.cljs"],"mappings":"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","names":["rum.core/build-defc","js/React.createElement","sablono.util/join-classes","sablono.interpreter/interpret","predict-prostate.layout.result-panel/result-tab-button","rum.core/reactive","label","cljs.core._EQ_","rum.core/react","predict-prostate.state.run-time/active-results-pane","predict-prostate.state.run-time/active-results-change","clojure.string/capitalize","predict-prostate.layout.result-panel/result-tab-pane","content","js/window","js/window.ga","predict-prostate.layout.result-panel/result-tabs","rum.core/static","ttt","p1__179363#","cljs.core.map","rum.core/with-key","attrs179364","cljs.core.apply","cljs.core/map?","sablono.interpreter/attributes","sablono.normalize.merge_with_class","predict-prostate.layout.result-panel/result-panes","G__179365","G__179366","G__179367","predict-prostate.results.charts/results-in-charts","G__179368","G__179369","G__179370","G__179381","G__179382","G__179371","G__179383","predict-prostate.results.icons/results-in-icons*","G__179372","G__179373","G__179384","G__179385","G__179374","G__179387","predict-prostate.results.curves/results-in-curves","G__179376","G__179377","G__179390","G__179391","predict-prostate.results.table/results-in-table","G__179378","G__179379","G__179394","G__179395","G__179380","G__179396","predict-prostate.results.text/results-in-text","predict-prostate.layout.result-panel/result-panel","predict-prostate.layout.treatments-panel/treatments-options","predict-prostate.layout.result-panel/side-panel","predict-prostate.results.util/alison-blue-1","predict-prostate.content-reader/all-subsections","G__179424","cljs.core/deref","fexpr__179423","predict-prostate.state.run-time/input-cursor","cljs.core.not_EQ_","p__179425","map__179426","cljs.core/PROTOCOL_SENTINEL","cljs.core/hash-map","cljs.core.get","attrs179430","attrs179431","predict-prostate.layout.result-panel/results","container?","props"],"sourcesContent":["(ns predict-prostate.layout.result-panel\n  (:require [clojure.string :refer [capitalize]]\n            [rum.core :as rum]\n            [predict-prostate.state.run-time :refer [active-results-pane active-results-change input-cursor]]\n            [predict-prostate.layout.treatments-panel :refer [treatments-options]]\n            [predict-prostate.components.panels :refer [titled-panel]]\n            [predict-prostate.results.util :refer [alison-blue-1]]\n            [pubsub.feeds :refer [publish]]\n            [interop.jsx :refer [jsx]]\n            [predict-prostate.results.table :refer [results-in-table]]\n            [predict-prostate.results.curves :refer [results-in-curves]]\n            [predict-prostate.results.charts :refer [results-in-charts]]\n            [predict-prostate.results.icons :refer [results-in-icons*]]\n            [predict-prostate.results.text :refer [results-in-text]]\n            [predict-prostate.results.sidefx :refer [results-in-sidefx]]\n            [predict-prostate.content-reader :refer [all-subsections]]\n            ))\n\n\n(rum/defc result-tab-button < rum/reactive [label]\n  [:li {:role     \"presentation\"\n        :class    (if (= (rum/react active-results-pane) label) \"active\" nil)\n        :on-click #(publish active-results-change label)\n        :style    {:cursor           \"pointer\"\n                   :border-radius    \"3px\"\n                   :background-color \"#def\"}\n        :key      label\n        }\n   [:a {:aria-controls label :role \"tab\"\n        ;:data-on \"click\" :data-event-category \"Results Tab\" :data-event-action label       ; Old html-tag trigger.\n        } (capitalize label)]\n   ])\n\n(rum/defc result-tab-pane < rum/reactive [label content]\n  [:div {:id    label :role \"tabpanel\"\n         :class (str \"tab-pane\" (if (= (rum/react active-results-pane) label) \"active\" nil))\n         }\n   (when (= (rum/react active-results-pane) label)\n     (if content\n       (do (if (exists? js/window.ga)\n             (.ga js/window \"send\" \"event\" \"Results Tab\" label)\n             ) (content))\n       [:p \"No content yet\"])\n     ;(.log js/console \"content called: \" label)\n     )\n   ]\n  )\n\n(rum/defc result-tabs < rum/static [ttt]\n  [:ul.nav.nav-pills {:role  \"tablist\"\n                      :style {:font-size \"16px\"}}\n   (map #(rum/with-key (result-tab-button %) %) [\"charts\"\n                                                 \"icons\"\n                                                 \"curves\"\n                                                 \"table\"\n                                                 \"texts\"])\n   #_[:a {\n        :ga-on \"click\" :ga-event-category \"Results Tab\" :ga-event-action \"test\"\n        :style {:background-color \"green\"}\n        } \"Some test clickable item\"]\n   ])\n\n(rum/defc result-panes < rum/static [ttt]\n  [:.tab-content\n   (result-tab-pane \"charts\" #(results-in-charts {:title (ttt [:chart/title \"Overall Survival\"]) :ttt ttt}))\n   (result-tab-pane \"icons\" #(results-in-icons* {:ttt ttt}))\n   (result-tab-pane \"curves\" #(results-in-curves {:ttt ttt}))\n   (result-tab-pane \"table\" #(results-in-table ttt))\n   (result-tab-pane \"texts\" #(results-in-text {:ttt ttt}))\n   ])\n\n(rum/defc result-panel < rum/reactive [ttt]\n  [:div#results\n   [:h3 {:style {:margin-top 20}} \"Results\"]\n   (result-tabs ttt)\n   (treatments-options)\n   (result-panes ttt)]\n  )\n\n(rum/defc side-panel [ttt]\n  [:.well {:style {:margin-top 20  :background-color alison-blue-1}}\n   (all-subsections ttt \"tool-postamble\")\n   (when (#{4 5} @(input-cursor :grade-group))\n     (all-subsections ttt \"high-grade-group-warning\"))\n   (when (not= :no @(input-cursor :metastasis))\n     (all-subsections ttt \"metastasis-warning\"))\n   (all-subsections ttt \"scroll-down-for\")\n   ])\n\n(rum/defc results < rum/reactive [{:keys [ttt container?] :as props}]\n  [:div #_(when container? {:class-name \"container\"})\n   [:.row\n    [:.col-md-6.col-md-offset-1\n     (result-panel ttt)]\n    [:.col-md-4\n     (side-panel ttt)]\n    ]])"]}