{"version":3,"sources":["predict_prostate/state/config.cljs"],"mappings":"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","names":["rum.core/lazy-build","rum.core/build-defc","daiquiri.core/create-element","predict-prostate.state.config/any-of-these-diseases","predict-prostate.state.run-time/help-key-change","predict-prostate.state.config/biopsy-core-examples","predict-prostate.state.config/rtl-languages","this__4461__auto__","k__4462__auto__","this__4463__auto__","k33814","else__4464__auto__","G__33818","cljs.core/Keyword","key","label","widget-type","widget-params","read-only","write-only","unknowable","panel","models","default","cljs.core.get","__extmap","this__4481__auto__","f__4482__auto__","init__4483__auto__","cljs.core.reduce","ret__4484__auto__","p__33819","vec__33820","k__4485__auto__","cljs.core.nth","v__4486__auto__","this__4476__auto__","writer__4477__auto__","opts__4478__auto__","pr-pair__4479__auto__","keyval__4480__auto__","cljs.core/pr-sequential-writer","cljs.core.concat","cljs.core/PersistentVector","G__33813","cljs.core/RecordIter","cljs.core/-iterator","cljs.core/nil-iter","this__4459__auto__","__meta","this__4456__auto__","__hash","this__4465__auto__","cljs.core/count","this__4457__auto__","h__4319__auto__","coll__4458__auto__","cljs.core/hash-unordered-coll","this33815","other33816","cljs.core._EQ_","this__4471__auto__","k__4472__auto__","cljs.core/contains?","cljs.core.dissoc","cljs.core/-with-meta","cljs.core.into","cljs.core/not-empty","this__4468__auto__","G__33827","this__4469__auto__","k__4470__auto__","pred__33828","cljs.core/keyword-identical?","expr__33829","cljs.core.assoc","this__4474__auto__","cljs.core/seq","cljs.core/MapEntry","this__4460__auto__","this__4466__auto__","entry__4467__auto__","cljs.core/vector?","cljs.core/-nth","cljs.core/-conj","predict-prostate.state.config/Input-group","this__4505__auto__","cljs.core/List","writer__4506__auto__","cljs.core/-write","G__33817","extmap__4501__auto__","G__33841","cljs.core/record?","predict-prostate.state.config/->Input-group","predict-prostate.state.config/map->Input-group","predict-prostate.state.config/input-groups","predict-prostate.state.run-time/input-cursor","predict-prostate.state.config/get-input-default","input-groups","cljs.core/first","cljs.core.get_in","cljs.core/group-by"],"sourcesContent":["(ns predict-prostate.state.config\n  (:require [rum.core :as rum]\n            [predict-prostate.state.run-time :refer [help-key-change input-cursor]]\n            [pubsub.feeds :refer [->Topic publish create-feed]]\n            ;[tongue.core :as tongue]\n            ;[translations.tongue-base :refer [wrap-translator]]\n            ;[translations.config :refer [initial-supported-langs]]\n            ))\n\n\n(rum/defc any-of-these-diseases []\n  [:span \"Any of \" [:a {:style    {:color  \"#A94342\" :text-decoration \"underline\"\n                                   :cursor \"pointer\"}\n                        :on-click #(publish help-key-change \"comorb\")} \"these diseases?\"]])\n\n\n(rum/defc biopsy-core-examples []\n  [:span \"Any of \" [:a {:style    {:color  \"#CCCCCC\" :text-decoration \"underline\"\n                                   :cursor \"pointer\"}\n                        :on-click #(publish help-key-change \"biopsy-examples\")} \"See examples\"]])\n\n\n;;;\n;; Initial language configuration - this data is used until the full translations files are read in.\n;; It does not have to be very complete as calls to the translator function should include the English default\n;;;\n(def rtl-languages #{:ar :az :dv :he :ku :fa :ur})          ; switch into right to left for these languages\n\n\n\n;;;\n;; Input configuration\n;; key - identifies the input widget\n;; label - labells it when on screen\n;; widget-type - is a key to the multi-method 'make-widget'\n;; widget-params - are used by widget code\n;; read-only - if true, a publication Topic is not created for ths widget\n;; write-only - if true, a cursor is not created for this widget\n;; unknowable - if true, an unknown value is valid\n;; panel - a key indicating the panel where the widget will appear\n;; models - the set of models which use this widget\n;; default - the default value of the widget\n;;;\n(defrecord Input-group [key label widget-type widget-params read-only write-only unknowable panel models default])\n\n\n(def input-groups\n  \"Define all input groups associated with one treatment option. The list of all treatment inputs are\n  added into the list of input-groups at startup.\n\n  If a treatment widget has value 'nil' we do not flag it as an error. Instead we assume the treatment is not\n  to be graphed or displayed. \"\n  [;; treatments first\n   (->Input-group :primary-rx\n                  \"Treatment Regime\"\n                  :radio-group\n                  [[0 \"Conservative\"]\n                   [1 \"Radical\"]\n                   ]\n                  false false nil\n                  :primary-rx\n                  #{\"prostate\" \"prostate-release\"}\n                  0\n                  )\n\n   (->Input-group :plot-style\n                  \"Plot style for treatment benefit\"\n                  :radio-group\n                  [[:area1 \"Area\"]\n                   [:line2 \"Line\"]]\n                  false false nil\n                  :plot-style\n                  #{\"prostate\" \"prostate-release\"}\n                  nil)\n\n\n   ;; INPUTS\n   (->Input-group :age\n                  \"Age at diagnosis\"\n                  :numeric-input\n                  {:min 35 :max 95 :step 1 :precision 0}\n                  false false true\n                  :prp\n                  #{\"prostate\" \"prostate-release\"}\n                  \"\")\n   (->Input-group :ethnicity\n                  \"Ethnic Origin\"\n                  :information\n                  ;\"Please click on the info button\"\n                  [:eth-info \"Please click on the info button\"]\n                  false false true\n                  :prp\n                  #{\"prostate\" \"prostate-release\"}\n                  \"See FAQs\")\n   (->Input-group :psa\n                  \"PSA (ng/ml)\"\n                  :numeric-input\n                  {:min 0 :max 100 :step 1 :precision 3}\n                  false false true\n                  :prp\n                  #{\"prostate\" \"prostate-release\"}\n                  \"\")\n   (->Input-group :t-stage\n                  \"Clinical T stage\"\n                  :radio-group\n                  [[1 \"1\"]\n                   [2 \"2\"]\n                   [3 \"3\"]\n                   [4 \"4\"]]\n                  false false false\n                  :prp\n                  #{\"prostate\" \"prostate-release\"}\n                  nil)\n\n   (->Input-group :grade-group\n                  \"Histological grade group\"\n                  :radio-group\n                  [[1 \"1\"]\n                   [2 \"2\"]\n                   [3 \"3\"]\n                   [4 \"4\"]\n                   [5 \"5\"]]\n                  false false false\n                  :prp\n                  #{\"prostate\" \"prostate-release\"}\n                  nil)\n   (->Input-group :gleason\n                  \"Gleason score\"\n                  :radio-group\n                  [[1 \"3+3\"]\n                   [2 \"3+4\"]\n                   [3 \"4+3\"]\n                   [4 \"8\"]\n                   [5 \"9 or 10\"]]\n                  false false false\n                  :prp\n                  #{\"prostate\" \"prostate-release\"}\n                  nil)\n\n   (->Input-group :brca\n                  \"BRCA\"\n                  :radio-group\n                  [[0 \"Negative or Untested\"]\n                   [1 \"Positive\"]\n                   #_[2 \"Untested\"]]\n                  false false false\n                  :prp\n                  #{\"prostate-release\"}\n                  nil)\n\n   (->Input-group :metastasis\n                  \"Has the cancer spread (metastasis)?\"\n                  :radio-group\n                  [[:no \"No\"]\n                   [:yes \"Yes\"]]\n                  false false true\n                  :prp\n                  #{\"prostate-release\"}\n                  nil)\n\n\n   (->Input-group :intra-ductal\n                  \"Is there an intra-ductal carcinoma or invasive cribriform component reported  in the biopsies?\"\n                  :radio-group\n                  [[:no \"No\"]\n                   [:yes \"Yes\"]]\n                  false false true\n                  :prp\n                  #{\"prostate-release\"}\n                  nil)\n\n   (->Input-group :biopsy50\n                  \"Number of biopsy cores with prostate cancer\"\n                  :radio-group\n                  [[1 \"fewer than half\"]\n                   [2 \"half or more\"]]\n                  false false true\n                  :prp\n                  #{\"prostate\"}\n                  nil)\n\n   (->Input-group :biopsy-done\n                  \"Biopsy data available?\"\n                  :radio-group\n                  [[0 \"No\"]\n                   [1 \"Yes\"]]\n                  false false false\n                  :prp\n                  #{\"prostate-release\"}\n                  \"\")\n\n   (->Input-group :biopsy-cores-taken\n                  \"Biopsy cores taken\"\n                  :numeric-input\n                  {:min 1 :max 100 :step 1 :precision 0}\n                  false false false\n                  :prp\n                  #{\"prostate-release\"}\n                  nil)\n\n   (->Input-group :biopsy-cores-involved\n                  \"Biopsy cores with any prostate cancer in\"\n                  :numeric-input\n                  #_{:min 1 :max :biopsy-cores-taken :step 1 :precision 0}\n                  {:min 1 :max (fn [] (input-cursor :biopsy-cores-taken)) :step 1 :precision 0}\n                  false false false\n                  :prp\n                  #{\"prostate-release\"}\n                  nil)\n\n   (->Input-group :h-admissions\n                  \"Hospital admission in last 2 years?\"\n                  :radio-group\n                  [[0 \"No\"]\n                   [1 \"Yes\"]]\n                  false false false\n                  :prp\n                  #{\"prostate\" \"prostate-release\"}\n                  nil)\n\n   (->Input-group :charlson-comorbidity\n                  (any-of-these-diseases)\n                  :radio-group\n                  [[0 \"No\"]\n                   [1 \"Yes\"]]\n                  false false false\n                  :prp\n                  #{\"prostate\" \"prostate-release\"}\n                  nil)\n\n   ; Switches\n   (->Input-group :result-year\n                  \"Years after diagnosis\"\n                  :radio-group\n                  [[10 \"10 years\"]\n                   [15 \"15 years\"]]\n                  false false false\n                  :tables\n                  #{\"v2.1\"}\n                  10)\n\n   (->Input-group :show-uncertainty\n                  \"More detail?\"\n                  :radio-group\n                  [[:yes \"Yes\"]\n                   [:no \"No\"]]\n                  false false false\n                  :tables\n                  #{\"v2.1\"}\n                  :no)\n\n\n\n   ]\n  )\n\n\n(defn get-input-default [input-groups key]\n  (:default (first (get-in (group-by :key input-groups) [key]))))\n\n\n(comment\n  (group-by :panel input-groups)\n\n  (get-input-default input-groups :nodes)\n  ;=> \"\"\n  )"]}