{"version":3,"sources":["cljs_css_modules/runtime.cljs"],"mappings":";AAGA,AAAKA,AAAgB,AAAA,AAACC;AAEtB,AAAA,AAAMC,AAAeC,AAAQC;AAA7B,AACE,AAAM,AAAaD,AAASC;;AAE9B,AAAA,AAAMC,AAAuBD,AAAME;AAAnC,AACE,AAAMC,AAAK,AAAQC;AACbL,AAAQ,AAAA,AAAgBK;AAD9B,AAEE,AAAQ,AAAA,AAAA,AAAOD;AAAf;AAAA,AAAA,AAAA,AAAAE,AAAA,AAAA,AAAA,AAAA,AAAA;;;AAEA,AAAcF,AAAKJ;;AACnB,AAACD,AAAcC,AAAQC;;AACvB,AAACM,AAAMV,AAAgBW,AAAML,AAAGH;;AAEpC,AAAA,AAAMS,AAAeR,AAAMS,AAAGC;AAA9B,AACE,AAAMR,AAAG,AAACS,AAAO,AAAA,AAAKF,AAAOC;AACvBE,AAAe,AAAAC,AAAA,AAAAC,AAAKlB;AAAL,AAAA,AAAAiB,AAAAA,AAACX,AAAAA,AAAAA;;AADtB,AAEE,AAAIU;AACF,AAACd,AAAcc,AAAeZ;;AAC9B,AAACC,AAAsBD,AAAME","names":["cljs-css-modules.runtime/injected-styles","cljs.core.atom","cljs-css-modules.runtime/update-style!","element","style","cljs-css-modules.runtime/create-style-element!","id","head","js/document","js/Error","cljs.core.swap_BANG_","cljs.core/assoc","cljs-css-modules.runtime/inject-style!","ns","name","cljs.core.symbol","injected-style","G__48193","cljs.core/deref"],"sourcesContent":["(ns cljs-css-modules.runtime\n  (:require [garden.core :refer [css]]))\n\n(def injected-styles (atom {}))\n\n(defn update-style! [element style]\n  (set! (.-innerHTML element) style))\n\n(defn create-style-element! [style id]\n  (let [head (.-head js/document)\n        element (.createElement js/document \"style\")]\n    (assert (some? head)\n            \"An head element is required in the dom to inject the style.\")\n    (.appendChild head element)\n    (update-style! element style)\n    (swap! injected-styles assoc id element)))\n\n(defn inject-style! [style ns name]\n  (let [id (symbol (str ns \"-\" name))\n        injected-style (id @injected-styles)]\n    (if injected-style\n      (update-style! injected-style style)\n      (create-style-element! style id))))\n"]}