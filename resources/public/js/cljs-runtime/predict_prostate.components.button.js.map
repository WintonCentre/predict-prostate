{"version":3,"sources":["predict_prostate/components/button.cljs"],"mappings":"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","names":["rum.core/build-defc","p__33559","map__33564","cljs.core/--destructure-map","cljs.core.get","js/React.createElement","attrs33578","cljs.core.apply","cljs.core/map?","sablono.interpreter/attributes","sablono.interpreter/interpret","predict-prostate.components.button/information","rum.core/reactive","values","ttt","ttt-key","_","G__33579","predict-prostate.components.button/button-label","t","k","label","cljs.core.keyword","cljs.core/name","cljs.core/Keyword","p__33587","map__33589","p1__33586#","attrs33591","predict-prostate.components.button/toggle-button","rum.core/static","key","value","topic","disabled","cljs.core.println","handler","cljs.core.not_EQ_","pubsub.feeds/publish","cljs.core._EQ_","G__33594","p__33598","map__33599","predict-prostate.components.button/radio-button-group","aria-label","aria-describedby","unknowable","vertical","group-cursor","group-value","rum.core/react","cljs.core.map","p__33603","vec__33604","cljs.core.nth","val","rum.core/with-key","G__33607","G__33608","predict-prostate.state.run-time/input-change","G__33609","G__33610","predict-prostate.state.run-time/unknown","p__33614","map__33615","predict-prostate.components.button/horiz-radio-button-group","p__33618","vec__33619","G__33625","G__33626","G__33627","G__33628","predict-prostate.components.button/year-picker","G__33632","G__33633","predict-prostate.state.run-time/input-cursor","predict-prostate.components.button/radio-button-group-vertical","props","G__33637","G__33638","cljs.core.merge","p__33647","map__33648","p1__33642#","predict-prostate.components.button/small-help-button","help-id","icon-name","title","text","predict-prostate.state.run-time/help-key-change","G__33656","G__33657","graphics.simple-icons/icon","p__33664","map__33665","p1__33662#","predict-prostate.components.button/treatment-help-button","G__33670","G__33671","p1__33672#","predict-prostate.components.button/settings-button","settings","predict-prostate.state.run-time/settings-change","G__33678","G__33679","G__33680","p1__33686#","predict-prostate.components.button/print-button","predict-prostate.state.run-time/print-change","G__33691","G__33692","G__33693","predict-prostate.components.button/menu-item","item","lang","predict-prostate.state.run-time/language-change","predict-prostate.components.button/start-button","predict-prostate.state.run-time/route-change","G__33708","G__33709","G__33710","predict-prostate.components.button/start-button-group","supported-languages","G__33746","cljs.core.into","cljs.core.mapv","G__33759"],"sourcesContent":["(ns predict-prostate.components.button\n  (:require [rum.core :as rum]\n            [predict-prostate.state.run-time :refer [unknown input-cursor input-change help-key-change settings-change print-change route-change language-change]]\n            [graphics.simple-icons :as simple]\n            [pubsub.feeds :refer [publish]]\n            [clojure.pprint :refer [cl-format]]\n            ))\n\n;; Simple text only component that only echoes text\n#_(rum/defc information < rum/reactive [{:keys [key values]\n                                       :as   props} group-cursor]\n  [:div\n   [:div\n    [:div values]]])\n(rum/defc information < rum/reactive [{:keys [values ttt ttt-key]} _]\n  [:div\n   [:div\n    [:div (ttt [ttt-key values])]]])\n\n(defn button-label\n  [t k label]\n  [(keyword (str \"button/\" (name (:topic t)) \"-\" (if (keyword? k) (name k) (if (number? k) (str \"n\" k) k))))\n   label])\n\n\n;; (rum/defc information < rum/reactive [{:keys [values ttt ttt-key]} _]\n;;   [:div\n;;    [:div\n;;     [:div (ttt [ttt-key values])]]])\n\n\n;; Generic toggle\n(rum/defc toggle-button < rum/static [{:keys [ttt key value topic disabled]\n                                       :or   {disabled false}} label]\n          (when (nil? ttt) (println \"toggle-button (nil ttt) \" (:topic topic) key))\n\n  (let [handler #(when (not= key value) (publish topic key))]\n\n    [:button {:class-name  (str \"btn btn-default btn-sm custom\" (if (= key value) \" active\" \"\"))\n              :disabled    disabled\n              :type        \"button\"\n              :key         label\n              :on-key-down #(when (= (.. % -nativeEvent -code) \"Enter\")\n                              (handler))\n              :onClick     handler\n              }\n     (if (= :result-year (:topic topic))\n       [:b label]\n       (ttt (button-label topic key label)))\n     #_label]))\n\n\n\n(rum/defc radio-button-group < rum/reactive [{:keys [ttt key aria-label aria-describedby values unknowable vertical]} group-cursor]\n  (let [group-value (rum/react group-cursor)]\n    ;; extra divs are necessary for correct error state outlining\n    ;;\n    ;; Apart from valid values, the value may also be :disabled\n    [:div\n     [:div\n      [:div {:role       \"group\" :aria-label aria-label :aria-describedby aria-describedby\n             :class-name (str \"btn-group\" (if vertical \"-vertical\" \"\"))}\n\n       (map (fn [[val label]]\n              (rum/with-key\n                (toggle-button {:ttt ttt :key val :value group-value :topic (input-change key) :disabled (= group-value :disabled)} label)\n                label))\n            values)\n\n       (when unknowable\n         (toggle-button {:ttt ttt :key :unknown :value group-value :topic (input-change key) :disabled (= group-value :disabled)}\n                        unknown))\n       ]]]))\n\n(rum/defc horiz-radio-button-group < rum/reactive [{:keys [ttt key aria-label aria-describedby values unknowable]} group-cursor]\n  (let [group-value (rum/react group-cursor)]\n    [:div {:role       \"group\" :aria-label aria-label :aria-describedby aria-describedby\n           :style      {:display \"inline-block\"}\n           :class-name (str \"btn-group\")}\n\n     (map (fn [[val label]]\n            (rum/with-key\n              (toggle-button {:ttt ttt :key val :value group-value :topic (input-change key)} label)\n              label))\n          values)\n\n     (when unknowable\n       (toggle-button {:ttt ttt :key :unknown :value group-value :topic (input-change key)} unknown))\n     ]))\n\n(rum/defc year-picker < rum/reactive [ttt]\n  (horiz-radio-button-group {:ttt    ttt\n                             :key    :result-year\n                             :values [[10 \"10\"]\n                                      [15 \"15\"]\n                                      ]}\n                            (input-cursor :result-year)))\n\n(rum/defc radio-button-group-vertical\n  [props group-cursor]\n  (radio-button-group (merge props {:vertical true}) group-cursor))\n\n;;;\n;; Buttons invoking modals\n;;;\n\n\n(rum/defc small-help-button < rum/static [{:keys [help-id icon-name title text] :as props}]\n  [:button.btn.btn-info.btn-sm\n   {:type         \"button\"\n    :role         \"button\"\n    :aria-label   (str \"info on \" text)\n    :tabIndex     \"0\"\n    :data-toggle  \"modal\"\n    ;:data-target  \"#infoModal\"\n    :data-target  \"#topModal\"\n    :title        title\n    :data-content \"Help TBD\"\n    :on-click     #(publish help-key-change help-id)\n    :on-key-down  #(when (= \"Enter\" (.. % -nativeEvent -code))\n                     (publish help-key-change help-id))\n    :style        {:cursor        \"pointer\"\n                   :padding       \"0px 11px\"\n                   :font-size     \"20px\"\n                   :border-radius 15}}\n   (simple/icon {:family :fa} \"info\") \"\"])\n\n(rum/defc treatment-help-button < rum/static [{:keys [help-id icon-name title text] :as props}]\n  [:button.btn.btn-info.btn-sm\n   {:type         \"button\"\n    :role         \"button\"\n    :tabIndex     \"0\"\n    :data-toggle  \"modal\"\n    ;:data-target  \"#infoModal\"\n    :data-target  \"#topModal\"\n    :title        title\n    :data-content \"Help TBD\"\n    :on-click     #(publish help-key-change help-id)\n    :on-key-down  #(when (= \"Enter\" (.. % -nativeEvent -code))\n                     (publish help-key-change help-id))}\n   (simple/icon {:family :fa} \"warning\") \" Potential harms\"])\n\n\n(rum/defc settings-button < rum/static [ttt]\n  (let [settings \"settings\"]\n    [:button.btn.btn-default\n     {:type         \"button\"\n      :role         \"button\"\n      :tabIndex     \"0\"\n      :data-toggle  \"modal\"\n      :data-target  \"#settingsModal\"\n      :title        \"Settings\"\n      :data-content \"Settings content\"\n      :on-click     #(publish settings-change settings)\n      :on-key-down  #(when (= \"Enter\" (.. % -nativeEvent -code))\n                       (publish settings-change settings))\n      }\n     (simple/icon {:family :fa} \"cog\") \" \" (ttt [:tool/settings \"Settings\"])]))\n\n\n(rum/defc print-button < rum/static [ttt]\n  [:button.btn.btn-danger.btn-lg.screen-only.pull-right\n   {:type         \"button\"\n    :role         \"button\"\n    :aria-label   \"show printable results\"\n    :tab-index    \"0\"\n    :data-toggle  \"modal\"\n    :data-target  \"#printModal\"\n    :title        \"Print Results\"\n    :data-content \"Print content\"\n    :on-click     #(publish print-change \"print\")\n    :style        {:margin-right 15}\n    :on-key-down  #(when (= \"Enter\" (.. % -nativeEvent -code))\n                     (publish print-change \"print\"))\n    }\n   (simple/icon {:family :fa} \"print\") \" \" (ttt [:home/print-button \"Print\"])])\n\n(defn menu-item [item lang]\n  [:li\n   [:a {:href \"#\"\n        :on-click #(publish language-change lang)} item]])\n\n;; Doesn't seem to be used in predict breast either\n;; (defn change-language\n;;   [ttt supported-languages]\n;;   [:div [:button.btn.btn-warning.btn-lg.dropdown-toggle\n;;          {:type \"button\"\n;;           :data-toggle \"dropdown\"\n;;           :aria-haspopup \"true\"\n;;           :aria-expanded \"false\"}\n;;          (ttt [:navbar/change-language \"Change Language\"]) \" \" [:span.caret]]\n;;    (into [:ul.dropdown-menu.lang]\n;;          (mapv\n;;           (fn [lang] (menu-item (ttt [lang]) lang))\n;;           supported-languages))])\n\n(defn start-button [ttt]\n  [:button.btn.btn-primary.btn-lg {:aria-label \"go to predict tool\"\n                                   :type       \"button\"\n                                   :on-click   #(publish route-change [:tool nil nil])}\n   (simple/icon {:family :fa} \"chevron-right\") \" \" (ttt [:home/start-button \"Start Predict\"])])\n\n(defn start-button-group [ttt supported-languages]\n  [:.btn-group {:style {:width 975 :margin-left 15 :margin-bottom 15 :margin-top 15}}\n   (start-button ttt)\n   [:button.btn.btn-default.btn-lg.dropdown-toggle\n    {:type \"button\"\n     :data-toggle \"dropdown\"\n     :aria-haspopup \"true\"\n     :aria-expanded \"false\"}\n    (ttt [:navbar/change-language \"Change Language\"]) \" \" [:span.caret]]\n   (into [:ul.dropdown-menu.lang]\n         (mapv\n          (fn [lang] (menu-item (ttt [lang]) lang))\n          supported-languages))])"]}