{"version":3,"sources":["predict_prostate/components/button.cljs"],"mappings":"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","names":["rum.core/build-defc","p__144217","map__144220","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","js/React.createElement","attrs144223","cljs.core/map?","sablono.interpreter/attributes","sablono.interpreter/interpret","predict-prostate.components.button/information","rum.core/reactive","key","values","props","group-cursor","p__144228","map__144230","p1__144225#","predict-prostate.components.button/toggle-button","rum.core/static","ttt","value","topic","disabled","label","handler","cljs.core.not_EQ_","pubsub.feeds/publish","cljs.core._EQ_","p__144233","map__144235","predict-prostate.components.button/radio-button-group","aria-label","aria-describedby","unknowable","vertical","group-value","rum.core/react","cljs.core.map","p__144239","vec__144241","cljs.core.nth","val","rum.core/with-key","G__144247","G__144248","predict-prostate.state.run-time/input-change","G__144251","G__144252","predict-prostate.state.run-time/unknown","p__144255","map__144257","predict-prostate.components.button/horiz-radio-button-group","p__144262","vec__144266","G__144269","G__144271","G__144274","G__144276","predict-prostate.components.button/year-picker","G__144279","G__144280","predict-prostate.state.run-time/input-cursor","predict-prostate.components.button/radio-button-group-vertical","G__144283","G__144284","cljs.core.merge","p__144288","map__144290","p1__144286#","predict-prostate.components.button/small-help-button","help-id","icon-name","title","text","predict-prostate.state.run-time/help-key-change","G__144293","G__144295","graphics.simple-icons/icon","p__144300","map__144302","p1__144297#","predict-prostate.components.button/treatment-help-button","G__144307","G__144308","p1__144310#","predict-prostate.components.button/settings-button","settings","predict-prostate.state.run-time/settings-change","G__144313","G__144314","G__144316","p1__144318#","predict-prostate.components.button/print-button","predict-prostate.state.run-time/print-change","G__144321","G__144322","G__144324","predict-prostate.components.button/menu-item","item","lang","predict-prostate.state.run-time/language-change","predict-prostate.components.button/start-button","predict-prostate.state.run-time/route-change","G__144327","G__144328","G__144330","predict-prostate.components.button/start-button-group","supported-languages","G__144332","cljs.core.into","cljs.core.mapv","G__144334"],"sourcesContent":["(ns predict-prostate.components.button\n  (:require [rum.core :as rum]\n            [predict-prostate.state.run-time :refer [unknown input-cursor input-change help-key-change settings-change print-change route-change language-change]]\n            [graphics.simple-icons :as simple]\n            [pubsub.feeds :refer [publish]]\n            [clojure.pprint :refer [cl-format]]\n            ))\n\n;; Simple text only component that only echoes text\n(rum/defc information < rum/reactive [{:keys [key values]\n                                       :as   props} group-cursor]\n  [:div\n   [:div\n    [:div values]]])\n\n\n;; (rum/defc information < rum/reactive [{:keys [values ttt ttt-key]} _]\n;;   [:div\n;;    [:div\n;;     [:div (ttt [ttt-key values])]]])\n\n\n;; Generic toggle\n(rum/defc toggle-button < rum/static [{:keys [ttt key value topic disabled]\n                                       :or   {disabled false}} label]\n  (let [handler #(when (not= key value) (publish topic key))]\n\n    [:button {:class-name  (str \"btn btn-default btn-sm custom\" (if (= key value) \" active\" \"\"))\n              :disabled    disabled\n              :type        \"button\"\n              :key         label\n              :on-key-down #(when (= (.. % -nativeEvent -code) \"Enter\")\n                              (handler))\n              :onClick     handler\n              }\n     label]))\n\n\n\n(rum/defc radio-button-group < rum/reactive [{:keys [ttt key aria-label aria-describedby values unknowable vertical]} group-cursor]\n  (let [group-value (rum/react group-cursor)]\n    ;; extra divs are necessary for correct error state outlining\n    ;;\n    ;; Apart from valid values, the value may also be :disabled\n    [:div\n     [:div\n      [:div {:role       \"group\" :aria-label aria-label :aria-describedby aria-describedby\n             :class-name (str \"btn-group\" (if vertical \"-vertical\" \"\"))}\n\n       (map (fn [[val label]]\n              (rum/with-key\n                (toggle-button {:ttt ttt :key val :value group-value :topic (input-change key) :disabled (= group-value :disabled)} label)\n                label))\n            values)\n\n       (when unknowable\n         (toggle-button {:ttt ttt :key :unknown :value group-value :topic (input-change key) :disabled (= group-value :disabled)}\n                        unknown))\n       ]]]))\n\n(rum/defc horiz-radio-button-group < rum/reactive [{:keys [ttt key aria-label aria-describedby values unknowable]} group-cursor]\n  (let [group-value (rum/react group-cursor)]\n    [:div {:role       \"group\" :aria-label aria-label :aria-describedby aria-describedby\n           :style      {:display \"inline-block\"}\n           :class-name (str \"btn-group\")}\n\n     (map (fn [[val label]]\n            (rum/with-key\n              (toggle-button {:ttt ttt :key val :value group-value :topic (input-change key)} label)\n              label))\n          values)\n\n     (when unknowable\n       (toggle-button {:ttt ttt :key :unknown :value group-value :topic (input-change key)} unknown))\n     ]))\n\n(rum/defc year-picker < rum/reactive [ttt]\n  (horiz-radio-button-group {:ttt ttt\n                             :key    :result-year\n                             :values [[10 \"10\"]\n                                      [15 \"15\"]\n                                      ]}\n                            (input-cursor :result-year)))\n\n(rum/defc radio-button-group-vertical\n  [props group-cursor]\n  (radio-button-group (merge props {:vertical true}) group-cursor))\n\n;;;\n;; Buttons invoking modals\n;;;\n\n\n(rum/defc small-help-button < rum/static [{:keys [help-id icon-name title text] :as props}]\n  [:button.btn.btn-info.btn-sm\n   {:type         \"button\"\n    :role         \"button\"\n    :aria-label   (str \"info on \" text)\n    :tabIndex     \"0\"\n    :data-toggle  \"modal\"\n    ;:data-target  \"#infoModal\"\n    :data-target  \"#topModal\"\n    :title        title\n    :data-content \"Help TBD\"\n    :on-click     #(publish help-key-change help-id)\n    :on-key-down  #(when (= \"Enter\" (.. % -nativeEvent -code))\n                     (publish help-key-change help-id))\n    :style        {:cursor        \"pointer\"\n                   :padding       \"0px 11px\"\n                   :font-size     \"20px\"\n                   :border-radius 15}}\n   (simple/icon {:family :fa} \"info\") \"\"])\n\n(rum/defc treatment-help-button < rum/static [{:keys [help-id icon-name title text] :as props}]\n  [:button.btn.btn-info.btn-sm\n   {:type         \"button\"\n    :role         \"button\"\n    :tabIndex     \"0\"\n    :data-toggle  \"modal\"\n    ;:data-target  \"#infoModal\"\n    :data-target  \"#topModal\"\n    :title        title\n    :data-content \"Help TBD\"\n    :on-click     #(publish help-key-change help-id)\n    :on-key-down  #(when (= \"Enter\" (.. % -nativeEvent -code))\n                     (publish help-key-change help-id))}\n   (simple/icon {:family :fa} \"warning\") \" Potential harms\"])\n\n\n(rum/defc settings-button < rum/static [ttt]\n  (let [settings \"settings\"]\n    [:button.btn.btn-default\n     {:type         \"button\"\n      :role         \"button\"\n      :tabIndex     \"0\"\n      :data-toggle  \"modal\"\n      :data-target  \"#settingsModal\"\n      :title        \"Settings\"\n      :data-content \"Settings content\"\n      :on-click     #(publish settings-change settings)\n      :on-key-down  #(when (= \"Enter\" (.. % -nativeEvent -code))\n                       (publish settings-change settings))\n      }\n     (simple/icon {:family :fa} \"cog\") \" \" (ttt [:tool/settings \"Settings\"])]))\n\n\n(rum/defc print-button < rum/static [ttt]\n  [:button.btn.btn-danger.btn-lg.screen-only.pull-right\n   {:type         \"button\"\n    :role         \"button\"\n    :aria-label   \"show printable results\"\n    :tab-index    \"0\"\n    :data-toggle  \"modal\"\n    :data-target  \"#printModal\"\n    :title        \"Print Results\"\n    :data-content \"Print content\"\n    :on-click     #(publish print-change \"print\")\n    :style        {:margin-right 15}\n    :on-key-down  #(when (= \"Enter\" (.. % -nativeEvent -code))\n                     (publish print-change \"print\"))\n    }\n   (simple/icon {:family :fa} \"print\") \" \" (ttt [:home/print-button \"Print\"])])\n\n(defn menu-item [item lang]\n  [:li\n   [:a {:href \"#\"\n        :on-click #(publish language-change lang)} item]])\n\n;; Doesn't seem to be used in predict breast either\n;; (defn change-language\n;;   [ttt supported-languages]\n;;   [:div [:button.btn.btn-warning.btn-lg.dropdown-toggle\n;;          {:type \"button\"\n;;           :data-toggle \"dropdown\"\n;;           :aria-haspopup \"true\"\n;;           :aria-expanded \"false\"}\n;;          (ttt [:navbar/change-language \"Change Language\"]) \" \" [:span.caret]]\n;;    (into [:ul.dropdown-menu.lang]\n;;          (mapv\n;;           (fn [lang] (menu-item (ttt [lang]) lang))\n;;           supported-languages))])\n\n(defn start-button [ttt]\n  [:button.btn.btn-primary.btn-lg {:aria-label \"go to predict tool\"\n                                   :type       \"button\"\n                                   :on-click   #(publish route-change [:tool nil nil])}\n   (simple/icon {:family :fa} \"chevron-right\") \" \" (ttt [:home/start-button \"Start Predict\"])])\n\n(defn start-button-group [ttt supported-languages]\n  [:.btn-group {:style {:width 975 :margin-left 15 :margin-bottom 15 :margin-top 15}}\n   (start-button ttt)\n   [:button.btn.btn-default.btn-lg.dropdown-toggle\n    {:type \"button\"\n     :data-toggle \"dropdown\"\n     :aria-haspopup \"true\"\n     :aria-expanded \"false\"}\n    (ttt [:navbar/change-language \"Change Language\"]) \" \" [:span.caret]]\n   (into [:ul.dropdown-menu.lang]\n         (mapv\n          (fn [lang] (menu-item (ttt [lang]) lang))\n          supported-languages))])"]}