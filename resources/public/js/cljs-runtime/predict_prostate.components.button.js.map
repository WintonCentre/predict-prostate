{"version":3,"sources":["predict_prostate/components/button.cljs"],"mappings":";AAcA,iDAAA,AAAAA,oBAAAC,oBAAA,WAAAC,pGAAUS,6GAAyDK;AAAnE,AAAA,IAAAb,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;aAAA,AAAAE,4CAAAF,eAAA,pEAA8CU;UAA9C,AAAAR,4CAAAF,eAAA,jEAAqDW;cAArD,AAAAT,4CAAAF,eAAA,rEAAyDY;AAAzD,AAAA,AAAA,OAAAT,6BAAA,MAAA,KAAA,CAAA,AAAAA,6BAAA,MAAA,KAAA,CAAA,iBAAAC,aAGU,iBAAAU,WAAA,mFAAMF,QAAQF;AAAd,AAAA,8EAAAI,0BAAAA,hGAACH,oCAAAA,8CAAAA;;AAHX,AAAA,OAAAR,6BAAA,MAAA,EAAA,AAAAE,qBAAAD,aAAA,AAAAE,wCAAAF,YAAA,MAAA,EAAA,AAAAC,qBAAAD,aAAA,KAAA,CAAA,AAAAG,+BAAAH;;GAAA,6GAAA,1BAAwBK;AAKxB,kDAAA,lDAAMM,4GACHC,EAAEC,EAAEC;AADP,AAAA,0FAEG,AAACC,gDAAQ,CAAA,mHAAA,zGAAe,AAACC,eAAK,AAAA,sFAAQJ,oDAAQ,EAAI,cAAAK,bAAUJ,iCAAG,AAACG,eAAKH,GAAG,EAAI,OAASA,gBAAG,CAAA,gDAASA,aAAGA,gBACpGC;;AAUH,mDAAA,AAAArB,oBAAAC,oBAAA,WAAAwB,tGAAUI,+GACqDR;AAD/D,AAAA,IAAAK,aAAAD;IAAAC,iBAAA,AAAAtB,4BAAAsB;UAAA,AAAArB,4CAAAqB,eAAA,jEAA8CZ;UAA9C,AAAAT,4CAAAqB,eAAA,jEAAkDK;YAAlD,AAAA1B,4CAAAqB,eAAA,nEAAsDM;YAAtD,AAAA3B,4CAAAqB,eAAA,nEAA4DO;eAA5D,AAAA5B,4CAAAqB,eAAA,8DAAA,pIAAkEQ;AAAlE,AAAA,AAEU,GAAM,QAAA,PAAMpB;AAAZ,AAAiB,yGAAA,zGAACqB,oIAAmC,AAAA,sFAAQF,OAAOF;;AAApE;;AAFV,cAAA,VAIQK;AAJR,AAIiB,GAAM,AAACC,gDAAKN,IAAIC;AAAhB,AAAuB,OAACM,qBAAQL,MAAMF;;AAAtC;;;AAJjB,AAAA,OAAAzB,6BAAA,SAAA,4JAAA,iCAAA,WAAAqB,3LAM2B,CAAA,gCAAqC,2DAAA,UAAA,nEAAI,AAACY,6CAAER,IAAIC,2CAChDE,+BAEAb;AAT3B,AAU4B,GAAM,+EAAA,/EAACkB,6CAAE,AAAA,AAAAZ;AAAT,AACE,OAACS;;AADH;;sBAV5B,CAAA,iNAAA,iBAAAR,5OAY2BQ,YAElB,6CAAA,7CAACG,gHAAe,AAAA,sFAAQN,uCACtBZ;AAfX,AAAA,OAAAf,6BAAA,IAAA,EAAA,AAAAE,qBAAAoB,aAAA,AAAAnB,wCAAAmB,YAAA,MAAA,EAAA,AAAApB,qBAAAoB,aAAA,KAAA,CAAA,AAAAlB,+BAAAkB;KAAA,AAAAlB,+BAgBO,iBAAA8B,WAAK,AAACtB,gDAAae,MAAMF,IAAIV;AAA7B,AAAA,8EAAAmB,0BAAAA,hGAAC1B,oCAAAA,8CAAAA;;GAhBR,4GAAA,zBAA0BgB;AAqB1B,wDAAA,AAAA9B,oBAAAC,oBAAA,WAAAwC,3GAAUE,oHAA4GK;AAAtH,AAAA,IAAAN,aAAAD;IAAAC,iBAAA,AAAAtC,4BAAAsC;UAAA,AAAArC,4CAAAqC,eAAA,jEAAqD5B;UAArD,AAAAT,4CAAAqC,eAAA,jEAAyDX;iBAAzD,AAAA1B,4CAAAqC,eAAA,xEAA6DE;uBAA7D,AAAAvC,4CAAAqC,eAAA,9EAAwEG;aAAxE,AAAAxC,4CAAAqC,eAAA,pEAAyF7B;iBAAzF,AAAAR,4CAAAqC,eAAA,xEAAgGI;eAAhG,AAAAzC,4CAAAqC,eAAA,tEAA2GK;AAA3G,AAAA,AAAA,IACQE,cAAY,AAACC,eAAUF;AAD/B,AAAA,OAAA1C,6BAAA,MAAA,KAAA,CAAA,AAAAA,6BAAA,MAAA,KAAA,CAAA,AAAAA,6BAAA,MAAA,QAAA,oJAAA,CAAA,AAAAI,hIAO6CkC,8BAA6BC,6BACjD,CAAA,YAAiB,4BAAA,YAAA,tBAAIE,qEAEvC,AAACI,4CAAI,WAAAC;AAAA,AAAA,IAAAC,aAAAD;UAAA,AAAAE,4CAAAD,WAAA,IAAA,jEAAME;YAAN,AAAAD,4CAAAD,WAAA,IAAA,nEAAUhC;AAAV,AACE,OAACmC,kBACC,iDAAA,2CAAA,uDAAA,wDAAA,kEAAA,0GAAA,vXAAC3B,+IAAoBf,wDAASyC,0DAAWN,oEAAmB,AAACQ,6CAAa1B,mEAAe,yDAAA,zDAACQ,6CAAEU,mFAAwB5B,OACpHA;YAbhB,8BAAA,qpBAAA,5rBAcYR,2BAECiC,YACJ,iDAAA,2CAAA,uDAAA,oDAAA,2DAAA,kEAAA,0GAAA,9aAACjB,+IAAoBf,yKAAyBmC,oEAAmB,AAACQ,6CAAa1B,mEAAe,yDAAA,zDAACQ,6CAAEU,mFAClFS;GAlBxB,6GAAA,1BAA+B9C;AAqB/B,8DAAA,AAAAZ,oBAAAC,oBAAA,WAAA0D,jHAAUE,0HAAyGb;AAAnH,AAAA,IAAAY,aAAAD;IAAAC,iBAAA,AAAAxD,4BAAAwD;UAAA,AAAAvD,4CAAAuD,eAAA,jEAA2D9C;UAA3D,AAAAT,4CAAAuD,eAAA,jEAA+D7B;iBAA/D,AAAA1B,4CAAAuD,eAAA,xEAAmEhB;uBAAnE,AAAAvC,4CAAAuD,eAAA,9EAA8Ef;aAA9E,AAAAxC,4CAAAuD,eAAA,pEAA+F/C;iBAA/F,AAAAR,4CAAAuD,eAAA,xEAAsGd;AAAtG,AAAA,AAAA,IACQG,cAAY,AAACC,eAAUF;AAD/B,AAAA,OAAA1C,6BAAA,MAAA,QAAA,4EAAA,WAAA,yCAAA,CAAA,AAAAI,5GAE2CkC,8BAA6BC,gEAEjD,6CAElB,AAACM,4CAAI,WAAAW;AAAA,AAAA,IAAAC,aAAAD;UAAA,AAAAR,4CAAAS,WAAA,IAAA,jEAAMR;YAAN,AAAAD,4CAAAS,WAAA,IAAA,nEAAU1C;AAAV,AACE,OAACmC,kBACC,iDAAA,2CAAA,uDAAA,wDAAA,kEAAA,7QAAC3B,+IAAoBf,wDAASyC,0DAAWN,oEAAmB,AAACQ,6CAAa1B,aAAMV,OAChFA;YATd,8BAAA,+dAAA,tgBAUUR,2BAECiC,YACJ,iDAAA,2CAAA,uDAAA,oDAAA,2DAAA,kEAAA,pUAACjB,+IAAoBf,yKAAyBmC,oEAAmB,AAACQ,6CAAa1B,aAAM2B;GAb5F,6GAAA,1BAAqC9C;AAgBrC,iDAAA,AAAAZ,oBAAAC,oBAAA,zFAAU+D,oGAA4BlD;AAAtC,AAAA,AACE,mEAAA,2CAAA,uDAAA,oDAAA,mEAAA,wDAAA,mFAAA,mFAAA,KAAA,aAAA,mFAAA,KAAA,7lBAAC+C,0JAAkC/C,geAKT,6CAAA,7CAACmD;GAN7B,6GAAA,1BAAwBrD;AAQxB,iEAAA,AAAAZ,oBAAAC,oBAAA,zGAAUiE,oHACPC,MAAMnB;AADT,AAAA,AAEE,OAACL,sDAAmB,6GAAA,2CAAA,4DAAA,pNAACyB,uGAAMD,gIAAwBnB;GAFrD,KAAA;AASA,uDAAA,AAAAhD,oBAAAC,oBAAA,WAAAoE,1GAAUG;AAAV,AAAA,IAAAF,aAAAD;IAAAC,iBAAA,AAAAlE,4BAAAkE;YAAAA,RAAoFH;cAApF,AAAA9D,4CAAAiE,eAAA,rEAAkDG;gBAAlD,AAAApE,4CAAAiE,eAAA,vEAA0DI;YAA1D,AAAArE,4CAAAiE,eAAA,nEAAoEK;WAApE,AAAAtE,4CAAAiE,eAAA,lEAA0EM;AAA1E,AAAA,AAAA,OAAAtE,6BAAA,SAAA,QAAA,oBAAA,mBAAA,kBAAA,qBAAA,4CAAA,UAAA,oBAAA,sBAAA,sBAAA,uGAAA,WAAAiE,/FAIkB,CAAA,uDAAgBK,nKAKhBD;AATlB,AAYmB,GAAM,6CAAA,7CAACpC,qDAAU,AAAA,AAAAgC;AAAjB,AACE,OAASM,4FAAgBJ;;AAD3B;;iBAZnB,sBAAA;AAAA,AAWmB,OAASI,4FAAgBJ;iBAX5C,SAAA,iMAAA,hMAkBG,2BAAA,2CAAA,0DAAA,wDAAA,xLAACK;GAlBJ,4GAAA,zBAA8BhD;AAoB9B,2DAAA,AAAA9B,oBAAAC,oBAAA,WAAA8E,9GAAUG;AAAV,AAAA,IAAAF,aAAAD;IAAAC,iBAAA,AAAA5E,4BAAA4E;YAAAA,RAAwFb;cAAxF,AAAA9D,4CAAA2E,eAAA,rEAAsDP;gBAAtD,AAAApE,4CAAA2E,eAAA,vEAA8DN;YAA9D,AAAArE,4CAAA2E,eAAA,nEAAwEL;WAAxE,AAAAtE,4CAAA2E,eAAA,lEAA8EJ;AAA9E,AAAA,AAAA,OAAAtE,6BAAA,SAAA,QAAA,oBAAA,mBAAA,kBAAA,qBAAA,gDAAA,WAAA2E,7BAQkBN;AARlB,AAWmB,GAAM,6CAAA,7CAACpC,qDAAU,AAAA,AAAA0C;AAAjB,AACE,OAASJ,4FAAgBJ;;AAD3B;;iBAXnB,sBAAA;AAAA,AAUmB,OAASI,4FAAgBJ;iBAV5C,SAAA,oMAAA,nMAaG,2BAAA,2CAAA,0DAAA,wDAAA,xLAACK;GAbJ,4GAAA,zBAAkChD;AAgBlC,qDAAA,AAAA9B,oBAAAC,oBAAA,7FAAUmF,wGAA8BtE;AAAxC,AAAA,AAAA,eAAA,XACQuE;AADR,AAAA,OAAA/E,6BAAA,SAAA,QAAA,oBAAA,mBAAA,0BAAA,qBAAA,0BAAA,uBAAA,WAAA6E;AAAA,AAWqB,GAAM,6CAAA,7CAAC5C,qDAAU,AAAA,AAAA4C;AAAjB,AACE,OAASG,4FAAgBD;;AAD3B;;iBAXrB,2BAAA;AAAA,AAUqB,OAASC,4FAAgBD;iBAV9C,SAAA,gMAAA,IAAA,AAAA3E,nMAcK,2BAAA,2CAAA,0DAAA,wDAAA,xLAACoE,kOAAqC,iBAAAS,WAAA,mFAAA,oEAAA;AAAA,AAAA,8EAAAA,0BAAAA,hGAACzE,oCAAAA,8CAAAA;;GAd5C,4GAAA,zBAA4BgB;AAiB5B,kDAAA,AAAA9B,oBAAAC,oBAAA,1FAAUwF,qGAA2B3E;AAArC,AAAA,AAAA,OAAAR,6BAAA,SAAA,QAAA,oBAAA,mBAAA,uBAAA,qBAAA,uDAAA,wBAAA,eAAA,mBAAA,qCAAA,WAAAkF;AAAA,AAYmB,GAAM,6CAAA,7CAACjD,qDAAU,AAAA,AAAAiD;AAAjB,AACE,gGAAA,zFAASE;;AADX;;iBAZnB,wBAAA;AAAA,AAUmB,gGAAA,zFAASA;iBAV5B,SAAA,kMAAA,IAAA,AAAAhF,rMAeG,2BAAA,2CAAA,0DAAA,wDAAA,xLAACoE,oOAAuC,iBAAAa,WAAA,mFAAA,2EAAA;AAAA,AAAA,8EAAAA,0BAAAA,hGAAC7E,oCAAAA,8CAAAA;;GAf5C,4GAAA,zBAAyBgB;AAiBzB,+CAAA,/CAAM8D,sGAAWC,KAAKC;AAAtB,AAAA,0FAAA,gDAAA,mFAAA,gDAAA,2CAAA,qDAAA,IAAA,6DAAA;AAAA,AAGmB,OAASC,4FAAgBD;WAAOD;;AAgBnD,kDAAA,lDAAMG,4GAAclF;AAApB,AAAA,0FAAA,sGAAA,2CAAA,gEAAA,qBAAA,qDAAA,SAAA,6DAAA;AAAA,AAGgD,gGAAA,mFAAA,sDAAA,KAAA,vOAASmF;oNAHzD,zMAIG,2BAAA,2CAAA,0DAAA,wDAAA,xLAACnB,6MAA+C,iBAAAoB,WAAA,mFAAA,4EAAA;AAAA,AAAA,8EAAAA,0BAAAA,hGAACpF,oCAAAA,8CAAAA;;;AAEpD,wDAAA,xDAAMqF,wHAAoBrF,IAAIsF;AAA9B,AAAA,0FAAA,iEAAA,2CAAA,uDAAA,2CAAA,uDAAA,MAAA,mEAAA,KAAA,sEAAA,KAAA,gEAAA,0EAAA,mFAAA,sIAAA,2CAAA,qDAAA,SAAA,kEAAA,WAAA,wEAAA,OAAA,wEAAA,3lBAEG,AAACJ,gDAAalF,2jBAMb,iBAAAuF,WAAA,mFAAA,uFAAA;AAAA,AAAA,8EAAAA,0BAAAA,hGAACvF,oCAAAA,8CAAAA;KARL,IAAA,mFAAA,kFASG,6CAAA,mFAAA,hIAACwF,gOACK,AAACC,6CACA,WAAKT;AAAL,AAAW,OAACF,6CAAU,iBAAAY,WAAA,mFAAMV;AAAN,AAAA,8EAAAU,0BAAAA,hGAAC1F,oCAAAA,8CAAAA;KAAYgF;GACnCM","names":["rum.core/lazy-build","rum.core/build-defc","p__45340","map__45343","cljs.core/--destructure-map","cljs.core.get","daiquiri.core/create-element","attrs45347","cljs.core/map?","daiquiri.interpreter/element-attributes","daiquiri.interpreter/interpret","predict-prostate.components.button/information","rum.core/reactive","values","ttt","ttt-key","_","G__45348","predict-prostate.components.button/button-label","t","k","label","cljs.core.keyword","cljs.core/name","cljs.core/Keyword","p__45366","map__45367","p1__45358#","attrs45371","predict-prostate.components.button/toggle-button","rum.core/static","key","value","topic","disabled","cljs.core.println","handler","cljs.core.not_EQ_","pubsub.feeds/publish","cljs.core._EQ_","G__45373","p__45374","map__45375","predict-prostate.components.button/radio-button-group","aria-label","aria-describedby","unknowable","vertical","group-cursor","group-value","rum.core/react","cljs.core.map","p__45380","vec__45381","cljs.core.nth","val","rum.core/with-key","predict-prostate.state.run-time/input-change","predict-prostate.state.run-time/unknown","p__45384","map__45385","predict-prostate.components.button/horiz-radio-button-group","p__45390","vec__45391","predict-prostate.components.button/year-picker","predict-prostate.state.run-time/input-cursor","predict-prostate.components.button/radio-button-group-vertical","props","cljs.core.merge","p__45399","map__45400","p1__45398#","predict-prostate.components.button/small-help-button","help-id","icon-name","title","text","predict-prostate.state.run-time/help-key-change","graphics.simple-icons/icon","p__45405","map__45406","p1__45402#","predict-prostate.components.button/treatment-help-button","p1__45409#","predict-prostate.components.button/settings-button","settings","predict-prostate.state.run-time/settings-change","G__45415","p1__45420#","predict-prostate.components.button/print-button","predict-prostate.state.run-time/print-change","G__45423","predict-prostate.components.button/menu-item","item","lang","predict-prostate.state.run-time/language-change","predict-prostate.components.button/start-button","predict-prostate.state.run-time/route-change","G__45431","predict-prostate.components.button/start-button-group","supported-languages","G__45437","cljs.core.into","cljs.core.mapv","G__45440"],"sourcesContent":["(ns predict-prostate.components.button\n  (:require [rum.core :as rum]\n            [predict-prostate.state.run-time :refer [unknown input-cursor input-change help-key-change settings-change print-change route-change language-change]]\n            [graphics.simple-icons :as simple]\n            [pubsub.feeds :refer [publish]]\n            [clojure.pprint :refer [cl-format]]\n            ))\n\n;; Simple text only component that only echoes text\n#_(rum/defc information < rum/reactive [{:keys [key values]\n                                       :as   props} group-cursor]\n  [:div\n   [:div\n    [:div values]]])\n(rum/defc information < rum/reactive [{:keys [values ttt ttt-key]} _]\n  [:div\n   [:div\n    [:div (ttt [ttt-key values])]]])\n\n(defn button-label\n  [t k label]\n  [(keyword (str \"button/\" (name (:topic t)) \"-\" (if (keyword? k) (name k) (if (number? k) (str \"n\" k) k))))\n   label])\n\n\n;; (rum/defc information < rum/reactive [{:keys [values ttt ttt-key]} _]\n;;   [:div\n;;    [:div\n;;     [:div (ttt [ttt-key values])]]])\n\n\n;; Generic toggle\n(rum/defc toggle-button < rum/static [{:keys [ttt key value topic disabled]\n                                       :or   {disabled false}} label]\n          (when (nil? ttt) (println \"toggle-button (nil ttt) \" (:topic topic) key))\n\n  (let [handler #(when (not= key value) (publish topic key))]\n\n    [:button {:class-name  (str \"btn btn-default btn-sm custom\" (if (= key value) \" active\" \"\"))\n              :disabled    disabled\n              :type        \"button\"\n              :key         label\n              :on-key-down #(when (= (.. % -nativeEvent -code) \"Enter\")\n                              (handler))\n              :onClick     handler\n              }\n     (if (= :result-year (:topic topic))\n       [:b label]\n       (ttt (button-label topic key label)))\n     #_label]))\n\n\n\n(rum/defc radio-button-group < rum/reactive [{:keys [ttt key aria-label aria-describedby values unknowable vertical]} group-cursor]\n  (let [group-value (rum/react group-cursor)]\n    ;; extra divs are necessary for correct error state outlining\n    ;;\n    ;; Apart from valid values, the value may also be :disabled\n    [:div\n     [:div\n      [:div {:role       \"group\" :aria-label aria-label :aria-describedby aria-describedby\n             :class-name (str \"btn-group\" (if vertical \"-vertical\" \"\"))}\n\n       (map (fn [[val label]]\n              (rum/with-key\n                (toggle-button {:ttt ttt :key val :value group-value :topic (input-change key) :disabled (= group-value :disabled)} label)\n                label))\n            values)\n\n       (when unknowable\n         (toggle-button {:ttt ttt :key :unknown :value group-value :topic (input-change key) :disabled (= group-value :disabled)}\n                        unknown))\n       ]]]))\n\n(rum/defc horiz-radio-button-group < rum/reactive [{:keys [ttt key aria-label aria-describedby values unknowable]} group-cursor]\n  (let [group-value (rum/react group-cursor)]\n    [:div {:role       \"group\" :aria-label aria-label :aria-describedby aria-describedby\n           :style      {:display \"inline-block\"}\n           :class-name (str \"btn-group\")}\n\n     (map (fn [[val label]]\n            (rum/with-key\n              (toggle-button {:ttt ttt :key val :value group-value :topic (input-change key)} label)\n              label))\n          values)\n\n     (when unknowable\n       (toggle-button {:ttt ttt :key :unknown :value group-value :topic (input-change key)} unknown))\n     ]))\n\n(rum/defc year-picker < rum/reactive [ttt]\n  (horiz-radio-button-group {:ttt    ttt\n                             :key    :result-year\n                             :values [[10 \"10\"]\n                                      [15 \"15\"]\n                                      ]}\n                            (input-cursor :result-year)))\n\n(rum/defc radio-button-group-vertical\n  [props group-cursor]\n  (radio-button-group (merge props {:vertical true}) group-cursor))\n\n;;;\n;; Buttons invoking modals\n;;;\n\n\n(rum/defc small-help-button < rum/static [{:keys [help-id icon-name title text] :as props}]\n  [:button.btn.btn-info.btn-sm\n   {:type         \"button\"\n    :role         \"button\"\n    :aria-label   (str \"info on \" text)\n    :tabIndex     \"0\"\n    :data-toggle  \"modal\"\n    ;:data-target  \"#infoModal\"\n    :data-target  \"#topModal\"\n    :title        title\n    :data-content \"Help TBD\"\n    :on-click     #(publish help-key-change help-id)\n    :on-key-down  #(when (= \"Enter\" (.. % -nativeEvent -code))\n                     (publish help-key-change help-id))\n    :style        {:cursor        \"pointer\"\n                   :padding       \"0px 11px\"\n                   :font-size     \"20px\"\n                   :border-radius 15}}\n   (simple/icon {:family :fa} \"info\") \"\"])\n\n(rum/defc treatment-help-button < rum/static [{:keys [help-id icon-name title text] :as props}]\n  [:button.btn.btn-info.btn-sm\n   {:type         \"button\"\n    :role         \"button\"\n    :tabIndex     \"0\"\n    :data-toggle  \"modal\"\n    ;:data-target  \"#infoModal\"\n    :data-target  \"#topModal\"\n    :title        title\n    :data-content \"Help TBD\"\n    :on-click     #(publish help-key-change help-id)\n    :on-key-down  #(when (= \"Enter\" (.. % -nativeEvent -code))\n                     (publish help-key-change help-id))}\n   (simple/icon {:family :fa} \"warning\") \" Potential harms\"])\n\n\n(rum/defc settings-button < rum/static [ttt]\n  (let [settings \"settings\"]\n    [:button.btn.btn-default\n     {:type         \"button\"\n      :role         \"button\"\n      :tabIndex     \"0\"\n      :data-toggle  \"modal\"\n      :data-target  \"#settingsModal\"\n      :title        \"Settings\"\n      :data-content \"Settings content\"\n      :on-click     #(publish settings-change settings)\n      :on-key-down  #(when (= \"Enter\" (.. % -nativeEvent -code))\n                       (publish settings-change settings))\n      }\n     (simple/icon {:family :fa} \"cog\") \" \" (ttt [:tool/settings \"Settings\"])]))\n\n\n(rum/defc print-button < rum/static [ttt]\n  [:button.btn.btn-danger.btn-lg.screen-only.pull-right\n   {:type         \"button\"\n    :role         \"button\"\n    :aria-label   \"show printable results\"\n    :tab-index    \"0\"\n    :data-toggle  \"modal\"\n    :data-target  \"#printModal\"\n    :title        \"Print Results\"\n    :data-content \"Print content\"\n    :on-click     #(publish print-change \"print\")\n    :style        {:margin-right 15}\n    :on-key-down  #(when (= \"Enter\" (.. % -nativeEvent -code))\n                     (publish print-change \"print\"))\n    }\n   (simple/icon {:family :fa} \"print\") \" \" (ttt [:home/print-button \"Print\"])])\n\n(defn menu-item [item lang]\n  [:li\n   [:a {:href \"#\"\n        :on-click #(publish language-change lang)} item]])\n\n;; Doesn't seem to be used in predict breast either\n;; (defn change-language\n;;   [ttt supported-languages]\n;;   [:div [:button.btn.btn-warning.btn-lg.dropdown-toggle\n;;          {:type \"button\"\n;;           :data-toggle \"dropdown\"\n;;           :aria-haspopup \"true\"\n;;           :aria-expanded \"false\"}\n;;          (ttt [:navbar/change-language \"Change Language\"]) \" \" [:span.caret]]\n;;    (into [:ul.dropdown-menu.lang]\n;;          (mapv\n;;           (fn [lang] (menu-item (ttt [lang]) lang))\n;;           supported-languages))])\n\n(defn start-button [ttt]\n  [:button.btn.btn-primary.btn-lg {:aria-label \"go to predict tool\"\n                                   :type       \"button\"\n                                   :on-click   #(publish route-change [:tool nil nil])}\n   (simple/icon {:family :fa} \"chevron-right\") \" \" (ttt [:home/start-button \"Start Predict\"])])\n\n(defn start-button-group [ttt supported-languages]\n  [:.btn-group {:style {:width 975 :margin-left 15 :margin-bottom 15 :margin-top 15}}\n   (start-button ttt)\n   [:button.btn.btn-default.btn-lg.dropdown-toggle\n    {:type \"button\"\n     :data-toggle \"dropdown\"\n     :aria-haspopup \"true\"\n     :aria-expanded \"false\"}\n    (ttt [:navbar/change-language \"Change Language\"]) \" \" [:span.caret]]\n   (into [:ul.dropdown-menu.lang]\n         (mapv\n          (fn [lang] (menu-item (ttt [lang]) lang))\n          supported-languages))])"]}