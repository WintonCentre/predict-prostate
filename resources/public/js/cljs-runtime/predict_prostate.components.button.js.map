{"version":3,"sources":["predict_prostate/components/button.cljs"],"mappings":"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","names":["rum.core/build-defc","p__46129","map__46130","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","js/React.createElement","attrs46139","cljs.core/map?","sablono.interpreter/attributes","sablono.interpreter/interpret","predict-prostate.components.button/information","rum.core/reactive","key","values","props","group-cursor","p__46156","map__46157","p1__46148#","predict-prostate.components.button/toggle-button","rum.core/static","value","topic","disabled","label","handler","cljs.core.not_EQ_","pubsub.feeds/publish","cljs.core._EQ_","p__46163","map__46164","predict-prostate.components.button/radio-button-group","aria-label","aria-describedby","unknowable","vertical","group-value","rum.core/react","cljs.core.map","p__46172","vec__46173","cljs.core.nth","val","rum.core/with-key","G__46176","G__46177","predict-prostate.state.run-time/input-change","G__46178","G__46179","predict-prostate.state.run-time/unknown","p__46184","map__46185","predict-prostate.components.button/horiz-radio-button-group","p__46191","vec__46192","G__46195","G__46196","G__46200","G__46201","predict-prostate.components.button/year-picker","G__46208","G__46209","predict-prostate.state.run-time/input-cursor","predict-prostate.components.button/radio-button-group-vertical","G__46210","G__46211","cljs.core.merge","p__46213","map__46214","p1__46212#","predict-prostate.components.button/small-help-button","help-id","icon-name","title","text","predict-prostate.state.run-time/help-key-change","G__46216","G__46217","graphics.simple-icons/icon","p__46219","map__46220","p1__46218#","predict-prostate.components.button/treatment-help-button","G__46223","G__46224","p1__46225#","predict-prostate.components.button/settings-button","settings","predict-prostate.state.run-time/settings-change","G__46226","G__46227","p1__46228#","predict-prostate.components.button/print-button","predict-prostate.state.run-time/print-change","G__46230","G__46231","predict-prostate.components.button/start-button","predict-prostate.state.run-time/route-change","G__46232","G__46233"],"sourcesContent":["(ns predict-prostate.components.button\n  (:require [rum.core :as rum]\n            [predict-prostate.state.run-time :refer [unknown input-cursor input-change help-key-change settings-change print-change route-change]]\n            [graphics.simple-icons :as simple]\n            [pubsub.feeds :refer [publish]]\n            [clojure.pprint :refer [cl-format]]\n            ))\n\n;; Simple text only component that only echoes text\n(rum/defc information < rum/reactive [{:keys [key values]\n                                       :as   props} group-cursor]\n  [:div\n   [:div\n    [:div values]]])\n\n\n;; Generic toggle\n(rum/defc toggle-button < rum/static [{:keys [key value topic disabled]\n                                       :or   {disabled false}} label]\n  (let [handler #(when (not= key value) (publish topic key))]\n\n    [:button {:class-name  (str \"btn btn-default btn-sm custom\" (if (= key value) \" active\" \"\"))\n              :disabled    disabled\n              :type        \"button\"\n              :key         label\n              :on-key-down #(when (= (.. % -nativeEvent -code) \"Enter\")\n                              (handler))\n              :onClick     handler\n              }\n     label]))\n\n\n\n(rum/defc radio-button-group < rum/reactive [{:keys [key aria-label aria-describedby values unknowable vertical]\n                                              :as   props} group-cursor]\n  (let [group-value (rum/react group-cursor)]\n    ;; extra divs are necessary for correct error state outlining\n    ;;\n    ;; Apart from valid values, the value may also be :disabled\n    [:div\n     [:div\n      [:div {:role       \"group\" :aria-label aria-label :aria-describedby aria-describedby\n             :class-name (str \"btn-group\" (if vertical \"-vertical\" \"\"))}\n\n       (map (fn [[val label]]\n              (rum/with-key\n                (toggle-button {:key val :value group-value :topic (input-change key) :disabled (= group-value :disabled)} label)\n                label))\n            values)\n\n       (when unknowable\n         (toggle-button {:key :unknown :value group-value :topic (input-change key) :disabled (= group-value :disabled)}\n                        unknown))\n       ]]]))\n\n(rum/defc horiz-radio-button-group < rum/reactive [{:keys [key aria-label aria-describedby values unknowable] :as props} group-cursor]\n  (let [group-value (rum/react group-cursor)]\n    [:div {:role       \"group\" :aria-label aria-label :aria-describedby aria-describedby\n           :style      {:display \"inline-block\"}\n           :class-name (str \"btn-group\")}\n\n     (map (fn [[val label]]\n            (rum/with-key\n              (toggle-button {:key val :value group-value :topic (input-change key)} label)\n              label))\n          values)\n\n     (when unknowable\n       (toggle-button {:key :unknown :value group-value :topic (input-change key)} unknown))\n     ]))\n\n(rum/defc year-picker []\n  (horiz-radio-button-group {:key    :result-year\n                             :values [[10 \"10\"]\n                                      [15 \"15\"]\n                                      ]}\n                            (input-cursor :result-year)))\n\n(rum/defc radio-button-group-vertical\n  [props group-cursor]\n  (radio-button-group (merge props {:vertical true}) group-cursor))\n\n;;;\n;; Buttons invoking modals\n;;;\n\n\n(rum/defc small-help-button < rum/static [{:keys [help-id icon-name title text] :as props}]\n  [:button.btn.btn-info.btn-sm\n   {:type         \"button\"\n    :role         \"button\"\n    :aria-label   (str \"info on \" text)\n    :tabIndex     \"0\"\n    :data-toggle  \"modal\"\n    ;:data-target  \"#infoModal\"\n    :data-target  \"#topModal\"\n    :title        title\n    :data-content \"Help TBD\"\n    :on-click     #(publish help-key-change help-id)\n    :on-key-down  #(when (= \"Enter\" (.. % -nativeEvent -code))\n                     (publish help-key-change help-id))\n    :style        {:cursor        \"pointer\"\n                   :padding       \"0px 11px\"\n                   :font-size     \"20px\"\n                   :border-radius 15}}\n   (simple/icon {:family :fa} \"info\") \"\"])\n\n(rum/defc treatment-help-button < rum/static [{:keys [help-id icon-name title text] :as props}]\n  [:button.btn.btn-info.btn-sm\n   {:type         \"button\"\n    :role         \"button\"\n    :tabIndex     \"0\"\n    :data-toggle  \"modal\"\n    ;:data-target  \"#infoModal\"\n    :data-target  \"#topModal\"\n    :title        title\n    :data-content \"Help TBD\"\n    :on-click     #(publish help-key-change help-id)\n    :on-key-down  #(when (= \"Enter\" (.. % -nativeEvent -code))\n                     (publish help-key-change help-id))}\n   (simple/icon {:family :fa} \"warning\") \" Potential harms\"])\n\n\n(rum/defc settings-button < rum/static []\n  (let [settings \"settings\"]\n    [:button.btn.btn-default\n     {:type         \"button\"\n      :role         \"button\"\n      :tabIndex     \"0\"\n      :data-toggle  \"modal\"\n      :data-target  \"#settingsModal\"\n      :title        \"Settings\"\n      :data-content \"Settings content\"\n      :on-click     #(publish settings-change settings)\n      :on-key-down  #(when (= \"Enter\" (.. % -nativeEvent -code))\n                       (publish settings-change settings))\n      }\n     (simple/icon {:family :fa} \"cog\") \" Settings\"]))\n\n\n(rum/defc print-button < rum/static []\n  [:button.btn.btn-danger.btn-lg.screen-only.pull-right\n   {:type         \"button\"\n    :role         \"button\"\n    :aria-label   \"show printable results\"\n    :tab-index    \"0\"\n    :data-toggle  \"modal\"\n    :data-target  \"#printModal\"\n    :title        \"Print Results\"\n    :data-content \"Print content\"\n    :on-click     #(publish print-change \"print\")\n    :style        {:margin-right 15}\n    :on-key-down  #(when (= \"Enter\" (.. % -nativeEvent -code))\n                     (publish print-change \"print\"))\n    }\n   (simple/icon {:family :fa} \"print\") \" Print\"])\n\n(defn start-button []\n  [:div\n   [:button.btn.btn-primary.btn-lg {:style      {:margin  20\n                                                 }\n                                    :aria-label \"go to predict tool\"\n                                    :type       \"button\"\n                                    :on-click   #(publish route-change [:tool nil nil])}\n    (simple/icon {:family :fa} \"chevron-right\") \" Start Predict\"]])\n"]}