{"version":3,"sources":["predict_prostate/components/button.cljs"],"mappings":"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","names":["rum.core/build-defc","p__155907","map__155908","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","js/React.createElement","attrs155910","cljs.core/map?","sablono.interpreter/attributes","sablono.interpreter/interpret","predict-prostate.components.button/information","rum.core/reactive","values","ttt","ttt-key","_","G__155911","predict-prostate.components.button/button-label","t","k","label","cljs.core.keyword","cljs.core/name","cljs.core/Keyword","p__155913","map__155914","p1__155912#","attrs155916","predict-prostate.components.button/toggle-button","rum.core/static","key","value","topic","disabled","cljs.core.println","handler","cljs.core.not_EQ_","pubsub.feeds/publish","cljs.core._EQ_","G__155917","p__155918","map__155919","predict-prostate.components.button/radio-button-group","aria-label","aria-describedby","unknowable","vertical","group-cursor","group-value","rum.core/react","cljs.core.map","p__155921","vec__155922","cljs.core.nth","val","rum.core/with-key","G__155925","G__155926","predict-prostate.state.run-time/input-change","G__155927","G__155928","predict-prostate.state.run-time/unknown","p__155929","map__155930","predict-prostate.components.button/horiz-radio-button-group","p__155932","vec__155933","G__155936","G__155937","G__155938","G__155939","predict-prostate.components.button/year-picker","G__155940","G__155941","predict-prostate.state.run-time/input-cursor","predict-prostate.components.button/radio-button-group-vertical","props","G__155942","G__155943","cljs.core.merge","p__155945","map__155946","p1__155944#","predict-prostate.components.button/small-help-button","help-id","icon-name","title","text","predict-prostate.state.run-time/help-key-change","G__155948","G__155949","graphics.simple-icons/icon","p__155951","map__155952","p1__155950#","predict-prostate.components.button/treatment-help-button","G__155954","G__155955","p1__155956#","predict-prostate.components.button/settings-button","settings","predict-prostate.state.run-time/settings-change","G__155957","G__155958","G__155959","p1__155960#","predict-prostate.components.button/print-button","predict-prostate.state.run-time/print-change","G__155961","G__155962","G__155963","predict-prostate.components.button/menu-item","item","lang","predict-prostate.state.run-time/language-change","predict-prostate.components.button/start-button","predict-prostate.state.run-time/route-change","G__155964","G__155965","G__155966","predict-prostate.components.button/start-button-group","supported-languages","G__155967","cljs.core.into","cljs.core.mapv","G__155968"],"sourcesContent":["(ns predict-prostate.components.button\n  (:require [rum.core :as rum]\n            [predict-prostate.state.run-time :refer [unknown input-cursor input-change help-key-change settings-change print-change route-change language-change]]\n            [graphics.simple-icons :as simple]\n            [pubsub.feeds :refer [publish]]\n            [clojure.pprint :refer [cl-format]]\n            ))\n\n;; Simple text only component that only echoes text\n#_(rum/defc information < rum/reactive [{:keys [key values]\n                                       :as   props} group-cursor]\n  [:div\n   [:div\n    [:div values]]])\n(rum/defc information < rum/reactive [{:keys [values ttt ttt-key]} _]\n  [:div\n   [:div\n    [:div (ttt [ttt-key values])]]])\n\n(defn button-label\n  [t k label]\n  [(keyword (str \"button/\" (name (:topic t)) \"-\" (if (keyword? k) (name k) (if (number? k) (str \"n\" k) k))))\n   label])\n\n\n;; (rum/defc information < rum/reactive [{:keys [values ttt ttt-key]} _]\n;;   [:div\n;;    [:div\n;;     [:div (ttt [ttt-key values])]]])\n\n\n;; Generic toggle\n(rum/defc toggle-button < rum/static [{:keys [ttt key value topic disabled]\n                                       :or   {disabled false}} label]\n          (when (nil? ttt) (println \"toggle-button (nil ttt) \" (:topic topic) key))\n\n  (let [handler #(when (not= key value) (publish topic key))]\n\n    [:button {:class-name  (str \"btn btn-default btn-sm custom\" (if (= key value) \" active\" \"\"))\n              :disabled    disabled\n              :type        \"button\"\n              :key         label\n              :on-key-down #(when (= (.. % -nativeEvent -code) \"Enter\")\n                              (handler))\n              :onClick     handler\n              }\n     (if (= :result-year (:topic topic))\n       [:b label]\n       (ttt (button-label topic key label)))\n     #_label]))\n\n\n\n(rum/defc radio-button-group < rum/reactive [{:keys [ttt key aria-label aria-describedby values unknowable vertical]} group-cursor]\n  (let [group-value (rum/react group-cursor)]\n    ;; extra divs are necessary for correct error state outlining\n    ;;\n    ;; Apart from valid values, the value may also be :disabled\n    [:div\n     [:div\n      [:div {:role       \"group\" :aria-label aria-label :aria-describedby aria-describedby\n             :class-name (str \"btn-group\" (if vertical \"-vertical\" \"\"))}\n\n       (map (fn [[val label]]\n              (rum/with-key\n                (toggle-button {:ttt ttt :key val :value group-value :topic (input-change key) :disabled (= group-value :disabled)} label)\n                label))\n            values)\n\n       (when unknowable\n         (toggle-button {:ttt ttt :key :unknown :value group-value :topic (input-change key) :disabled (= group-value :disabled)}\n                        unknown))\n       ]]]))\n\n(rum/defc horiz-radio-button-group < rum/reactive [{:keys [ttt key aria-label aria-describedby values unknowable]} group-cursor]\n  (let [group-value (rum/react group-cursor)]\n    [:div {:role       \"group\" :aria-label aria-label :aria-describedby aria-describedby\n           :style      {:display \"inline-block\"}\n           :class-name (str \"btn-group\")}\n\n     (map (fn [[val label]]\n            (rum/with-key\n              (toggle-button {:ttt ttt :key val :value group-value :topic (input-change key)} label)\n              label))\n          values)\n\n     (when unknowable\n       (toggle-button {:ttt ttt :key :unknown :value group-value :topic (input-change key)} unknown))\n     ]))\n\n(rum/defc year-picker < rum/reactive [ttt]\n  (horiz-radio-button-group {:ttt    ttt\n                             :key    :result-year\n                             :values [[10 \"10\"]\n                                      [15 \"15\"]\n                                      ]}\n                            (input-cursor :result-year)))\n\n(rum/defc radio-button-group-vertical\n  [props group-cursor]\n  (radio-button-group (merge props {:vertical true}) group-cursor))\n\n;;;\n;; Buttons invoking modals\n;;;\n\n\n(rum/defc small-help-button < rum/static [{:keys [help-id icon-name title text] :as props}]\n  [:button.btn.btn-info.btn-sm\n   {:type         \"button\"\n    :role         \"button\"\n    :aria-label   (str \"info on \" text)\n    :tabIndex     \"0\"\n    :data-toggle  \"modal\"\n    ;:data-target  \"#infoModal\"\n    :data-target  \"#topModal\"\n    :title        title\n    :data-content \"Help TBD\"\n    :on-click     #(publish help-key-change help-id)\n    :on-key-down  #(when (= \"Enter\" (.. % -nativeEvent -code))\n                     (publish help-key-change help-id))\n    :style        {:cursor        \"pointer\"\n                   :padding       \"0px 11px\"\n                   :font-size     \"20px\"\n                   :border-radius 15}}\n   (simple/icon {:family :fa} \"info\") \"\"])\n\n(rum/defc treatment-help-button < rum/static [{:keys [help-id icon-name title text] :as props}]\n  [:button.btn.btn-info.btn-sm\n   {:type         \"button\"\n    :role         \"button\"\n    :tabIndex     \"0\"\n    :data-toggle  \"modal\"\n    ;:data-target  \"#infoModal\"\n    :data-target  \"#topModal\"\n    :title        title\n    :data-content \"Help TBD\"\n    :on-click     #(publish help-key-change help-id)\n    :on-key-down  #(when (= \"Enter\" (.. % -nativeEvent -code))\n                     (publish help-key-change help-id))}\n   (simple/icon {:family :fa} \"warning\") \" Potential harms\"])\n\n\n(rum/defc settings-button < rum/static [ttt]\n  (let [settings \"settings\"]\n    [:button.btn.btn-default\n     {:type         \"button\"\n      :role         \"button\"\n      :tabIndex     \"0\"\n      :data-toggle  \"modal\"\n      :data-target  \"#settingsModal\"\n      :title        \"Settings\"\n      :data-content \"Settings content\"\n      :on-click     #(publish settings-change settings)\n      :on-key-down  #(when (= \"Enter\" (.. % -nativeEvent -code))\n                       (publish settings-change settings))\n      }\n     (simple/icon {:family :fa} \"cog\") \" \" (ttt [:tool/settings \"Settings\"])]))\n\n\n(rum/defc print-button < rum/static [ttt]\n  [:button.btn.btn-danger.btn-lg.screen-only.pull-right\n   {:type         \"button\"\n    :role         \"button\"\n    :aria-label   \"show printable results\"\n    :tab-index    \"0\"\n    :data-toggle  \"modal\"\n    :data-target  \"#printModal\"\n    :title        \"Print Results\"\n    :data-content \"Print content\"\n    :on-click     #(publish print-change \"print\")\n    :style        {:margin-right 15}\n    :on-key-down  #(when (= \"Enter\" (.. % -nativeEvent -code))\n                     (publish print-change \"print\"))\n    }\n   (simple/icon {:family :fa} \"print\") \" \" (ttt [:home/print-button \"Print\"])])\n\n(defn menu-item [item lang]\n  [:li\n   [:a {:href \"#\"\n        :on-click #(publish language-change lang)} item]])\n\n;; Doesn't seem to be used in predict breast either\n;; (defn change-language\n;;   [ttt supported-languages]\n;;   [:div [:button.btn.btn-warning.btn-lg.dropdown-toggle\n;;          {:type \"button\"\n;;           :data-toggle \"dropdown\"\n;;           :aria-haspopup \"true\"\n;;           :aria-expanded \"false\"}\n;;          (ttt [:navbar/change-language \"Change Language\"]) \" \" [:span.caret]]\n;;    (into [:ul.dropdown-menu.lang]\n;;          (mapv\n;;           (fn [lang] (menu-item (ttt [lang]) lang))\n;;           supported-languages))])\n\n(defn start-button [ttt]\n  [:button.btn.btn-primary.btn-lg {:aria-label \"go to predict tool\"\n                                   :type       \"button\"\n                                   :on-click   #(publish route-change [:tool nil nil])}\n   (simple/icon {:family :fa} \"chevron-right\") \" \" (ttt [:home/start-button \"Start Predict\"])])\n\n(defn start-button-group [ttt supported-languages]\n  [:.btn-group {:style {:width 975 :margin-left 15 :margin-bottom 15 :margin-top 15}}\n   (start-button ttt)\n   [:button.btn.btn-default.btn-lg.dropdown-toggle\n    {:type \"button\"\n     :data-toggle \"dropdown\"\n     :aria-haspopup \"true\"\n     :aria-expanded \"false\"}\n    (ttt [:navbar/change-language \"Change Language\"]) \" \" [:span.caret]]\n   (into [:ul.dropdown-menu.lang]\n         (mapv\n          (fn [lang] (menu-item (ttt [lang]) lang))\n          supported-languages))])"]}