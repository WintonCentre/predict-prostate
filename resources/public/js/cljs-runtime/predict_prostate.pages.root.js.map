{"version":3,"sources":["predict_prostate/pages/root.cljs"],"mappings":";AAeA,2CAAA,3CAAMA;AAAN,AACE,gGAAA,zFAASC;;AAGX,0CAAA,1CAAMC;AAAN,AACE,gGAAA,zFAASD;;AAKX,iDAAA,jDAAME;AAAN,AACE,uBAAA,vBAACC,gBAAmBC,uBAA0BL;;AAC9C,8BAAA,vBAACI,gBAAmBC,sBAAyBH;;AAE/C,0CAAA,2CAAA,rFAAKI,mJAAwB,WAAKC;AAAL,AAEE,GAAA,AAAAC,cAAQ,AAAcH;AACpB,oBAAI,AAAoB,kBAAA,lBAAaA;AACnC,AAACF;;AACD,IAAMM,YAAI,kBAAA,lBAAaJ;AAAvB,AACE,sBAAA,WAAAK,jCAAcD;AAAd,AAAmB,oBAAI,gBAAAC,iBAAA,jCAACC;AAAgC,OAACX;;AAAc,OAACE;;;;;AAC5E,AAACC;;;AAEHI;;AAE/B;;;yCAAA,AAAAK,oBAAA,7DAAUS,wEAEPE;AAFH,AAAA,AAAA,IAAAV,aAG0B,AAACc,eAAUC;WAHrC,AAAAd,4CAAAD,WAAA,IAAA,lEAGSW;QAHT,AAAAV,4CAAAD,WAAA,IAAA,/DAGcY;YAHd,AAAAX,4CAAAD,WAAA,IAAA,nEAGgBY;SAHhBZ,LAGsBa;IACdG,OAAK,AAAA,oFAAO,AAACF,eAAUG;AAJ/B,AAAA,IAAAf,aAMK,iBAAAgB,WAAMP;IAANO,eAAA,EAAA,CAAAA,oBAAAC,oBAAA,AAAAD,aAAA;AAAA,AAAA,QAAAA;KAAA;AACQ,QAACG,iEAAAA,4EAAAA,bAAKX,wDAAAA;;;KADd;AAES,QAACY,mEAAAA,iFAAAA,hBAAMZ,6DAAAA,nDAAKG,6DAAAA;;;KAFrB;AAGQ,QAACU,iEAAAA,4EAAAA,bAAKb,wDAAAA;;;KAHd;AAIW,QAACc,uEAAAA,qFAAAA,hBAAQd,iEAAAA,vDAAKG,iEAAAA;;;KAJzB;AAKS,QAACY,mEAAAA,iFAAAA,hBAAMf,6DAAAA,nDAAKG,6DAAAA;;;KALrB;AAOa,QAACa,2EAAAA,sFAAAA,bAAUhB,kEAAAA;;;KAPxB;AAQe,QAACiB,+EAAAA,0FAAAA,bAAYjB,sEAAAA;;;;AAR5B,MAAA,KAAAU,MAAA,CAAA,mEAAAF;;;;AANL,AAAA,OAAAf,8CAAAC,oBAAA,MAAA,EAAA,AAAAC,qBAAAH,aAAA,AAAAI,+BAAAJ,YAAA,MAAA,EAAA,AAAAG,qBAAAH,aAAA,KAAA,mFAAA,AAAAK,8BAAAL;GAAA,qJAAA,lEAAkBO,kBAAahB;AAkB/B;;;mCAAA,AAAAM,oBAAA,vDAAU6B;AAAV,AAAA,AAAA,OAAArB,8BAGE,CAACC,uEAAAA,8FAAAA,zBAAMqB,0EAAAA;GAHT,KAAA;AAKA;;;wCAAA,AAAA9B,oBAAA,5DAAU+B;AAAV,AAAA,AAAA,OAAAvB,8BAGE,CAACC,uEAAAA,mGAAAA,9BAAMuB,+EAAAA;GAHT,KAAA","names":["predict-prostate.pages.root/before-print","predict-prostate.state.run-time/media-change","predict-prostate.pages.root/after-print","predict-prostate.pages.root/before-after-print","js/goog.object.set","js/window","predict-prostate.pages.root/media-watch","state","cljs.core/not","mql","p1__35660#","js/goog.object.get","rum.core/build-defc","vec__35662","cljs.core.nth","attrs35661","cljs.core.apply","js/React.createElement","cljs.core/map?","sablono.interpreter/attributes","sablono.interpreter/interpret","predict-prostate.pages.root/root*","rum.core/reactive","ttt*","page","_","rt","rum.core/react","predict-prostate.state.run-time/route","lang","predict-prostate.state.run-time/t-state-cursor","G__35665","cljs.core/Keyword","js/Error","predict-prostate.pages.home/home","predict-prostate.pages.about/about","predict-prostate.pages.tool/tool","predict-prostate.pages.contact/contact","predict-prostate.pages.legal/legal","predict-prostate.pages.not-found/not-found","predict-prostate.pages.model-tests/model-tests","predict-prostate.pages.root/root","translations.root/ttt","predict-prostate.pages.root/edit-root","translations.root/ttt-edit"],"sourcesContent":["(ns predict-prostate.pages.root\n  (:require                                                 ;[org.martinklepsch.derivatives :refer [rum-derivatives]]\n   [rum.core :as rum]\n   [predict-prostate.state.run-time :refer [rtdb route media-change media-cursor t-state-cursor]]\n   [predict-prostate.pages.home :refer [home]]\n   [predict-prostate.pages.about :refer [about]]\n   [predict-prostate.pages.legal :refer [legal]]\n   [predict-prostate.pages.contact :refer [contact]]\n   [predict-prostate.pages.tool :refer [tool]]\n   [predict-prostate.pages.not-found :refer [not-found]]\n   [predict-prostate.pages.model-tests :refer [model-tests]]\n   [pubsub.feeds :refer [->Topic publish subscribe unsubscribe]]\n   [translations.root :refer [ttt ttt-edit]]\n   ))\n\n(defn before-print []\n  (publish media-change :print)\n  )\n\n(defn after-print []\n  (publish media-change :screen)\n  )\n\n;see https://www.tjvantoll.com/2012/06/15/detecting-print-requests-with-javascript/\n\n(defn before-after-print []\n  (js/goog.object.set js/window \"onbeforeprint\" before-print)\n  (js/goog.object.set js/window \"onafterprint\" after-print))\n\n(def media-watch {:did-mount (fn [state]\n                               ; chrome matchMedia is dodgy, and we detect it through its addEventListener prototype\n                               (if-not (.-oldBrowser js/window)\n                                 (if (.-addEventListener (.matchMedia js/window \"print\"))\n                                   (before-after-print)     ; chrome\n                                   (let [mql (.matchMedia js/window \"print\")]\n                                     (.addListener mql #(if (js/goog.object.get % \"matches\") (before-print) (after-print))))) ; firefox\n                                 (before-after-print)\n                                 )\n                               state)})\n\n(rum/defc root* < rum/reactive media-watch                   ;(rum-derivatives drv-spec)\n                 \"Root of site. All components are within this tree\"\n  [ttt*]\n  (let [[page _ _ :as rt] (rum/react route)\n        lang (:lang (rum/react t-state-cursor))]\n    [:div\n     (case page\n       :home (home ttt*) #_(home)\n       :about (about ttt* rt) #_(about rt)\n       :tool (tool ttt*)\n       :contact (contact ttt* rt) #_(contact rt)\n       :legal (legal ttt* rt) #_(legal rt)\n\n       :not-found (not-found ttt*) ;; commented out in predict3...\n       :model-tests (model-tests ttt*)\n       ;[:div \"404\"]\n       )]))\n\n(rum/defc root                                              ;< rum/reactive media-watch\n  \"Root of site. All components are within this tree\"\n  []\n  (root* ttt))\n\n(rum/defc edit-root                                         ;< rum/reactive media-watch\n  \"Root of the translation editor site. All components are within this tree\"\n  []\n  (root* ttt-edit))\n\n\n\n;; (comment\n;;   (ns predict-prostate.pages.root\n;;     (:require                                               ;[org.martinklepsch.derivatives :refer [rum-derivatives]]\n;;       [rum.core :as rum]\n;;       [predict-prostate.state.run-time :refer [rtdb route]]\n;;       [predict-prostate.pages.home :refer [home]]\n;;       [predict-prostate.pages.about :refer [about]]\n;;       [predict-prostate.pages.patient :refer [patient]]\n;;       [predict-prostate.pages.clinician :refer [clinician]]\n;;       [predict-prostate.pages.tool :refer [tool]]\n;;       ;       [predict-prostate.pages.news :refer [news]]\n;;       [predict-prostate.pages.not-found :refer [not-found]]\n;;       ))\n\n\n;;   (rum/defc root < rum/reactive                             ;(rum-derivatives drv-spec)\n;;                    \"Root of site. All components are within this tree\"\n;;     []\n;;     (let [[page params query] (rum/react route)]\n;;       [:div\n;;        (case page\n;;          :home (home)\n;;          :about (about)\n;;          :patient (patient)\n;;          :clinician (clinician)\n;;          :tool (tool)\n;;          :not-found (not-found)\n;;          [:div \"404\"]\n;;          )])))\n\n"]}