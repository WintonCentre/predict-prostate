{"version":3,"sources":["predict_prostate/pages/root.cljs"],"mappings":";AAcA,2CAAA,3CAAMA;AAAN,AACE,gGAAA,zFAASC;;AAGX,0CAAA,1CAAMC;AAAN,AACE,gGAAA,zFAASD;;AAKX,iDAAA,jDAAME;AAAN,AACE,uBAAA,vBAACC,gBAAmBC,uBAA0BL;;AAC9C,8BAAA,vBAACI,gBAAmBC,sBAAyBH;;AAE/C,0CAAA,2CAAA,rFAAKI,mJAAwB,WAAKC;AAAL,AAEE,GAAA,AAAAC,cAAQ,AAAcH;AACpB,oBAAI,AAAoB,kBAAA,lBAAaA;AACnC,AAACF;;AACD,IAAMM,YAAI,kBAAA,lBAAaJ;AAAvB,AACE,sBAAA,WAAAK,jCAAcD;AAAd,AAAmB,oBAAI,gBAAAC,iBAAA,jCAACC;AAAgC,OAACX;;AAAc,OAACE;;;;;AAC5E,AAACC;;;AAEHI;;AAE/B;;;yCAAA,AAAAK,oBAAAC,oBAAA,jFAAUQ,4FAEPE;AAFH,AAAA,AAAA,IAAAT,aAG0B,AAACa,eAAUC;WAHrC,AAAAb,4CAAAD,WAAA,IAAA,lEAGSU;QAHT,AAAAT,4CAAAD,WAAA,IAAA,/DAGcW;YAHd,AAAAV,4CAAAD,WAAA,IAAA,nEAGgBW;SAHhBX,LAGsBY;IACdG,OAAK,AAAA,oFAAO,AAACF,eAAUG;AAJ/B,AAAA,IAAAd,aAMK,iBAAAe,WAAMP;IAANO,eAAA,EAAA,CAAAA,oBAAAC,oBAAA,AAAAD,aAAA;AAAA,AAAA,QAAAA;KAAA;AACQ,OAACG,iCAAKX;;;KADd;AAES,OAACY,mCAAMZ,UAAKG;;;KAFrB;AAGQ,OAACU,iCAAKb;;;KAHd;AAIW,OAACc,uCAAQd,UAAKG;;;KAJzB;AAKS,OAACY,mCAAMf,UAAKG;;;KALrB;AAOa,OAACa,2CAAUhB;;;;AAPxB,MAAA,KAAAU,MAAA,CAAA,mEAAAF;;;;AANL,AAAA,OAAAd,6BAAA,MAAA,EAAA,AAAAC,qBAAAF,aAAA,AAAAG,wCAAAH,YAAA,MAAA,EAAA,AAAAE,qBAAAF,aAAA,KAAA,CAAA,AAAAI,+BAAAJ;GAAA,qJAAA,lEAAkBM,kBAAahB;AAiB/B;;;mCAAA,AAAAM,oBAAAC,oBAAA,3EAAU2B;AAAV,AAAA,AAGE,OAACnB,uCAAMoB;GAHT,KAAA;AAKA;;;wCAAA,AAAA7B,oBAAAC,oBAAA,hFAAU6B;AAAV,AAAA,AAGE,OAACrB,uCAAMsB;GAHT,KAAA","names":["predict-prostate.pages.root/before-print","predict-prostate.state.run-time/media-change","predict-prostate.pages.root/after-print","predict-prostate.pages.root/before-after-print","js/goog.object.set","js/window","predict-prostate.pages.root/media-watch","state","cljs.core/not","mql","p1__48608#","js/goog.object.get","rum.core/lazy-build","rum.core/build-defc","vec__48612","cljs.core.nth","attrs48611","daiquiri.core/create-element","cljs.core/map?","daiquiri.interpreter/element-attributes","daiquiri.interpreter/interpret","predict-prostate.pages.root/root*","rum.core/reactive","ttt*","page","_","rt","rum.core/react","predict-prostate.state.run-time/route","lang","predict-prostate.state.run-time/t-state-cursor","G__48615","cljs.core/Keyword","js/Error","predict-prostate.pages.home/home","predict-prostate.pages.about/about","predict-prostate.pages.tool/tool","predict-prostate.pages.contact/contact","predict-prostate.pages.legal/legal","predict-prostate.pages.not-found/not-found","predict-prostate.pages.root/root","translations.root/ttt","predict-prostate.pages.root/edit-root","translations.root/ttt-edit"],"sourcesContent":["(ns predict-prostate.pages.root\n  (:require                                                 ;[org.martinklepsch.derivatives :refer [rum-derivatives]]\n   [rum.core :as rum]\n   [predict-prostate.state.run-time :refer [rtdb route media-change media-cursor t-state-cursor]]\n   [predict-prostate.pages.home :refer [home]]\n   [predict-prostate.pages.about :refer [about]]\n   [predict-prostate.pages.legal :refer [legal]]\n   [predict-prostate.pages.contact :refer [contact]]\n   [predict-prostate.pages.tool :refer [tool]]\n   [predict-prostate.pages.not-found :refer [not-found]]\n   [pubsub.feeds :refer [->Topic publish subscribe unsubscribe]]\n   [translations.root :refer [ttt ttt-edit]]\n   ))\n\n(defn before-print []\n  (publish media-change :print)\n  )\n\n(defn after-print []\n  (publish media-change :screen)\n  )\n\n;see https://www.tjvantoll.com/2012/06/15/detecting-print-requests-with-javascript/\n\n(defn before-after-print []\n  (js/goog.object.set js/window \"onbeforeprint\" before-print)\n  (js/goog.object.set js/window \"onafterprint\" after-print))\n\n(def media-watch {:did-mount (fn [state]\n                               ; chrome matchMedia is dodgy, and we detect it through its addEventListener prototype\n                               (if-not (.-oldBrowser js/window)\n                                 (if (.-addEventListener (.matchMedia js/window \"print\"))\n                                   (before-after-print)     ; chrome\n                                   (let [mql (.matchMedia js/window \"print\")]\n                                     (.addListener mql #(if (js/goog.object.get % \"matches\") (before-print) (after-print))))) ; firefox\n                                 (before-after-print)\n                                 )\n                               state)})\n\n(rum/defc root* < rum/reactive media-watch                   ;(rum-derivatives drv-spec)\n                 \"Root of site. All components are within this tree\"\n  [ttt*]\n  (let [[page _ _ :as rt] (rum/react route)\n        lang (:lang (rum/react t-state-cursor))]\n    [:div\n     (case page\n       :home (home ttt*) #_(home)\n       :about (about ttt* rt) #_(about rt)\n       :tool (tool ttt*)\n       :contact (contact ttt* rt) #_(contact rt)\n       :legal (legal ttt* rt) #_(legal rt)\n\n       :not-found (not-found ttt*) ;; commented out in predict3...\n       ;[:div \"404\"]\n       )]))\n\n(rum/defc root                                              ;< rum/reactive media-watch\n  \"Root of site. All components are within this tree\"\n  []\n  (root* ttt))\n\n(rum/defc edit-root                                         ;< rum/reactive media-watch\n  \"Root of the translation editor site. All components are within this tree\"\n  []\n  (root* ttt-edit))\n\n\n\n;; (comment\n;;   (ns predict-prostate.pages.root\n;;     (:require                                               ;[org.martinklepsch.derivatives :refer [rum-derivatives]]\n;;       [rum.core :as rum]\n;;       [predict-prostate.state.run-time :refer [rtdb route]]\n;;       [predict-prostate.pages.home :refer [home]]\n;;       [predict-prostate.pages.about :refer [about]]\n;;       [predict-prostate.pages.patient :refer [patient]]\n;;       [predict-prostate.pages.clinician :refer [clinician]]\n;;       [predict-prostate.pages.tool :refer [tool]]\n;;       ;       [predict-prostate.pages.news :refer [news]]\n;;       [predict-prostate.pages.not-found :refer [not-found]]\n;;       ))\n\n\n;;   (rum/defc root < rum/reactive                             ;(rum-derivatives drv-spec)\n;;                    \"Root of site. All components are within this tree\"\n;;     []\n;;     (let [[page params query] (rum/react route)]\n;;       [:div\n;;        (case page\n;;          :home (home)\n;;          :about (about)\n;;          :patient (patient)\n;;          :clinician (clinician)\n;;          :tool (tool)\n;;          :not-found (not-found)\n;;          [:div \"404\"]\n;;          )])))\n\n"]}