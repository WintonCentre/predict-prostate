{
"version":3,
"file":"bide.impl.router.js",
"lineCount":190,
"mappings":"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",
"sources":["bide/impl/router.js"],
"sourcesContent":["/**\n * router\n *\n * @author Andrey Antukh <niwi@niwi.nz>, 2016\n * @license BSD License <https://opensource.org/licenses/BSD-2-Clause>\n */\n\ngoog.provide(\"bide.impl.router\");\n\ngoog.require(\"bide.impl.path\");\ngoog.require(\"bide.impl.helpers\");\n\ngoog.require(\"goog.object\");\n\ngoog.scope(function() {\n  var _path = bide.impl.path;\n  var isArray = bide.impl.helpers.isArray;\n\n  /**\n   * Main router class.\n   *\n   * @constructor\n   * @struct\n   */\n  function Router() {\n    this.items = [];\n    this.map = {};\n  }\n\n  /**\n   * Routing Item class\n   *\n   * @constructor\n   * @struct\n   */\n  function Route() {\n    this.re = null;\n    this.name = null;\n    this.keys = null;\n    this.format = null;\n  }\n\n  /**\n   * Insert a new route entry to the router.\n   * If router is `null` a new router is created.\n   *\n   * @param {?Router} router\n   * @param {string} path\n   * @param {!Object} name\n   * @param {*} options\n   * @return {Router}\n   */\n  function insert(router, path, name, options) {\n    var route = new Route();\n\n    route.re = _path.parse(path, options);\n    route.keys = route.re._keys;\n    route.format = _path.compileTokens(route.re._tokens);\n    route.name = name;\n\n    if (router == null) {\n      router = new Router();\n    }\n\n    router.items.push(route);\n    name = name.toString();\n\n    if (router.map[name] === undefined) {\n      router.map[name] = [route];\n    } else {\n      router.map[name].push(route);\n    }\n\n    return router;\n  }\n\n  /**\n   * Encode query params.\n   *\n   * @param {!Object<string,*} query\n   * @return {string}\n   */\n  function encodeQueryParams(params) {\n    var encode = encodeURIComponent;\n    var keys = goog.object.getKeys(params);\n\n    var result = [];\n\n    for (var i=0; i<keys.length; i++) {\n      var key = keys[i];\n      var val = params[key];\n\n      if (val === undefined) {\n        // Do nothing\n      } else if (val === null) {\n        result.push(encode(key));\n      } else if (isArray(val)) {\n        var _result = [];\n\n        for (var y=0; y<val.length; y++) {\n          var _val = val[y];\n\n          if (_val === undefined) {\n            // do nothing\n          } else if (_val === null) {\n            _result.push(encode(key));\n          } else {\n            _result.push(encode(key) + \"=\" + encode(_val));\n          }\n        }\n\n        result.push(_result.join(\"&\"));\n      } else {\n        result.push(encode(key) + \"=\" + encode(val));\n      }\n    }\n\n    return result.join(\"&\");\n  }\n\n  /**\n   * Parses the query string to javascript object.\n   *\n   * @param {!string} query\n   * @return {Object<string,*>}\n   */\n  function parseQuery(query) {\n    var result = {};\n\n    if (! typeof val == 'string') {\n      return result;\n    }\n\n    query = query.trim().replace(/^(\\?|#|&)/, '');\n\n    if (!query) {\n      return result;\n    }\n\n    var params = query.split(\"&\");\n\n    for (var i=0; i<params.length; i++) {\n      var parts = params[i].replace(/\\+/g, ' ').split('=');\n\n      var key = parts.shift();\n      var val = parts.length > 0 ? parts.join('=') : undefined;\n      key = decodeURIComponent(key);\n\n      if (val === undefined) {\n        val = null;\n      } else {\n        val = decodeURIComponent(val);\n      }\n\n      if (result[key] === undefined) {\n        result[key] = val;\n      } else if (isArray(result[key])) {\n        result[key].push(val);\n      } else {\n        result[key] = [result[key], val];\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Match a path in the router.\n   *\n   * @param {!Router} router\n   * @param {!string} path\n   * @return {Array<*>}\n   */\n  function match(router, path) {\n    var path, query;\n\n    if (path.indexOf(\"?\") !== -1) {\n      var parts = path.split(\"?\");\n      path = parts[0];\n      query = parseQuery(parts[1]);\n    } else {\n      path = path;\n      query = null;\n    }\n\n    var items = router.items;\n    var result = null;\n    var item = null;\n\n\n    for (var i=0; i<items.length; i++) {\n      item = items[i];\n      result = item.re.exec(path);\n\n      if (result !== null) {\n        break;\n      }\n    }\n\n    if (result === null) {\n      return null;\n    }\n\n    var params = {};\n    for (var i=0; i<item.keys.length; i++) {\n      var key = item.keys[i];\n      var res = result[(i + 1)];\n      if (res != null) {\n        params[key.name] = res;\n      }\n    }\n\n    if (isEmpty(params)) {\n      params = null;\n    }\n\n    return [item.name, params, query];\n  }\n\n  /**\n   * Perform a resolve operation on router.\n   *\n   * @param {!Router} router\n   * @param {*} name\n   * @param {Object<string,*>} params\n   * @param {Object<string,*>} query\n   * @return {Array<?>}\n   */\n  function resolve(router, name, params, query) {\n    var routes = router.map[name.toString()] || null;\n\n    if (routes == null) {\n      return null;\n    }\n\n    var result = null;\n\n    // If params is empty just check all possible\n    // options and return the first one that matches\n    // in case contrary check only routes with params\n    // because route without params does not raise\n    // exceptions causing that they are always elected\n    // independently if params are passed or not.\n    if (isEmpty(params)) {\n      for (var i=0; i<routes.length; i++) {\n        try {\n          result = routes[i].format(params);\n          break;\n        } catch (e) {}\n      }\n    } else {\n      for (var i=0; i<routes.length; i++) {\n        if (routes[i].keys.length === 0) {\n          continue;\n        }\n\n        try {\n          result = routes[i].format(params);\n          break;\n        } catch (e) {}\n      }\n    }\n\n    if (query != null && result != null) {\n      result = result + \"?\" + encodeQueryParams(query);\n    }\n\n    return result;\n  }\n\n  /**\n   * Check if provided value is an instance of Router\n   *\n   * @param {*} v\n   * @return {boolean}\n   */\n  function isRouter(v) {\n    return v instanceof Router;\n  }\n\n  /**\n   * Create an empty Router instance.\n   *\n   * @return {Router}\n   */\n  function empty() {\n    return new Router();\n  }\n\n  /**\n   * Check if provided obj is empty.\n   *\n   * @param {Object} obj\n   * @return {boolean}\n   */\n  function isEmpty(obj) {\n    for (var x in obj) { return false; }\n    return true;\n  }\n\n  var module = bide.impl.router;\n  module.insert = insert;\n  module.match = match;\n  module.resolve = resolve;\n  module.isRouter = isRouter;\n  module.empty = empty;\n  module.parseQuery = parseQuery;\n  module.encodeQueryParams = encodeQueryParams;\n});\n"],
"names":["goog","provide","require","scope","_path","bide","impl","path","isArray","helpers","Router","items","map","Route","re","name","keys","format","insert","router","options","route","parse","_keys","compileTokens","_tokens","push","toString","undefined","encodeQueryParams","params","encode","encodeURIComponent","object","getKeys","result","i","length","key","val","_result","y","_val","join","parseQuery","query","trim","replace","split","parts","shift","decodeURIComponent","match","indexOf","item","exec","res","isEmpty","resolve","routes","e","isRouter","v","empty","obj","x","module"]
}
