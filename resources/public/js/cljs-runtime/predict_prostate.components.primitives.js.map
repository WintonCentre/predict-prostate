{"version":3,"sources":["predict_prostate/components/primitives.cljs"],"mappings":"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","names":["predict-prostate.components.primitives/psz","predict-prostate.components.primitives/x-centre-off","predict-prostate.components.primitives/cx","predict-prostate.components.primitives/cy","predict-prostate.components.primitives/gap","predict-prostate.components.primitives/r","predict-prostate.components.primitives/xoff","predict-prostate.components.primitives/yoff","predict-prostate.components.primitives/left","x","predict-prostate.components.primitives/bottom","y","rum.core/lazy-build","rum.core/build-defc","p__33649","map__33650","cljs.core/--destructure-map","cljs.core.get","daiquiri.core/create-element","predict-prostate.components.primitives/pic","fill","p__33651","map__33652","predict-prostate.components.primitives/pic-dead","predict-prostate.components.primitives/dead-icon","predict-prostate.components.primitives/open-icon","predict-prostate.components.primitives/circ*","opacity","stroke","r","cx","predict-prostate.components.primitives/circ","predict-prostate.components.primitives/tally*","w","predict-prostate.components.primitives/tally","predict-prostate.components.primitives/twidth","predict-prostate.components.primitives/tspace","p__33675","map__33676","predict-prostate.components.primitives/blob","key","tally?","cljs.core._EQ_","p__33679","map__33680","daiquiri.interpreter/interpret","predict-prostate.components.primitives/blob-10","p1__33678#","cljs.core.map","rum.core/with-key","cljs.core.range","p__33686","map__33687","predict-prostate.components.primitives/mixed-10","p1__33683#","p1__33684#","p1__33685#"],"sourcesContent":["(ns predict-prostate.components.primitives\n  (:require [rum.core :as rum]\n            [graphics.simple-icons :refer [icon]]\n            ))\n\n; These parameters size and position the round blob icons\n(def psz 24)                                                ; 20 originally\n(def x-centre-off (dec (int (/ psz 2))))                    ; 9 originally\n(def cx (/ psz 2))                                          ; 10\n(def cy (inc cx))                                           ; 11\n(def gap 2)                                                 ; 2\n(def r (- cx gap))                                          ; 8\n(def xoff 15)                                               ; 15 originally\n(def yoff (dec (* 10 (+ 3 psz))))                           ; 219 originally\n\n(defn left [x] (str (+ (* psz (- x-centre-off x 2)) xoff) \"px\"))\n(defn bottom [y] (str (+ (* psz y) (- yoff)) \"px\"))\n\n\n(rum/defc pic [{:keys [fill x y]}]\n  [:div {:style {:fontSize psz\n                 :display  \"inline-block\"\n                 :position \"absolute\"\n                 :left     (left x)\n                 :bottom   (bottom y)\n                 }}\n   ;(println \"pic fill\" fill \"x\" x \"y\" y)\n   [:svg {:width psz :height psz}\n    [:circle {:cx cx :cy cy :r r :fill fill :stroke fill :stroke-width 2.5}]]])\n\n(rum/defc pic-dead [{:keys [fill x y]}]\n  ;(println \"pic-dead fill\" fill \"x\" x \"y\" y)\n  [:div {:style {:fontSize psz\n                 :display  \"inline-block\"\n                 :position \"absolute\"\n                 :left     (left x)\n                 :bottom   (bottom y)}}\n\n   [:svg {:width psz :height psz}\n    [:circle {:cx cx :cy cy :r r :fill \"none\" :stroke fill :stroke-width 2.5}]]])\n\n(rum/defc dead-icon [fill]\n  [:svg {:width psz :height psz :style {:margin-bottom -5}}\n   [:circle {:cx cx :cy cy :r r :fill fill :stroke \"none\"}]])\n\n(rum/defc open-icon [fill]\n  [:svg {:width psz :height psz :style {:margin-bottom -5}}\n   [:circle {:cx cx :cy cy :r r :stroke-width 2.5 :stroke fill :fill \"none\"}]])\n\n(rum/defc circ*\n  [fill opacity stroke r cx]\n  [:circle {:cx (+ cx r) :cy r :r r :fill fill :opacity opacity :stroke stroke :stroke-width 1}])\n\n(rum/defc circ\n  [fill stroke r cx]\n  (circ* fill 1 stroke r cx))\n\n(rum/defc tally*\n  [fill opacity w x]\n  [:rect {:fill fill :opacity opacity :x x :y 0 :height 20 :width w}])\n\n(rum/defc tally\n  [fill w x]\n  (tally* fill 1 w x)\n  )\n\n(def twidth 3)\n(def tspace 4)\n\n(rum/defc blob [{:keys [key fill r tally?]}]\n  [:svg {:key key :width (* 2 r) :height (* 2 r)}\n   (if tally?\n     (tally fill 1 0)\n     (circ fill (if (= fill \"white\") \"#BBBBBB\" \"none\") r 0))])\n\n\n(rum/defc blob-10 [{:keys [fill r tally?]}]\n  [:svg {:width (* 11 (if tally? tspace (* 2 r))) :height (if tally? 15 (* 2 r))}\n   (map #(rum/with-key (if tally? (tally fill\n                                         twidth\n                                         (* tspace %))\n                                  (circ fill\n                                        (if (= fill \"white\") \"#BBBBBB\" \"none\")\n                                        r\n                                        (* 2 r %))) (str \"b10-\" %))\n        (range 10))])\n\n(rum/defc mixed-10\n  [{:keys [fill r x tally?]}]\n  [:svg {:key \"m10\" :width (* 11 (if tally? tspace (* 2 r))) :height (if tally? 15 (* 2 r))}\n   (map #(rum/with-key (if tally?\n                         (tally fill\n                                twidth\n                                (* tspace %))\n                         (circ* fill\n                                1\n                                \"none\"\n                                r\n                                (* 2 r %))) (str \"m10+\" %))\n        (range (dec x)))\n   (map #(rum/with-key (if tally?\n                         (tally fill\n                                twidth\n                                (* tspace %))\n                         (circ* fill\n                                1\n                                \"none\"\n                                r\n                                (* 2 r %))) (str \"m10+\" %))\n        [(dec x)])\n\n   (map #(rum/with-key (if tally?\n                         (tally \"#BBBBBB\"\n                                twidth\n                                (* tspace (+ x %)))\n                         (circ \"white\"\n                               \"#BBBBBB\"\n                               r\n                               (* 2 r (+ x %)))) (str \"m10-\" %))\n        (range (- 10 x)))\n   ])\n"]}