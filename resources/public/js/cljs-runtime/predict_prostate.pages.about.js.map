{"version":3,"sources":["predict_prostate/pages/about.cljs"],"mappings":"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","names":["predict-prostate.pages.about/page-components","predict-prostate.pages.about/save-offsets","state","cljs.core.println","vec__228521","cljs.core.nth","k","_","offsets","comp","dom-node","js/ReactDOM.findDOMNode","cljs.core.swap_BANG_","cljs.core/assoc","predict-prostate.pages.about/scroll-to-mixin","rum.core/build-defc","js/React.createElement","predict-prostate.pages.about/hr","sablono.interpreter/interpret","predict-prostate.pages.about/sectionc","rum.core/static","rum.core/reactive","ttt","rt","rum.core/react","predict-prostate.state.run-time/route","cljs.core/name","predict-prostate.content-reader/all-subsections","predict-prostate.pages.about/scroller","vec__228560","vec__228563","map__228566","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","page","scroll-section","cljs.core.keyword","interop.utils/scrollTo","cljs.core/deref","rum.core/build-defcs","vec__228585","map__228588","vec__228589","seq__228590","cljs.core/seq","first__228591","cljs.core/first","cljs.core/next","attrs228581","cljs.core/map?","sablono.interpreter/attributes","sablono.normalize.merge_with_class","attrs228583","attrs228584","predict-prostate.pages.about/about","rum.core.local","route","preamble","predict_prostate.content_reader.section","predict-prostate.layout.header/header","predict-prostate.layout.header/header-banner","sec","p1__228576#","p2__228575#","cljs.core.map_indexed","rum.core/with-key","G__228630","G__228631","G__228632","G__228650","G__228651","G__228652","predict-prostate.components.bs3-modal/editor-modal","predict-prostate.layout.header/footer-banner","predict-prostate.layout.header/footer"],"sourcesContent":["(ns predict-prostate.pages.about\n  (:require [rum.core :as rum]\n            [predict-prostate.components.button :refer [start-button]]\n            [predict-prostate.layout.header :refer [header header-banner footer footer-banner]]\n            [predict-prostate.content-reader :refer [section all-subsections]]\n            [predict-prostate.state.run-time :refer [route]]\n            [predict-prostate.results.util :refer [alison-blue-1 alison-blue-2 alison-blue-3 alison-pink]]\n            [graphics.simple-icons :refer [icon]]\n            [pubsub.feeds :refer [publish]]\n            [interop.utils :refer [scrollTo]]\n            [predict-prostate.components.bs3-modal :refer [editor-modal]]\n            ))\n\n(def page-components {:about [\"about\"]\n                      :overview  [\"overview\" \"whatpredictdoes\" \"whoisitfor\" \"howpredictworks\" \"whobuiltpredict\"]\n                      :technical [\"technical\" \"history\" \"preversions\" \"publications\"]\n                      })\n\n(defn save-offsets [state]\n  (println \"*save-offsets* args\" (:rum/args state))\n  (let [[k _ offsets] (:rum/args state)\n        comp (:rum/react-component state)\n        dom-node (js/ReactDOM.findDOMNode comp)]\n    (swap! offsets assoc k (.-offsetTop dom-node))\n    state))\n\n(def scroll-to-mixin {:did-mount save-offsets\n                      :did-update save-offsets})\n\n(rum/defc hr []\n  [:hr {:style {:color \"red\"}}])\n\n(rum/defc sectionc < scroll-to-mixin rum/static rum/reactive [k ttt offsets]\n  (let [rt (rum/react route)]\n    [:div {:id (name k)}\n     (all-subsections ttt (name k))]))\n\n(def scroller {:did-update (fn [state]\n                             (println \"*scroller* args\" (:rum/args state))\n                             (let [[_ [_ {page :page scroll-section :section}]] (:rum/args state)\n                                   scroll-section (keyword scroll-section)]\n                               (scrollTo (if scroll-section (get @(::offsets state) (name scroll-section)) 0))\n                               )\n                             state)})\n\n\n(rum/defcs about\n  \"Renders a (text) page given the bide parsed route containing a page, and optionally a section.\"\n  < (rum/local {} ::offsets) < rum/static scroller \n           [state ttt route]\n  (let [[_ {page :page scroll-section :section}] route\n        page (keyword page)\n        scroll-section (keyword scroll-section)\n        [_ & preamble] (section ttt \"tool-preamble\")]\n\n    [:.container-fluid\n     (header ttt)\n     (header-banner ttt \"about-preamble\")\n\n     [:#main-content.row {:tab-index -1}\n      [:.col-sm-10.col-sm-offset-1.col-lg-8.col-lg-offset-2 {:style {:min-height \"calc(100vh - 700px)\"}}\n       (when page\n         (let [sec (if scroll-section\n                     (map-indexed #(rum/with-key (sectionc %2 ttt (::offsets state)) %1) (page-components page))\n                     (all-subsections ttt (name page)))]        ; this is needed for FAQs\n           sec))]]\n     (editor-modal)\n     (footer-banner ttt)\n\n     #_(if scroll-section\n         (js/scroll #js {:left 0 :top (get @(::offsets state) (name scroll-section)) :behavior \"smooth\"})\n         (js/scroll #js {:left 0 :top 0 :behavior \"smooth\"}))\n\n     ;(scrollTo (if scroll-section (get @(::offsets state) (name scroll-section)) 0))\n\n     [:.row.screen-only\n      (footer)]]))\n\n\n\n\n"]}