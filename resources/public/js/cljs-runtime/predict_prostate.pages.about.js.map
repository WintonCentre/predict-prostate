{"version":3,"sources":["predict_prostate/pages/about.cljs"],"mappings":"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","names":["predict-prostate.pages.about/page-components","predict-prostate.pages.about/save-offsets","state","cljs.core.println","vec__49833","cljs.core.nth","k","_","offsets","comp","dom-node","js/ReactDOM.findDOMNode","cljs.core.swap_BANG_","cljs.core/assoc","predict-prostate.pages.about/scroll-to-mixin","rum.core/build-defc","js/React.createElement","predict-prostate.pages.about/hr","sablono.interpreter/interpret","predict-prostate.pages.about/sectionc","rum.core/static","rum.core/reactive","ttt","rt","rum.core/react","predict-prostate.state.run-time/route","cljs.core/name","predict-prostate.content-reader/all-subsections","predict-prostate.pages.about/scroller","vec__49838","vec__49841","map__49844","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","page","scroll-section","cljs.core.keyword","js/console","cljs.core/deref","interop.utils/scrollTo","rum.core/build-defcs","vec__49851","map__49854","vec__49855","seq__49856","cljs.core/seq","first__49857","cljs.core/first","cljs.core/next","attrs49848","cljs.core/map?","sablono.interpreter/attributes","sablono.normalize.merge_with_class","attrs49849","attrs49850","predict-prostate.pages.about/about","rum.core.local","route","preamble","predict_prostate.content_reader.section","predict-prostate.layout.header/header","predict-prostate.layout.header/header-banner","sec","p1__49847#","p2__49846#","cljs.core.map_indexed","rum.core/with-key","G__49859","G__49860","G__49861","G__49862","G__49863","G__49864","predict-prostate.layout.header/footer-banner","predict-prostate.layout.header/footer"],"sourcesContent":["(ns predict-prostate.pages.about\n  (:require [rum.core :as rum]\n            [predict-prostate.components.button :refer [start-button]]\n            [predict-prostate.layout.header :refer [header header-banner footer footer-banner]]\n            [predict-prostate.content-reader :refer [section all-subsections]]\n            [predict-prostate.state.run-time :refer [route]]\n            [predict-prostate.results.util :refer [alison-blue-1 alison-blue-2 alison-blue-3 alison-pink]]\n            [graphics.simple-icons :refer [icon]]\n            [pubsub.feeds :refer [publish]]\n            [interop.utils :refer [scrollTo]]\n            ))\n\n\n#_(rum/defc about < rum/static []\n  [:.container\n   [:.row\n    [:.col-sm-12\n     (header)\n     [:.row\n      [:.col-sm-10.col-sm-offset-1 {:style {:min-height \"calc(100vh - 200px)\"}}\n       (all-subsections \"about-page\")\n       ]\n      ]\n     (footer)]]\n   ])\n\n\n(def page-components {:about [\"about\"]\n                      :overview  [\"overview\" \"whatpredictdoes\" \"whoisitfor\" \"howpredictworks\" \"whobuiltpredict\"]\n                      :technical [\"technical\" \"history\" \"preversions\" \"publications\"]\n                      })\n\n(defn save-offsets [state]\n  (println \"*save-offsets* args\" (:rum/args state))\n  (let [[k _ offsets] (:rum/args state)\n        comp (:rum/react-component state)\n        dom-node (js/ReactDOM.findDOMNode comp)]\n    (swap! offsets assoc k (.-offsetTop dom-node))\n    state))\n\n(def scroll-to-mixin {:did-mount save-offsets\n                      :did-update save-offsets})\n\n(rum/defc hr []\n  [:hr {:style {:color \"red\"}}])\n\n(rum/defc sectionc < scroll-to-mixin rum/static rum/reactive [k ttt offsets]\n  (let [rt (rum/react route)]\n    [:div {:id (name k)}\n     (all-subsections ttt (name k))]))\n\n(def scroller {:did-update (fn [state]\n                             (println \"*scroller* args\" (:rum/args state))\n                             (let [[_ [_ {page :page scroll-section :section}]] (:rum/args state)\n                                   scroll-section (keyword scroll-section)]\n                               (.log js/console \"goo \" scroll-section)\n                               (.log js/console \"scroll-section \" (name scroll-section))\n                               (.log js/console \"offsets \" (::offsets state))\n                               (.log js/console \"offset: \" (get @(::offsets state) (name scroll-section)))\n                               (scrollTo (if scroll-section (get @(::offsets state) (name scroll-section)) 0))\n                               )\n                             state)})\n\n\n(rum/defcs about\n  \"Renders a (text) page given the bide parsed route containing a page, and optionally a section.\"\n  < (rum/local {} ::offsets) < rum/static scroller \n           [state ttt route]\n  (let [[_ {page :page scroll-section :section}] route\n        page (keyword page)\n        scroll-section (keyword scroll-section)\n        [_ & preamble] (section ttt \"tool-preamble\")]\n\n    [:.container-fluid\n     (header ttt)\n     (header-banner ttt \"about-preamble\")\n\n     [:#main-content.row {:tab-index -1}\n      [:.col-sm-10.col-sm-offset-1.col-lg-8.col-lg-offset-2 {:style {:min-height \"calc(100vh - 700px)\"}}\n       (when page\n         (let [sec (if scroll-section\n                     (map-indexed #(rum/with-key (sectionc %2 ttt (::offsets state)) %1) (page-components page))\n                     (all-subsections ttt (name page)))]        ; this is needed for FAQs\n           sec))]]\n\n     (footer-banner ttt)\n\n     #_(if scroll-section\n         (js/scroll #js {:left 0 :top (get @(::offsets state) (name scroll-section)) :behavior \"smooth\"})\n         (js/scroll #js {:left 0 :top 0 :behavior \"smooth\"}))\n\n     ;(scrollTo (if scroll-section (get @(::offsets state) (name scroll-section)) 0))\n\n     [:.row.screen-only\n      (footer)]]))\n\n\n\n\n"]}