{"version":3,"sources":["predict_prostate/pages/about.cljs"],"mappings":";AAaA,+CAAA,2CAAA,uDAAA,mFAAA,gBAAA,6DAAA,mFAAA,WAAA,kBAAA,aAAA,kBAAA,0BAAA,gEAAA,mFAAA,YAAA,UAAA,cAAA,jpBAAKA;AAKL,4CAAA,5CAAMC,gGAAcC;AAApB,AACE,yGAAA,zGAACC,+HAA8B,AAAA,wFAAWD;;AAC1C,IAAAE,aAAoB,AAAA,wFAAWF;QAA/B,AAAAG,4CAAAD,WAAA,IAAA,/DAAOE;QAAP,AAAAD,4CAAAD,WAAA,IAAA,/DAASG;cAAT,AAAAF,4CAAAD,WAAA,IAAA,rEAAWI;IACLC,OAAK,AAAA,+GAAsBP;IAC3BQ,WAAS,AAACC,qBAAwBF;AAFxC,AAGE,AAACG,mDAAMJ,QAAQK,gBAAMP,EAAE,AAAaI;;AACpCR;;AAEJ,+CAAA,2CAAA,wGAAA,lMAAKY,wJAA4Bb,4GACCA;AAElC,kCAAA,AAAAc,oBAAA,tDAAUE;AAAV,AAAA,AAAA,OAAAD,oBAAA,KAAA,WAAA,WAAA;GAAA,KAAA;AAGA,wCAAA,AAAAD,oBAAA,5DAAUI,uEAAoDb,EAAEgB,IAAId;AAApE,AAAA,AAAA,IACQe,KAAG,AAACC,eAAUC;AADtB,AAAA,OAAAT,oBAAA,MAAA,4BAAA,AAAAE,pBAEe,AAACQ,eAAKpB,mCAChB,AAACqB,gDAAgBL,IAAI,AAACI,eAAKpB;GAHhC,2KAAA,xFAAqBQ,6CAAgBM,iBAAWC;AAKhD,wCAAA,2CAAA,nFAAKO,qJAAsB,WAAK1B;AAAL,AACE,yGAAA,zGAACC,2HAA0B,AAAA,wFAAWD;;AACtC,IAAA2B,mBAAmD,AAAA,wFAAW3B;cAA9D,AAAAG,4CAAAwB,iBAAA,IAAA,3EAAOtB;IAAPuB,mBAAA,AAAAzB,4CAAAwB,iBAAA,IAAA;kBAAA,AAAAxB,4CAAAyB,iBAAA,IAAA,/EAAUvB;IAAVwB,mBAAA,AAAA1B,4CAAAyB,iBAAA,IAAA;IAAAC,uBAAA,AAAAC,4BAAAD;iBAAA,AAAAE,4CAAAF,qBAAA,9EAAaG;2BAAb,AAAAD,4CAAAF,qBAAA,xFAAwBI;IAClBA,2BAAe,AAACC,gDAAQD;AAD9B,AAEE,AAACE,uBAAS,ySAAA,vRAAIF,0BAAe,4CAAA,AAAAG,5CAACL,4DAAK,AAAA,+IAAW/B,QAAO,AAACwB,eAAKS;;AAE7DjC;;AAG7B;;;qCAAA,AAAAqC,qBAAA,1DAAWgB,qEAGCrD,MAAMoB,IAAImC;AAHtB,AAAA,AAAA,IAAAjB,aAIiDiB;QAJjD,AAAApD,4CAAAmC,WAAA,IAAA,/DAISjC;IAJTkC,aAAA,AAAApC,4CAAAmC,WAAA,IAAA;IAAAC,iBAAA,AAAAT,4BAAAS;WAAA,AAAAR,4CAAAQ,eAAA,lEAIYP;qBAJZ,AAAAD,4CAAAQ,eAAA,5EAIuBN;IACfD,WAAK,AAACE,gDAAQF;IACdC,qBAAe,AAACC,gDAAQD;IANhCO,aAOuB,0EAAA,1EAACiB,sEAAQrC;IAPhCqB,aAAA,AAAAC,cAAAF;IAAAG,eAAA,AAAAC,gBAAAH;IAAAA,iBAAA,AAAAI,eAAAJ;YAAAE,RAOStC;eAPToC,XAOae;AAPb,AAAA,IAAAV,aAUK,CAACY,sEAAAA,2EAAAA,PAAOtC,uDAAAA;AAVb,AAAA,OAAA2B,8CAAAjC,oBAAA,MAAA,EAAA,AAAAkC,qBAAAF,aAAA,AAAAG,+BAAA,AAAAC,0HAAA,2CAAA,wDAAA,mFAAA,kCAAAJ,kBAAA,eAAA,qBAAA,EAAA,AAAAE,qBAAAF,aAAA,mFAAA,AAAA9B,8RAAA,AAAAF,oBAAA,MAAA,QAAA,4BAAA,mBAAA,QAAA,AAAAA,oBAAA,MAAA,WAAA,eAAA,sCAAA,uDAAA,AAAAE,1eAWK,6JAAA,+EAAA,3OAAC2C,6EAAAA,mGAAAA,xBAAcvC,+EAAAA,gSAIb,4BAAA,VAAMY,UACJ,iBAAM4B,MAAI,kBAAI3B,oBACF,oDAAA,WAAA4B,iBAAAC,hFAACC;AAAD,AAAc,OAACC,kBAAa,iBAAAC,WAAAH;IAAAI,WAAa9C;IAAb+C,WAAiB,AAAA,+IAAWnE;AAA5B,AAAA,kJAAAiE,SAAAC,SAAAC,4DAAAF,SAAAC,SAAAC,1OAAClD,sEAAAA,kGAAAA;KAAf4C;GAAsD,CAAC/D,6EAAAA,uFAAAA,ZAAgBkC,mEAAAA,YACrF,AAACP,gDAAgBL,IAAI,AAACI,eAAKQ;AAFvC,AAGE4B;cAnBX,AAAA5C,uQAAA,AAAAA,4PAAA,iBAAAmC,7hBAeO,uCAKF,CAACoB,mFAAAA,qFAAAA,8FACD,CAACC,6EAAAA,kFAAAA,PAAcpD,8DAAAA,qCASd,CAACqD,sEAAAA,wEAAAA;AA9BP,AAAA,OAAA1B,8CAAAjC,oBAAA,MAAA,EAAA,AAAAkC,qBAAAG,aAAA,AAAAF,+BAAA,AAAAC,0HAAA,2CAAA,wDAAA,mFAAA,MAAA,8BAAAC,kBAAA,eAAA,qBAAA,EAAA,AAAAH,qBAAAG,aAAA,KAAA,mFAAA,AAAAnC,8BAAAmC;aAAA,mFAAA,AAAAnC,8BAAA8B,YAAA,AAAA9B,8RAAA,AAAAF,oBAAA,MAAA,QAAA,4BAAA,mBAAA,QAAA,AAAAA,oBAAA,MAAA,WAAA,eAAA,sCAAA,uDAAA,AAAAE,1eAWK,6JAAA,+EAAA,3OAAC2C,6EAAAA,mGAAAA,xBAAcvC,+EAAAA,gSAIb,4BAAA,VAAMY,UACJ,iBAAM4B,MAAI,kBAAI3B,oBACF,oDAAA,WAAA4B,iBAAAC,hFAACC;AAAD,AAAc,OAACC,kBAAa,iBAAAI,WAAAN;IAAAO,WAAajD;IAAbkD,WAAiB,AAAA,+IAAWtE;AAA5B,AAAA,kJAAAoE,SAAAC,SAAAC,4DAAAF,SAAAC,SAAAC,1OAACrD,sEAAAA,kGAAAA;KAAf4C;GAAsD,CAAC/D,6EAAAA,uFAAAA,ZAAgBkC,mEAAAA,YACrF,AAACP,gDAAgBL,IAAI,AAACI,eAAKQ;AAFvC,AAGE4B;cAnBX,AAAA5C,uQAAA,AAAAA,4PAAA,iBAAAoC,7hBAeO,uCAKF,CAACmB,mFAAAA,qFAAAA,8FACD,CAACC,6EAAAA,kFAAAA,PAAcpD,8DAAAA,qCASd,CAACqD,sEAAAA,wEAAAA;AA9BP,AAAA,OAAA1B,8CAAAjC,oBAAA,MAAA,EAAA,AAAAkC,qBAAAI,aAAA,AAAAH,+BAAA,AAAAC,0HAAA,2CAAA,wDAAA,mFAAA,MAAA,8BAAAE,kBAAA,eAAA,qBAAA,EAAA,AAAAJ,qBAAAI,aAAA,KAAA,mFAAA,AAAApC,8BAAAoC;;GAAA,oVAAA,jQAEI,6CAAA,mCAAA,hFAACE,kMAA0BpC,iBAAWQ","names":["predict-prostate.pages.about/page-components","predict-prostate.pages.about/save-offsets","state","cljs.core.println","vec__48438","cljs.core.nth","k","_","offsets","comp","dom-node","js/ReactDOM.findDOMNode","cljs.core.swap_BANG_","cljs.core/assoc","predict-prostate.pages.about/scroll-to-mixin","rum.core/build-defc","js/React.createElement","predict-prostate.pages.about/hr","sablono.interpreter/interpret","predict-prostate.pages.about/sectionc","rum.core/static","rum.core/reactive","ttt","rt","rum.core/react","predict-prostate.state.run-time/route","cljs.core/name","predict-prostate.content-reader/all-subsections","predict-prostate.pages.about/scroller","vec__48497","vec__48500","map__48503","cljs.core/--destructure-map","cljs.core.get","page","scroll-section","cljs.core.keyword","interop.utils/scrollTo","cljs.core/deref","rum.core/build-defcs","vec__48521","map__48524","vec__48525","seq__48526","cljs.core/seq","first__48527","cljs.core/first","cljs.core/next","attrs48514","cljs.core.apply","cljs.core/map?","sablono.interpreter/attributes","sablono.normalize.merge_with_class","attrs48515","attrs48517","predict-prostate.pages.about/about","rum.core.local","route","preamble","predict_prostate.content_reader.section","predict-prostate.layout.header/header","predict-prostate.layout.header/header-banner","sec","p1__48510#","p2__48509#","cljs.core.map_indexed","rum.core/with-key","G__48534","G__48535","G__48536","G__48557","G__48558","G__48559","predict-prostate.components.bs3-modal/editor-modal","predict-prostate.layout.header/footer-banner","predict-prostate.layout.header/footer"],"sourcesContent":["(ns predict-prostate.pages.about\n  (:require [rum.core :as rum]\n            [predict-prostate.components.button :refer [start-button]]\n            [predict-prostate.layout.header :refer [header header-banner footer footer-banner]]\n            [predict-prostate.content-reader :refer [section all-subsections]]\n            [predict-prostate.state.run-time :refer [route]]\n            [predict-prostate.results.util :refer [alison-blue-1 alison-blue-2 alison-blue-3 alison-pink]]\n            [graphics.simple-icons :refer [icon]]\n            [pubsub.feeds :refer [publish]]\n            [interop.utils :refer [scrollTo]]\n            [predict-prostate.components.bs3-modal :refer [editor-modal]]\n            ))\n\n(def page-components {:about [\"about\"]\n                      :overview  [\"overview\" \"whatpredictdoes\" \"whoisitfor\" \"howpredictworks\" \"whobuiltpredict\"]\n                      :technical [\"technical\" \"history\" \"preversions\" \"publications\"]\n                      })\n\n(defn save-offsets [state]\n  (println \"*save-offsets* args\" (:rum/args state))\n  (let [[k _ offsets] (:rum/args state)\n        comp (:rum/react-component state)\n        dom-node (js/ReactDOM.findDOMNode comp)]\n    (swap! offsets assoc k (.-offsetTop dom-node))\n    state))\n\n(def scroll-to-mixin {:did-mount save-offsets\n                      :did-update save-offsets})\n\n(rum/defc hr []\n  [:hr {:style {:color \"red\"}}])\n\n(rum/defc sectionc < scroll-to-mixin rum/static rum/reactive [k ttt offsets]\n  (let [rt (rum/react route)]\n    [:div {:id (name k)}\n     (all-subsections ttt (name k))]))\n\n(def scroller {:did-update (fn [state]\n                             (println \"*scroller* args\" (:rum/args state))\n                             (let [[_ [_ {page :page scroll-section :section}]] (:rum/args state)\n                                   scroll-section (keyword scroll-section)]\n                               (scrollTo (if scroll-section (get @(::offsets state) (name scroll-section)) 0))\n                               )\n                             state)})\n\n\n(rum/defcs about\n  \"Renders a (text) page given the bide parsed route containing a page, and optionally a section.\"\n  < (rum/local {} ::offsets) < rum/static scroller \n           [state ttt route]\n  (let [[_ {page :page scroll-section :section}] route\n        page (keyword page)\n        scroll-section (keyword scroll-section)\n        [_ & preamble] (section ttt \"tool-preamble\")]\n\n    [:.container-fluid\n     (header ttt)\n     (header-banner ttt \"about-preamble\")\n\n     [:#main-content.row {:tab-index -1}\n      [:.col-sm-10.col-sm-offset-1.col-lg-8.col-lg-offset-2 {:style {:min-height \"calc(100vh - 700px)\"}}\n       (when page\n         (let [sec (if scroll-section\n                     (map-indexed #(rum/with-key (sectionc %2 ttt (::offsets state)) %1) (page-components page))\n                     (all-subsections ttt (name page)))]        ; this is needed for FAQs\n           sec))]]\n     (editor-modal)\n     (footer-banner ttt)\n\n     #_(if scroll-section\n         (js/scroll #js {:left 0 :top (get @(::offsets state) (name scroll-section)) :behavior \"smooth\"})\n         (js/scroll #js {:left 0 :top 0 :behavior \"smooth\"}))\n\n     ;(scrollTo (if scroll-section (get @(::offsets state) (name scroll-section)) 0))\n\n     [:.row.screen-only\n      (footer)]]))\n\n\n\n\n"]}