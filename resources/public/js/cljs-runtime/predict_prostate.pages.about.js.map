{"version":3,"sources":["predict_prostate/pages/about.cljs"],"mappings":"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","names":["predict-prostate.pages.about/page-components","predict-prostate.pages.about/save-offsets","state","vec__34357","cljs.core.nth","k","offsets","comp","dom-node","js/ReactDOM.findDOMNode","cljs.core.swap_BANG_","cljs.core/assoc","predict-prostate.pages.about/scroll-to-mixin","rum.core/build-defc","js/React.createElement","predict-prostate.pages.about/hr","sablono.interpreter/interpret","predict-prostate.pages.about/sectionc","rum.core/static","rum.core/reactive","rt","rum.core/react","predict-prostate.state.run-time/route","cljs.core/name","predict-prostate.content-reader/all-subsections","predict-prostate.pages.about/scroller","vec__34379","vec__34382","map__34385","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","_","page","scroll-section","cljs.core.keyword","interop.utils/scrollTo","cljs.core/deref","rum.core/build-defcs","vec__34393","map__34396","vec__34397","seq__34398","cljs.core/seq","first__34399","cljs.core/first","cljs.core/next","attrs34389","cljs.core/map?","sablono.interpreter/attributes","sablono.normalize.merge_with_class","attrs34391","attrs34392","predict-prostate.pages.about/about","rum.core.local","route","preamble","predict_prostate.content_reader.section","predict-prostate.layout.header/header","predict-prostate.layout.header/header-banner","sec","p1__34388#","p2__34387#","cljs.core.map_indexed","rum.core/with-key","G__34402","G__34403","G__34417","G__34418","predict-prostate.layout.header/footer-banner","predict-prostate.layout.header/footer"],"sourcesContent":["(ns predict-prostate.pages.about\n  (:require [rum.core :as rum]\n            [predict-prostate.components.button :refer [start-button]]\n            [predict-prostate.layout.header :refer [header header-banner footer footer-banner]]\n            [predict-prostate.content-reader :refer [section all-subsections]]\n            [predict-prostate.state.run-time :refer [route]]\n            [predict-prostate.results.util :refer [alison-blue-1 alison-blue-2 alison-blue-3 alison-pink]]\n            [graphics.simple-icons :refer [icon]]\n            [pubsub.feeds :refer [publish]]\n            [interop.utils :refer [scrollTo]]\n            ))\n\n\n#_(rum/defc about < rum/static []\n  [:.container\n   [:.row\n    [:.col-sm-12\n     (header)\n     [:.row\n      [:.col-sm-10.col-sm-offset-1 {:style {:min-height \"calc(100vh - 200px)\"}}\n       (all-subsections \"about-page\")\n       ]\n      ]\n     (footer)]]\n   ])\n\n\n(def page-components {:about [\"about\"]\n                      :overview  [\"overview\" \"whatpredictdoes\" \"whoisitfor\" \"howpredictworks\" \"whobuiltpredict\"]\n                      :technical [\"technical\" \"history\" \"preversions\" \"publications\"]\n                      })\n\n(defn save-offsets [state]\n  (let [[k offsets] (:rum/args state)\n        comp (:rum/react-component state)\n        dom-node (js/ReactDOM.findDOMNode comp)]\n    (swap! offsets assoc k (.-offsetTop dom-node))\n    state))\n\n(def scroll-to-mixin {:did-mount save-offsets\n                      :did-update save-offsets})\n\n(rum/defc hr []\n  [:hr {:style {:color \"red\"}}])\n\n(rum/defc sectionc < scroll-to-mixin rum/static rum/reactive [k offsets]\n  (let [rt (rum/react route)]\n    [:div {:id (name k)}\n     (all-subsections (name k))]))\n\n(def scroller {:did-update (fn [state]\n                             (let [[[_ {page :page scroll-section :section}]] (:rum/args state)\n                                   scroll-section (keyword scroll-section)]\n                               ;(.log js/console \"goo \" scroll-section)\n                               (scrollTo (if scroll-section (get @(::offsets state) (name scroll-section)) 0))\n                               )\n                             state)})\n\n\n(rum/defcs about\n  \"Renders a (text) page given the bide parsed route containing a page, and optionally a section.\"\n  < (rum/local {} ::offsets) < rum/static scroller [state route]\n  (let [[_ {page :page scroll-section :section}] route\n        page (keyword page)\n        scroll-section (keyword scroll-section)\n        [_ & preamble] (section \"tool-preamble\")]\n\n    [:.container-fluid\n     (header)\n     (header-banner \"about-preamble\")\n\n     [:#main-content.row {:tab-index -1}\n      [:.col-sm-10.col-sm-offset-1.col-lg-8.col-lg-offset-2 {:style {:min-height \"calc(100vh - 700px)\"}}\n       (when page\n         (let [sec (if scroll-section\n                     (map-indexed #(rum/with-key (sectionc %2 (::offsets state)) %1) (page-components page))\n                     (all-subsections (name page)))]        ; this is needed for FAQs\n           sec))]]\n\n     (footer-banner)\n\n     #_(if scroll-section\n         (js/scroll #js {:left 0 :top (get @(::offsets state) (name scroll-section)) :behavior \"smooth\"})\n         (js/scroll #js {:left 0 :top 0 :behavior \"smooth\"}))\n\n     ;(scrollTo (if scroll-section (get @(::offsets state) (name scroll-section)) 0))\n\n     [:.row.screen-only\n      (footer)]]))\n\n\n\n\n"]}