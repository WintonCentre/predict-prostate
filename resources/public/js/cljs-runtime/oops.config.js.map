{"version":3,"sources":["oops/config.cljs"],"mappings":"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","names":["oops.config/get-initial-runtime-config","oops.config/*runtime-config*","js/Error","oops.config/set-current-runtime-config!","new-config","cljs.core/map?","oops.config/get-current-runtime-config","var_args","args__4742__auto__","len__4736__auto__","i__4737__auto__","argseq__4743__auto__","cljs.core/IndexedSeq","oops.config/update-current-runtime-config!","seq44180","G__44181","cljs.core/first","cljs.core/next","self__4723__auto__","f-or-map","args","oops.config.update_current_runtime_config_BANG_","cljs.core/merge","cljs.core.apply","oops.config/get-config-key","p__44185","vec__44186","cljs.core.nth","seq44183","G__44184","key","config","G__44189","or__4126__auto__","oops.config/has-config-key?","p__44197","vec__44202","seq44195","G__44196","cljs.core.not_EQ_","cljs.core.get","oops.config/get-error-reporting","p__44210","vec__44211","seq44209","self__4724__auto__","cljs.core/seq","oops.config.get_config_key","oops.config/get-warning-reporting","p__44221","vec__44222","seq44218","oops.config/get-suppress-reporting","p__44229","vec__44230","seq44226","oops.config/get-child-factory","p__44236","vec__44237","seq44234","oops.config/set-child-factory!","new-factory-fn","oops.config/throw-errors-from-macro-call-sites?","p__44244","vec__44245","seq44243","oops.config/use-envelope?","p__44250","vec__44251","seq44248"],"sourcesContent":["(ns oops.config\n  \"Code supporting dynamic (run-time) configuration. See runtime-prefixed keys in config map in defaults.clj.\"\n  (:require-macros [oops.config :refer [gen-runtime-config]]))\n\n(defn get-initial-runtime-config []\n  (gen-runtime-config))\n\n; use oops.config/get-current-runtime-config to get currently effective config\n(def ^:dynamic *runtime-config* (get-initial-runtime-config))\n\n; -- public api -------------------------------------------------------------------------------------------------------------\n\n(defn set-current-runtime-config! [new-config]\n  {:pre [(map? new-config)]}\n  (set! *runtime-config* new-config)\n  new-config)\n\n(defn get-current-runtime-config []\n  *runtime-config*)\n\n(defn update-current-runtime-config! [f-or-map & args]\n  (if (map? f-or-map)\n    (update-current-runtime-config! merge f-or-map)\n    (set-current-runtime-config! (apply f-or-map (get-current-runtime-config) args))))\n\n; -- icing ------------------------------------------------------------------------------------------------------------------\n\n(defn get-config-key [key & [config]]\n  (key (or config (get-current-runtime-config))))\n\n(defn ^boolean has-config-key? [key & [config]]\n  (not= ::not-found (get (or config (get-current-runtime-config)) key ::not-found)))\n\n(defn get-error-reporting [& [config]]\n  (get-config-key :error-reporting config))\n\n(defn get-warning-reporting [& [config]]\n  (get-config-key :warning-reporting config))\n\n(defn get-suppress-reporting [& [config]]\n  (get-config-key :suppress-reporting config))\n\n(defn get-child-factory [& [config]]\n  (get-config-key :child-factory config))\n\n(defn set-child-factory! [new-factory-fn]\n  (update-current-runtime-config! {:child-factory new-factory-fn}))\n\n(defn ^boolean throw-errors-from-macro-call-sites? [& [config]]\n  (true? (get-config-key :throw-errors-from-macro-call-sites config)))\n\n(defn ^boolean use-envelope? [& [config]]\n  (true? (get-config-key :use-envelope config)))\n"]}