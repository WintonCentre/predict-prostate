{"version":3,"sources":["predict_prostate/core.cljs"],"mappings":";AASA,AAACA;AAGD,AAAA,AAAAC,AAAAC,AAAAC;AAAA;AAAA,AAAA,AAASC,AACP,AAACC;;AAGH,AAAA,AAAMC;AAAN,AAGE,AAACC,AAAU,AAACC,AAAAA,AAAAA,AAAM,AAAA,AAACC;;AAIrB,AAAKC,AAAU,AAAA,AAACC;AAAD,AACG,AAAM,AAAAC,AAAwB,AAAcE;AAAtCD,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAAA,AAAAD,AAAAC,AAAAD;;AAAN,AACE,AAACG,AAAiBL;;AAClB,AAACJ;;AAFH;;AADH;AAMf,AAAA,AAAMU;AAAN,AAAA","names":["cljs.core/enable-console-print!","js/predict-prostate","js/predict-prostate.core","js/predict-prostate.core.once-only-guard","predict-prostate.core/once-only-guard","predict-prostate.state.mutations/mutator","predict-prostate.core/main","rum.core/mount","predict-prostate.pages.root/root","goog.dom/getElement","predict-prostate.core/loaded-id","js/setInterval","G__34849","fexpr__34848","js/document","js/clearInterval","predict-prostate.core/on-js-reload"],"sourcesContent":["(ns predict-prostate.core\n  (:require [rum.core :as rum]\n            [goog.dom :as gdom]\n            [predict-prostate.state.mutations :refer [mutator]]\n            [predict-prostate.pages.root :refer [root]])\n\n  (:require-macros [devcards.core :as dc :refer [defcard deftest]]\n                   ))\n\n(enable-console-print!)\n\n;;;; Start the mutator!\n(defonce once-only-guard\n  (mutator)\n  )\n\n(defn main []\n  ;; conditionally start the app based on whether the #main-app-area\n  ;; node is on the page\n  (rum/mount (root) (gdom/getElement \"app\"))\n  )\n\n;; This appears to be necessary.\n(def loaded-id (js/setInterval\n                 #(when (#{\"loaded\" \"complete\"} (.-readyState js/document))\n                    (js/clearInterval loaded-id)\n                    (main))\n                 10))\n\n(defn on-js-reload []\n  ;; optionally touch your app-state to force rerendering depending on\n  ;; your application\n  ;; (swap! app-state update-in [:__figwheel_counter] inc)\n)\n"]}