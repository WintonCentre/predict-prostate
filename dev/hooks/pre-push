#!/bin/sh

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local sha1> <remote ref> <remote sha1>
#
# This sample shows how to prevent push of commits where the log message starts
# with "WIP" (work in progress).

while read oldrev newrev refname
do
    branch=$(git rev-parse --symbolic --abbrev-ref $refname)
    BUILD_OUTPUT="resources/public/js/compiled/predict_prostate.js"

	if [ "develop" == "$branch" ]; then
#        ./build.sh
#        git add ${BUILD_OUTPUT}
#        git commit -m "Auto commit build output"
		echo "Develop. Jenkins build to jenkins."
		curl -n https://jenkins.wintoncentre.uk/job/predict-prostate-develop/build?token=wfea4398ienvjf
	elif [ "staging" == "$branch" ]; then
		echo "Staging. Sending build to jenkins."
		curl -n https://jenkins.wintoncentre.uk/job/predict-prostate-staging/build?token=wfea4398ienvjf
	elif [ "master" == "$branch" ]; then
		echo "Master. Please go to Jenkins Web UI to manually trigger build / Publish."
#        curl -a https://jenkins.wintoncentre.uk/job/predict-prostate-master/build?token=wfea4398ienvjfmaster
	fi

done

exit 0