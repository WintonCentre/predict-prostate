["^ ","~:output",["^ ","~:js","goog.provide('tongue.number');\n/**\n * Helper to build number format functions\n * Accepts options map:\n * \n *     { :decimal \".\"  ;; integer/fractional mark\n *       :group   \"\" } ;; thousands grouping mark\n * \n * Returns function `(number => String)`\n */\ntongue.number.formatter = (function tongue$number$formatter(opts){\n\nvar map__31409 = opts;\nvar map__31409__$1 = (((((!((map__31409 == null))))?(((((map__31409.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__31409.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__31409):map__31409);\nvar decimal = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__31409__$1,new cljs.core.Keyword(null,\"decimal\",\"decimal\",-170212044),\".\");\nvar group = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__31409__$1,new cljs.core.Keyword(null,\"group\",\"group\",582596132),\"\");\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\".\",decimal)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"\",group)))){\nreturn cljs.core.str;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"\",group)){\nreturn (function (p1__31408_SHARP_){\nreturn clojure.string.replace(cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__31408_SHARP_),\".\",decimal);\n});\n} else {\nreturn (function (x){\nvar vec__31429 = cljs.core.re_matches(/(-?)(\\d+)\\.?(\\d*)/,cljs.core.str.cljs$core$IFn$_invoke$arity$1(x));\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31429,(0),null);\nvar sign = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31429,(1),null);\nvar integer_part = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31429,(2),null);\nvar fraction_part = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31429,(3),null);\nvar len = cljs.core.count(integer_part);\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(sign),(function (){var idx = cljs.core.rem(len,(3));\nvar res = cljs.core.subs.cljs$core$IFn$_invoke$arity$3(integer_part,(0),cljs.core.rem(len,(3)));\nwhile(true){\nif((idx < len)){\nvar G__31496 = (idx + (3));\nvar G__31497 = [res,cljs.core.str.cljs$core$IFn$_invoke$arity$1((((idx > (0)))?group:null)),cljs.core.subs.cljs$core$IFn$_invoke$arity$3(integer_part,idx,(idx + (3)))].join('');\nidx = G__31496;\nres = G__31497;\ncontinue;\n} else {\nreturn res;\n}\nbreak;\n}\n})(),((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(\"\",fraction_part))?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(decimal),cljs.core.str.cljs$core$IFn$_invoke$arity$1(fraction_part)].join(''):null)].join('');\n});\n\n}\n}\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","tongue/number.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",18],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.core.async","~$cljs.core.async"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$tongue.number","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$clojure.string","^M","~$str","^M","~$tongue.macro","^O","~$macro","^O","~$cljs.core","^Q","~$goog","^R"],"~:seen",["^F",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^Q","^Q","^O","^O","^P","^O"],"~:form",["~#list",["~$ns","^H",["^X",["^T",["^M","~:as","^N"],["^O","^Z","^P"]]]]],"~:flags",["^ ","^T",["^F",[]]],"~:js-deps",["^ "],"~:deps",["^R","^Q","^M","^O"]],"^J","^H","~:resource-id",["~:shadow.build.classpath/resource","tongue/number.cljc"],"~:compiled-at",1636559991997,"~:resource-name","tongue/number.cljc","~:warnings",[],"~:source","(ns tongue.number\n  (:require\n    [clojure.string :as str]\n    [tongue.macro :as macro]\n    #?(:clj [clojure.spec.alpha :as spec])))\n\n\n(macro/with-spec\n  (spec/def ::decimal string?)\n  (spec/def ::group string?)\n  (spec/def ::options (spec/keys :opt-un [::decimal ::group])))\n\n\n(defn formatter\n  \"Helper to build number format functions\n   Accepts options map:\n\n       { :decimal \\\".\\\"  ;; integer/fractional mark\n         :group   \\\"\\\" } ;; thousands grouping mark\n\n   Returns function `(number => String)`\"\n  [opts]\n  (macro/with-spec\n    (spec/assert ::options opts))\n  (let [{:keys [decimal group]\n         :or   { decimal \".\"\n                 group   \"\" }} opts]\n    (cond\n      (and (= \".\" decimal ) (= \"\" group))\n      str\n      \n      (= \"\" group)\n      #(str/replace (str %) \".\" decimal )\n      \n      :else\n      (fn [x]\n        (let [[_ sign integer-part fraction-part] (re-matches #\"(-?)(\\d+)\\.?(\\d*)\" (str x))\n              len (count integer-part)]\n          (str sign\n               (loop [idx (rem len 3)\n                      res (subs integer-part 0 (rem len 3))]\n                 (if (< idx len)\n                   (recur (+ idx 3) (str res (when (pos? idx) group) (subs integer-part idx (+ idx 3))))\n                   res))\n               (when (not= \"\" fraction-part)\n                 (str decimal  fraction-part))))))))\n","~:reader-features",["^F",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings",";AAOA,AAMA;;;;;;;;;AAAA,AAAMA,AAQHC;AARH,AASE;AAEA,AAAAC,AAE6BD;AAF7BC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AAAA,AAAcK;AAAd,AAAAD,AAAAJ,AAAA,AAAA,AAAsBM;AAAtB,AAGE,AACE,AAAK,AAAA,AAACE,AAAMH,AAAU,AAAA,AAACG,AAAKF;AAC5BG;;AAFF,AAIE,AAAA,AAACD,AAAKF;AAJR,AAAAC;AAAA,AAKG,AAAA,AAACG,AAAY,AAAAH,AAAYF;;;AAL5B,AAQE,AAAKM;AAAL,AACE,AAAAC,AAA0C,AAAA,AAACM,AAAgC,AAAKP;AAAhF,AAAAE,AAAAD,AAAA,AAAA,AAAOE;AAAP,AAAAD,AAAAD,AAAA,AAAA,AAASG;AAAT,AAAAF,AAAAD,AAAA,AAAA,AAAcI;AAAd,AAAAH,AAAAD,AAAA,AAAA,AAA2BK;AACrBE,AAAI,AAACC,AAAMJ;AADjB,AAEE,AAAKD,AACA,AAAOM,AAAI,AAAA,AAACC,AAAIH;AACTI,AAAI,AAAA,AAACC,AAAKR,AAAe,AAAA,AAACM,AAAIH;;AADrC,AAEE,AAAI,AAAGE,AAAIF;AACT,AAAO,AAAA,AAAGE;AAAO,AAAKE,AAAI,AAAA,AAAA,AAAM,AAAA,AAAMF,AAAKf,AAAO,AAACkB,AAAKR,AAAaK,AAAI,AAAA,AAAGA;;;;;AAC5EE;;;;AACJ,AAAA,AAAA,AAAM,AAAA,AAACE,AAAQR,AACb,AAAKZ,AAASY","names",["tongue.number/formatter","opts","map__31409","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","decimal","group","p1__31408#","cljs.core._EQ_","cljs.core/str","clojure.string/replace","x","vec__31429","cljs.core.nth","_","sign","integer-part","fraction-part","cljs.core/re-matches","len","cljs.core/count","idx","cljs.core/rem","res","cljs.core.subs","cljs.core.not_EQ_"]],"~:used-vars",["^F",["~$cljs.core/str","~$cljs.core/=","~$tongue.number/formatter","~$cljs.core/not=","~$clojure.string/replace","~$cljs.core/subs"]]],"~:cache-keys",["~#cmap",[["^13","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^F",[]],"~:deps-syms",["^R","~$goog.dom.HtmlElement"]]],["^13","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1G",["^ ","^1H",null,"^1I",["^F",[]],"^1J",["^R","~$goog.array","~$goog.asserts"]]],["^13","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1G",["^ ","^1H",null,"^1I",["^F",[]],"^1J",["^R"]]],["^13","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1G",["^ ","^1H",null,"^1I",["^F",[]],"^1J",["^R","^1L","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^13","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1G",["^ ","^1H",null,"^1I",["^F",[]],"^1J",["^R","^1M","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^1P"]]],["^13","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1G",["^ ","^1H",null,"^1I",["^F",[]],"^1J",["^R","^1M"]]],["^13","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1G",["^ ","^1H",null,"^1I",["^F",[]],"^1J",["^R"]]],["^13","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1G",["^ ","^1H",null,"^1I",["^F",[]],"^1J",["^R"]]],["^13","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1G",["^ ","^1H",null,"^1I",["^F",[]],"^1J",["^R"]]],["^13","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1G",["^ ","^1H",null,"^1I",["^F",[]],"^1J",["^R"]]],["^13","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1G",["^ ","^1H",null,"^1I",["^F",[]],"^1J",["^R","^1M"]]],"~:SHADOW-TIMESTAMP",[1635266348000,1635266348000,1634894918000],["^13","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1G",["^ ","^1H",null,"^1I",["^F",[]],"^1J",["^R","^1M","~$goog.reflect"]]],["^13","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1G",["^ ","^1H",null,"^1I",["^F",[]],"^1J",["^R","^1M","~$goog.html.trustedtypes","^1S","^1T","^1U","^1V"]]],["^13","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1G",["^ ","^1H",null,"^1I",["^F",[]],"^1J",["^R"]]],["^13","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1G",["^ ","^1H",null,"^1I",["^F",[]],"^1J",["^R"]]],["^13","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1G",["^ ","^1H",null,"^1I",["^F",[]],"^1J",["^R","^1L","^1M","~$goog.html.SafeUrl","^1U","^1V","^1P"]]],["^13","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1G",["^ ","^1H",null,"^1I",["^F",[]],"^1J",["^R","^1M","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^1Z","^1R","~$goog.html.uncheckedconversions","^1U","^1P"]]],["^13","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1G",["^ ","^1H",null,"^1I",["^F",[]],"^1J",["^R","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^13","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1G",["^ ","^1H",null,"^1I",["^F",[]],"^1J",["^R","^1L","^1M","~$goog.dom.TagName","~$goog.dom.tags","^22","^23","~$goog.html.SafeStyleSheet","^1Z","^1R","^1Y","^1S","^1T","~$goog.labs.userAgent.browser","^1O","^1U","^1V","^1P"]]],["^13","tongue/macro.cljc"],["46bc54fb216e4aa9239282cf693179c888d36a5a","^1G",["^ ","^1H",null,"^1I",["^F",[]],"^1J",["^R","^Q"]]],["^13","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1G",["^ ","^1H",null,"^1I",["^F",[]],"^1J",["^R","^1O"]]],["^13","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1G",["^ ","^1H",null,"^1I",["^F",[]],"^1J",["^R","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^13","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1G",["^ ","^1H",null,"^1I",["^F",[]],"^1J",["^R","^1L","^1M","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^13","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1G",["^ ","^1H",null,"^1I",["^F",[]],"^1J",["^R"]]],["^13","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1G",["^ ","^1H",null,"^1I",["^F",[]],"^1J",["^R"]]],["^13","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1G",["^ ","^1H",null,"^1I",["^F",[]],"^1J",[]]],["^13","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1G",["^ ","^1H",null,"^1I",["^F",[]],"^1J",["^R","^1L","^1O"]]],["^13","clojure/string.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^1G",["^ ","^1H",null,"^1I",["^F",[]],"^1J",["^R","^Q","^2=","~$goog.string.StringBuffer"]]],["^13","tongue/number.cljc"],["46bc54fb216e4aa9239282cf693179c888d36a5a","^1G",["^ ","^1H",null,"^1I",["^F",[]],"^1J",["^R","^Q","^M","^O"]]],["^13","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1G",["^ ","^1H",null,"^1I",["^F",[]],"^1J",["^R","~$goog.dom.safe","^24","^1U","^1P"]]],["^13","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1G",["^ ","^1H",null,"^1I",["^F",[]],"^1J",["^R"]]],["^13","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1G",["^ ","^1H",null,"^1I",["^F",[]],"^1J",["^R","^1P"]]],["^13","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1G",["^ ","^1H",null,"^1I",["^F",[]],"^1J",["^R"]]],["^13","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1G",["^ ","^1H",null,"^1I",["^F",[]],"^1J",["^R","^1L","^1M","^20","~$goog.math"]]],["^13","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1G",["^ ","^1H",null,"^1I",["^F",[]],"^1J",["^R","^1M","^21","^22","^23","^29","^1Z","^1R","^1U","^1P"]]],["^13","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1G",["^ ","^1H",null,"^1I",["^F",[]],"^1J",["^R"]]],["^13","cljs/core.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^1G",["^ ","^1H",null,"^1I",["^F",[]],"^1J",["^R","~$goog.math.Long","~$goog.math.Integer","^2=","^1O","^1L","~$goog.Uri","^2C"]]],["^13","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1G",["^ ","^1H",null,"^1I",["^F",[]],"^1J",["^R","^1M","^1Y","^1U","^1V"]]],["^13","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1G",["^ ","^1H",null,"^1I",["^F",[]],"^1J",["^R","^1L","^1M","^23","^1O","^1U","^1V","^1P"]]],["^13","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1G",["^ ","^1H",null,"^1I",["^F",[]],"^1J",["^R","^1X"]]],["^13","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1G",["^ ","^1H",null,"^1I",["^F",[]],"^1J",["^R","^1L","^1M","^2="]]],["^13","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1G",["^ ","^1H",null,"^1I",["^F",[]],"^1J",["^R","^1M","^1V"]]]]],"~:clj-info",["^ ","jar:file:/Users/mehdi/.m2/repository/tongue/tongue/0.2.7/tongue-0.2.7.jar!/tongue/macro.cljc",1635148719000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1634893165000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/reader_types.clj",1634894917000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/externs.clj",1634894918000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/analyzer.cljc",1634894918000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/core.cljc",1634894918000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/env.cljc",1634894918000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/compiler.cljc",1634894918000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/js_deps.cljc",1634894918000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1634893165000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1634893165000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/tagged_literals.cljc",1634894918000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64.clj",1634894918000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/data.json/1.0.0/data.json-1.0.0.jar!/clojure/data/json.clj",1634894917000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1634893165000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1634893165000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1634893165000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/inspect.clj",1634894917000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader.clj",1634894917000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map.clj",1634894918000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1634893165000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/default_data_readers.clj",1634894917000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/util.cljc",1634894918000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/errors.clj",1634894917000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64_vlq.clj",1634894918000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","tongue/number.cljc","^7",1,"^8",5,"^9",1,"^:",18],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"^D",null,"^E",["^F",[]],"^G","^H","^K",null,"^L",["^ ","^M","^M","^N","^M","^O","^O","^P","^O","^Q","^Q","^R","^R"],"^S",["^F",["^T"]],"^U",null,"~:defs",["^ ","~$formatter",["^ ","~:protocol-inline",null,"^5",["^ ","^6","tongue/number.cljc","^7",14,"^8",7,"^9",14,"^:",16,"~:arglists",["^X",["~$quote",["^X",[["~$opts"]]]]],"~:doc","Helper to build number format functions\n   Accepts options map:\n\n       { :decimal \".\"  ;; integer/fractional mark\n         :group   \"\" } ;; thousands grouping mark\n\n   Returns function `(number => String)`"],"^G","^1A","^6","tongue/number.cljc","^:",16,"~:method-params",["^X",[["^3="]]],"~:protocol-impl",null,"~:arglists-meta",["^X",[null,null]],"^8",1,"~:variadic?",false,"^7",14,"~:ret-tag",["^F",[null,"~$function"]],"^9",14,"~:max-fixed-arity",1,"~:fn-var",true,"^3;",["^X",["^3<",["^X",[["^3="]]]]],"^3>","Helper to build number format functions\n   Accepts options map:\n\n       { :decimal \".\"  ;; integer/fractional mark\n         :group   \"\" } ;; thousands grouping mark\n\n   Returns function `(number => String)`"]],"^V",["^ ","^Q","^Q","^O","^O","^P","^O"],"~:cljs.analyzer/constants",["^ ","^S",["^F",["~:group","~:else","~:decimal"]],"~:order",["^3J","^3H","^3I"]],"^[",["^ ","^T",["^F",[]]],"^10",["^ "],"^11",["^R","^Q","^M","^O"]],"^J","^H","~:ns-specs",["^ "],"~:ns-spec-vars",["^F",[]],"~:compiler-options",["^1F",[["^3N","~:static-fns"],true,["^3N","~:shadow-tweaks"],null,["^3N","~:source-map-inline"],null,["^3N","~:elide-asserts"],false,["^3N","~:optimize-constants"],null,["^3N","^16"],null,["^3N","~:external-config"],null,["^3N","~:tooling-config"],null,["^3N","~:emit-constants"],null,["^3N","~:load-tests"],null,["^3N","~:form-size-threshold"],null,["^3N","~:data-readers"],null,["^3N","~:infer-externs"],"~:auto",["^3N","^18"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^3N","~:fn-invoke-direct"],null,["^3N","~:source-map"],"/dev/null"]]]