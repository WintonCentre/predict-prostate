["^ ","~:output",["^ ","~:js","goog.provide('predict_prostate.results.curves');\ncljs.core.enable_console_print_BANG_();\npredict_prostate.results.curves.styles = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"outer\",\"outer\",-375185956),\"outer--G__47476\",new cljs.core.Keyword(null,\"inner\",\"inner\",-1383171215),\"inner--G__47476\",new cljs.core.Keyword(null,\"annotation\",\"annotation\",-344661666),\"annotation--G__47476\",new cljs.core.Keyword(null,\"arrow\",\"arrow\",1071351425),\"arrow--G__47476\"], null);\n\ncljs_css_modules.runtime.inject_style_BANG_(cljs.core.apply.cljs$core$IFn$_invoke$arity$3(garden.core.css,cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\".outer--G__47476\",new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"fill\",\"fill\",883462889),\"none\",new cljs.core.Keyword(null,\"stroke\",\"stroke\",1741823555),\"none\"], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\".inner--G__47476\",new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"fill\",\"fill\",883462889),\"#fff\",new cljs.core.Keyword(null,\"stroke\",\"stroke\",1741823555),\"#000\",new cljs.core.Keyword(null,\"stroke-opacity\",\"stroke-opacity\",-1191543159),(0),new cljs.core.Keyword(null,\"stroke-width\",\"stroke-width\",716836435),0.5,new cljs.core.Keyword(null,\"stroke-dasharray\",\"stroke-dasharray\",-942933855),\"3, 4\"], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\".annotation--G__47476\",new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"font-size\",\"font-size\",-1847940346),\"14pt\"], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\".arrow--G__47476\",new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"stroke\",\"stroke\",1741823555),\"#000\",new cljs.core.Keyword(null,\"stroke-width\",\"stroke-width\",716836435),\"1.5px\"], null)], null)], null)),\"predict-prostate.results.curves\",\"styles\");\npredict_prostate.results.curves.as_point_series = (function predict_prostate$results$curves$as_point_series(plot_layers){\n\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,(function (){var iter__4529__auto__ = (function predict_prostate$results$curves$as_point_series_$_iter__47477(s__47478){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__47478__$1 = s__47478;\nwhile(true){\nvar temp__5735__auto__ = cljs.core.seq(s__47478__$1);\nif(temp__5735__auto__){\nvar s__47478__$2 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__47478__$2)){\nvar c__4527__auto__ = cljs.core.chunk_first(s__47478__$2);\nvar size__4528__auto__ = cljs.core.count(c__4527__auto__);\nvar b__47480 = cljs.core.chunk_buffer(size__4528__auto__);\nif((function (){var i__47479 = (0);\nwhile(true){\nif((i__47479 < size__4528__auto__)){\nvar time_series = cljs.core._nth(c__4527__auto__,i__47479);\ncljs.core.chunk_append(b__47480,cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(((function (i__47479,time_series,c__4527__auto__,size__4528__auto__,b__47480,s__47478__$2,temp__5735__auto__){\nreturn (function (i,v){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [i,v], null);\n});})(i__47479,time_series,c__4527__auto__,size__4528__auto__,b__47480,s__47478__$2,temp__5735__auto__))\n,time_series)));\n\nvar G__47643 = (i__47479 + (1));\ni__47479 = G__47643;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__47480),predict_prostate$results$curves$as_point_series_$_iter__47477(cljs.core.chunk_rest(s__47478__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__47480),null);\n}\n} else {\nvar time_series = cljs.core.first(s__47478__$2);\nreturn cljs.core.cons(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(((function (time_series,s__47478__$2,temp__5735__auto__){\nreturn (function (i,v){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [i,v], null);\n});})(time_series,s__47478__$2,temp__5735__auto__))\n,time_series)),predict_prostate$results$curves$as_point_series_$_iter__47477(cljs.core.rest(s__47478__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__4529__auto__(plot_layers);\n})());\n});\npredict_prostate.results.curves.line_plot = rum.core.build_defc((function (p__47483,point_series,line_style){\nvar map__47484 = p__47483;\nvar map__47484__$1 = (((((!((map__47484 == null))))?(((((map__47484.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__47484.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__47484):map__47484);\nvar scale = map__47484__$1;\nvar X = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47484__$1,new cljs.core.Keyword(null,\"X\",\"X\",1705996313));\nvar Y = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47484__$1,new cljs.core.Keyword(null,\"Y\",\"Y\",-560717356));\n\nvar point = (function (x,y){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1((X.cljs$core$IFn$_invoke$arity$1 ? X.cljs$core$IFn$_invoke$arity$1(x) : X.call(null,x))),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1((Y.cljs$core$IFn$_invoke$arity$1 ? Y.cljs$core$IFn$_invoke$arity$1(y) : Y.call(null,y)))].join('');\n});\nreturn React.createElement(\"g\",null,(function (){var attrs47486 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"points\",\"points\",-1486596883),cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__47482_SHARP_){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(point,p1__47482_SHARP_);\n}),point_series)], null),line_style], 0));\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(React.createElement,\"polyline\",((cljs.core.map_QMARK_(attrs47486))?sablono.interpreter.attributes(attrs47486):null),((cljs.core.map_QMARK_(attrs47486))?null:new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret(attrs47486)], null)));\n})());\n}),null,\"line-plot\");\n/**\n * scale contains the x-axis and y-axis scale functions.\n *   Point series should look something like this:\n *   [[0 100]  [1 98.89556593176486]  ... [9 64.83779488900586]  [10 60.8297996952587]]\n *   Baseline is the \n */\npredict_prostate.results.curves.area_plot = rum.core.build_defc((function() {\nvar G__47644 = null;\nvar G__47644__3 = (function (scale,point_series,area_style){\nreturn sablono.interpreter.interpret((predict_prostate.results.curves.area_plot.cljs$core$IFn$_invoke$arity$4 ? predict_prostate.results.curves.area_plot.cljs$core$IFn$_invoke$arity$4(scale,point_series,area_style,(0)) : predict_prostate.results.curves.area_plot.call(null,scale,point_series,area_style,(0))));\n});\nvar G__47644__4 = (function (p__47488,point_series,area_style,base){\nvar map__47489 = p__47488;\nvar map__47489__$1 = (((((!((map__47489 == null))))?(((((map__47489.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__47489.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__47489):map__47489);\nvar X = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47489__$1,new cljs.core.Keyword(null,\"X\",\"X\",1705996313));\nvar Y = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47489__$1,new cljs.core.Keyword(null,\"Y\",\"Y\",-560717356));\nreturn sablono.interpreter.interpret(((cljs.core.seq(point_series))?(function (){var point = (function (x,y){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1((X.cljs$core$IFn$_invoke$arity$1 ? X.cljs$core$IFn$_invoke$arity$1(x) : X.call(null,x))),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1((Y.cljs$core$IFn$_invoke$arity$1 ? Y.cljs$core$IFn$_invoke$arity$1(y) : Y.call(null,y)))].join('');\n});\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"g\",\"g\",1738089905),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"polygon\",\"polygon\",837053759),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"points\",\"points\",-1486596883),clojure.string.join.cljs$core$IFn$_invoke$arity$2(\", \",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clojure.string.join.cljs$core$IFn$_invoke$arity$2(\", \",cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__47487_SHARP_){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(point,p1__47487_SHARP_);\n}),point_series)),clojure.string.join.cljs$core$IFn$_invoke$arity$2(\", \",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [point(cljs.core.first(cljs.core.last(point_series)),base),point(cljs.core.first(cljs.core.first(point_series)),base)], null))], null))], null),area_style], 0))], null)], null);\n})():null));\n});\nG__47644 = function(p__47488,point_series,area_style,base){\nswitch(arguments.length){\ncase 3:\nreturn G__47644__3.call(this,p__47488,point_series,area_style);\ncase 4:\nreturn G__47644__4.call(this,p__47488,point_series,area_style,base);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nG__47644.cljs$core$IFn$_invoke$arity$3 = G__47644__3;\nG__47644.cljs$core$IFn$_invoke$arity$4 = G__47644__4;\nreturn G__47644;\n})()\n,null,\"area-plot\");\npredict_prostate.results.curves.plot = rum.core.build_defc((function (p__47491,plot_style,data,radical_QMARK_){\nvar map__47492 = p__47491;\nvar map__47492__$1 = (((((!((map__47492 == null))))?(((((map__47492.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__47492.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__47492):map__47492);\nvar scale = map__47492__$1;\nvar X = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47492__$1,new cljs.core.Keyword(null,\"X\",\"X\",1705996313));\nvar Y = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47492__$1,new cljs.core.Keyword(null,\"Y\",\"Y\",-560717356));\n\nreturn sablono.interpreter.interpret((function (){var pred__47494 = cljs.core._EQ_;\nvar expr__47495 = plot_style;\nif(cljs.core.truth_((pred__47494.cljs$core$IFn$_invoke$arity$2 ? pred__47494.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"area1\",\"area1\",-316994623),expr__47495) : pred__47494.call(null,new cljs.core.Keyword(null,\"area1\",\"area1\",-316994623),expr__47495)))){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"g\",\"g\",1738089905),(function (){var G__47497 = scale;\nvar G__47498 = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(data,(1));\nvar G__47499 = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"fill\",\"fill\",883462889),predict_prostate.results.util.treatment_fills((1))], null);\nreturn (predict_prostate.results.curves.area_plot.cljs$core$IFn$_invoke$arity$3 ? predict_prostate.results.curves.area_plot.cljs$core$IFn$_invoke$arity$3(G__47497,G__47498,G__47499) : predict_prostate.results.curves.area_plot.call(null,G__47497,G__47498,G__47499));\n})(),(function (){var G__47500 = scale;\nvar G__47501 = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(data,(0));\nvar G__47502 = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"fill\",\"fill\",883462889),predict_prostate.results.util.treatment_fills((0))], null);\nreturn (predict_prostate.results.curves.area_plot.cljs$core$IFn$_invoke$arity$3 ? predict_prostate.results.curves.area_plot.cljs$core$IFn$_invoke$arity$3(G__47500,G__47501,G__47502) : predict_prostate.results.curves.area_plot.call(null,G__47500,G__47501,G__47502));\n})(),(function (){var G__47508 = scale;\nvar G__47509 = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(data,(2));\nvar G__47510 = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"fill\",\"fill\",883462889),\"none\",new cljs.core.Keyword(null,\"stroke\",\"stroke\",1741823555),predict_prostate.results.util.dashed_stroke,new cljs.core.Keyword(null,\"strokeDasharray\",\"strokeDasharray\",1664678421),\"8,8\",new cljs.core.Keyword(null,\"strokeWidth\",\"strokeWidth\",-2130848332),(5),new cljs.core.Keyword(null,\"strokeLinecap\",\"strokeLinecap\",-1974748357),\"round\"], null);\nreturn (predict_prostate.results.curves.line_plot.cljs$core$IFn$_invoke$arity$3 ? predict_prostate.results.curves.line_plot.cljs$core$IFn$_invoke$arity$3(G__47508,G__47509,G__47510) : predict_prostate.results.curves.line_plot.call(null,G__47508,G__47509,G__47510));\n})()], null);\n} else {\nif(cljs.core.truth_((pred__47494.cljs$core$IFn$_invoke$arity$2 ? pred__47494.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"line2\",\"line2\",-1975668782),expr__47495) : pred__47494.call(null,new cljs.core.Keyword(null,\"line2\",\"line2\",-1975668782),expr__47495)))){\nreturn new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"g\",\"g\",1738089905),(cljs.core.truth_(radical_QMARK_)?(function (){var G__47511 = scale;\nvar G__47512 = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(data,(2));\nvar G__47513 = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"fill\",\"fill\",883462889),new cljs.core.Keyword(null,\"radical-above\",\"radical-above\",-674575611).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"line2\",\"line2\",-1975668782).cljs$core$IFn$_invoke$arity$1(predict_prostate.results.util.fills_by_style_STAR_))], null);\nreturn (predict_prostate.results.curves.area_plot.cljs$core$IFn$_invoke$arity$3 ? predict_prostate.results.curves.area_plot.cljs$core$IFn$_invoke$arity$3(G__47511,G__47512,G__47513) : predict_prostate.results.curves.area_plot.call(null,G__47511,G__47512,G__47513));\n})():null),(cljs.core.truth_(radical_QMARK_)?(function (){var G__47515 = scale;\nvar G__47516 = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(data,(1));\nvar G__47517 = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"fill\",\"fill\",883462889),new cljs.core.Keyword(null,\"radical\",\"radical\",1159030213).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"line2\",\"line2\",-1975668782).cljs$core$IFn$_invoke$arity$1(predict_prostate.results.util.fills_by_style_STAR_))], null);\nreturn (predict_prostate.results.curves.area_plot.cljs$core$IFn$_invoke$arity$3 ? predict_prostate.results.curves.area_plot.cljs$core$IFn$_invoke$arity$3(G__47515,G__47516,G__47517) : predict_prostate.results.curves.area_plot.call(null,G__47515,G__47516,G__47517));\n})():null),(function (){var G__47518 = scale;\nvar G__47519 = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(data,(2));\nvar G__47520 = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"fill\",\"fill\",883462889),\"none\",new cljs.core.Keyword(null,\"stroke\",\"stroke\",1741823555),predict_prostate.results.util.dashed_stroke,new cljs.core.Keyword(null,\"strokeDasharray\",\"strokeDasharray\",1664678421),\"8,8\",new cljs.core.Keyword(null,\"strokeWidth\",\"strokeWidth\",-2130848332),(5),new cljs.core.Keyword(null,\"strokeLinecap\",\"strokeLinecap\",-1974748357),\"round\"], null);\nreturn (predict_prostate.results.curves.line_plot.cljs$core$IFn$_invoke$arity$3 ? predict_prostate.results.curves.line_plot.cljs$core$IFn$_invoke$arity$3(G__47518,G__47519,G__47520) : predict_prostate.results.curves.line_plot.call(null,G__47518,G__47519,G__47520));\n})(),(function (){var G__47522 = scale;\nvar G__47523 = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(data,(0));\nvar G__47524 = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"fill\",\"fill\",883462889),predict_prostate.results.util.treatment_fills((0))], null);\nreturn (predict_prostate.results.curves.area_plot.cljs$core$IFn$_invoke$arity$3 ? predict_prostate.results.curves.area_plot.cljs$core$IFn$_invoke$arity$3(G__47522,G__47523,G__47524) : predict_prostate.results.curves.area_plot.call(null,G__47522,G__47523,G__47524));\n})(),(function (){var G__47526 = scale;\nvar G__47527 = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(data,(1));\nvar G__47528 = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"fill\",\"fill\",883462889),\"none\",new cljs.core.Keyword(null,\"stroke\",\"stroke\",1741823555),predict_prostate.results.util.treatment_fills((0)),new cljs.core.Keyword(null,\"strokeWidth\",\"strokeWidth\",-2130848332),(2),new cljs.core.Keyword(null,\"strokeLinecap\",\"strokeLinecap\",-1974748357),\"round\"], null);\nreturn (predict_prostate.results.curves.line_plot.cljs$core$IFn$_invoke$arity$3 ? predict_prostate.results.curves.line_plot.cljs$core$IFn$_invoke$arity$3(G__47526,G__47527,G__47528) : predict_prostate.results.curves.line_plot.call(null,G__47526,G__47527,G__47528));\n})()], null);\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"text\",\"text\",-1790561697),[\"bad plot-style\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(plot_style)].join('')], null);\n}\n}\n})());\n}),null,\"plot\");\npredict_prostate.results.curves.curves_container = rum.core.build_defc((function (p__47554,plot_style,data,radical_QMARK_){\nvar map__47555 = p__47554;\nvar map__47555__$1 = (((((!((map__47555 == null))))?(((((map__47555.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__47555.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__47555):map__47555);\nvar outer = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47555__$1,new cljs.core.Keyword(null,\"outer\",\"outer\",-375185956));\nvar margin = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47555__$1,new cljs.core.Keyword(null,\"margin\",\"margin\",-995903681));\nvar inner = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47555__$1,new cljs.core.Keyword(null,\"inner\",\"inner\",-1383171215));\nvar padding = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47555__$1,new cljs.core.Keyword(null,\"padding\",\"padding\",1660304693));\nvar width = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47555__$1,new cljs.core.Keyword(null,\"width\",\"width\",-384071477));\nvar height = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47555__$1,new cljs.core.Keyword(null,\"height\",\"height\",1025178622));\nvar x = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47555__$1,new cljs.core.Keyword(null,\"x\",\"x\",2099068185));\nvar y = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47555__$1,new cljs.core.Keyword(null,\"y\",\"y\",-1757859776));\nvar inner__$1 = (((inner == null))?new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"width\",\"width\",-384071477),((new cljs.core.Keyword(null,\"width\",\"width\",-384071477).cljs$core$IFn$_invoke$arity$1(outer) - new cljs.core.Keyword(null,\"left\",\"left\",-399115937).cljs$core$IFn$_invoke$arity$1(margin)) - new cljs.core.Keyword(null,\"right\",\"right\",-452581833).cljs$core$IFn$_invoke$arity$1(margin)),new cljs.core.Keyword(null,\"height\",\"height\",1025178622),((new cljs.core.Keyword(null,\"height\",\"height\",1025178622).cljs$core$IFn$_invoke$arity$1(outer) - new cljs.core.Keyword(null,\"top\",\"top\",-1856271961).cljs$core$IFn$_invoke$arity$1(margin)) - new cljs.core.Keyword(null,\"bottom\",\"bottom\",-1550509018).cljs$core$IFn$_invoke$arity$1(margin))], null):inner);\nvar width__$1 = (((width == null))?((new cljs.core.Keyword(null,\"width\",\"width\",-384071477).cljs$core$IFn$_invoke$arity$1(inner__$1) - new cljs.core.Keyword(null,\"left\",\"left\",-399115937).cljs$core$IFn$_invoke$arity$1(padding)) - new cljs.core.Keyword(null,\"right\",\"right\",-452581833).cljs$core$IFn$_invoke$arity$1(padding)):width);\nvar height__$1 = (((height == null))?((new cljs.core.Keyword(null,\"height\",\"height\",1025178622).cljs$core$IFn$_invoke$arity$1(inner__$1) - new cljs.core.Keyword(null,\"top\",\"top\",-1856271961).cljs$core$IFn$_invoke$arity$1(padding)) - new cljs.core.Keyword(null,\"bottom\",\"bottom\",-1550509018).cljs$core$IFn$_invoke$arity$1(padding)):height);\nvar x__$1 = (((x == null))?svg.scales.__GT_Identity(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),width__$1], null),predict_prostate.state.run_time.N):x);\nvar x_ticks = svg.scales.ticks(x__$1);\nvar y__$1 = (((y == null))?svg.scales.__GT_Identity(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),height__$1], null),(10)):y);\nvar y_ticks = svg.scales.ticks(y__$1);\nvar X = svg.scales.i__GT_o(x__$1);\nvar Y = svg.scales.i__GT_o(y__$1);\nreturn React.createElement(\"div\",({\"style\": ({\"margin\": \"0 auto\", \"width\": \"100%\", \"height\": (0), \"paddingTop\": \"100%\", \"position\": \"relative\"})}),React.createElement(\"svg\",({\"style\": ({\"position\": \"absolute\", \"top\": (0), \"left\": (0)}), \"viewBox\": [\" 0 0 \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"width\",\"width\",-384071477).cljs$core$IFn$_invoke$arity$1(outer)),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"height\",\"height\",1025178622).cljs$core$IFn$_invoke$arity$1(outer))].join('')}),React.createElement(\"g\",({\"key\": (0), \"transform\": [\"translate(\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"left\",\"left\",-399115937).cljs$core$IFn$_invoke$arity$1(margin)),\", \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"top\",\"top\",-1856271961).cljs$core$IFn$_invoke$arity$1(margin)),\")\"].join('')}),React.createElement(\"rect\",({\"key\": (1), \"className\": new cljs.core.Keyword(null,\"outer\",\"outer\",-375185956).cljs$core$IFn$_invoke$arity$1(predict_prostate.results.curves.styles), \"width\": new cljs.core.Keyword(null,\"width\",\"width\",-384071477).cljs$core$IFn$_invoke$arity$1(inner__$1), \"height\": new cljs.core.Keyword(null,\"height\",\"height\",1025178622).cljs$core$IFn$_invoke$arity$1(inner__$1)})),React.createElement(\"g\",({\"key\": (2), \"transform\": [\"translate(\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"left\",\"left\",-399115937).cljs$core$IFn$_invoke$arity$1(padding)),\",\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"top\",\"top\",-1856271961).cljs$core$IFn$_invoke$arity$1(padding)),\")\"].join('')}),React.createElement(\"rect\",({\"key\": (1), \"className\": new cljs.core.Keyword(null,\"inner\",\"inner\",-1383171215).cljs$core$IFn$_invoke$arity$1(predict_prostate.results.curves.styles), \"width\": width__$1, \"height\": height__$1})),React.createElement(\"g\",({\"key\": \"bottom\", \"transform\": [\"translate(0,\",cljs.core.str.cljs$core$IFn$_invoke$arity$1((cljs.core.first(svg.scales.out(y__$1)) + (10))),\")\"].join('')}),sablono.interpreter.interpret((function (){var G__47557 = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"scale\",\"scale\",-230427353),x__$1,new cljs.core.Keyword(null,\"ticks\",\"ticks\",-406190313),x_ticks], null);\nreturn (svg.axis.axisBottom.cljs$core$IFn$_invoke$arity$1 ? svg.axis.axisBottom.cljs$core$IFn$_invoke$arity$1(G__47557) : svg.axis.axisBottom.call(null,G__47557));\n})())),React.createElement(\"g\",({\"key\": \"left\", \"transform\": [\"translate(\",cljs.core.str.cljs$core$IFn$_invoke$arity$1((cljs.core.first(svg.scales.out(x__$1)) - (10))),\",0)\"].join('')}),sablono.interpreter.interpret((function (){var G__47565 = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"scale\",\"scale\",-230427353),y__$1,new cljs.core.Keyword(null,\"ticks\",\"ticks\",-406190313),y_ticks,new cljs.core.Keyword(null,\"format-specifier\",\"format-specifier\",1758610918),[cljs.core.str.cljs$core$IFn$_invoke$arity$1(svg.scales.tick_format_specifier(y__$1)),\"%\"].join('')], null);\nreturn (svg.axis.axisLeft.cljs$core$IFn$_invoke$arity$1 ? svg.axis.axisLeft.cljs$core$IFn$_invoke$arity$1(G__47565) : svg.axis.axisLeft.call(null,G__47565));\n})())),React.createElement(\"g\",({\"key\": \"y-title\", \"transform\": [\"translate(-62 0) rotate(-90 \",cljs.core.str.cljs$core$IFn$_invoke$arity$1((X.cljs$core$IFn$_invoke$arity$1 ? X.cljs$core$IFn$_invoke$arity$1((0)) : X.call(null,(0)))),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1((Y.cljs$core$IFn$_invoke$arity$1 ? Y.cljs$core$IFn$_invoke$arity$1((0)) : Y.call(null,(0)))),\")\"].join('')}),React.createElement(\"text\",({\"key\": \"note\", \"className\": new cljs.core.Keyword(null,\"annotation\",\"annotation\",-344661666).cljs$core$IFn$_invoke$arity$1(predict_prostate.results.curves.styles), \"x\": (X.cljs$core$IFn$_invoke$arity$1 ? X.cljs$core$IFn$_invoke$arity$1((1)) : X.call(null,(1))), \"y\": (Y.cljs$core$IFn$_invoke$arity$1 ? Y.cljs$core$IFn$_invoke$arity$1((0)) : Y.call(null,(0)))}),\"Percentage of men surviving\")),React.createElement(\"g\",({\"key\": \"x-title\", \"transform\": \"translate(0 50)\"}),React.createElement(\"text\",({\"key\": \"note\", \"className\": new cljs.core.Keyword(null,\"annotation\",\"annotation\",-344661666).cljs$core$IFn$_invoke$arity$1(predict_prostate.results.curves.styles), \"x\": (X.cljs$core$IFn$_invoke$arity$1 ? X.cljs$core$IFn$_invoke$arity$1(2.5) : X.call(null,2.5)), \"y\": (Y.cljs$core$IFn$_invoke$arity$1 ? Y.cljs$core$IFn$_invoke$arity$1((0)) : Y.call(null,(0)))}),\"Years after diagnosis\")),sablono.interpreter.interpret(rum.core.with_key((function (){var G__47567 = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"X\",\"X\",1705996313),X,new cljs.core.Keyword(null,\"Y\",\"Y\",-560717356),Y], null);\nvar G__47568 = plot_style;\nvar G__47569 = predict_prostate.results.curves.as_point_series(data);\nvar G__47570 = radical_QMARK_;\nreturn (predict_prostate.results.curves.plot.cljs$core$IFn$_invoke$arity$4 ? predict_prostate.results.curves.plot.cljs$core$IFn$_invoke$arity$4(G__47567,G__47568,G__47569,G__47570) : predict_prostate.results.curves.plot.call(null,G__47567,G__47568,G__47569,G__47570));\n})(),\"plot\")),sablono.interpreter.interpret(cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2((function (k,x_k){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"line\",\"line\",212345235),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"stroke-dasharray\",\"stroke-dasharray\",-942933855),new cljs.core.Keyword(null,\"stroke\",\"stroke\",1741823555),new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),new cljs.core.Keyword(null,\"stroke-opacity\",\"stroke-opacity\",-1191543159),new cljs.core.Keyword(null,\"y1\",\"y1\",589123466),new cljs.core.Keyword(null,\"stroke-width\",\"stroke-width\",716836435),new cljs.core.Keyword(null,\"x1\",\"x1\",-1863922247),new cljs.core.Keyword(null,\"y2\",\"y2\",-718691301),new cljs.core.Keyword(null,\"x2\",\"x2\",-1362513475)],[(((cljs.core.mod((k + (1)),(5)) === (0)))?\"5 5\":\"2 10\"),\"#fff\",[\"x\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(x_k)].join(''),0.5,(Y.cljs$core$IFn$_invoke$arity$1 ? Y.cljs$core$IFn$_invoke$arity$1((0)) : Y.call(null,(0))),(1),(X.cljs$core$IFn$_invoke$arity$1 ? X.cljs$core$IFn$_invoke$arity$1(x_k) : X.call(null,x_k)),(Y.cljs$core$IFn$_invoke$arity$1 ? Y.cljs$core$IFn$_invoke$arity$1((100)) : Y.call(null,(100))),(X.cljs$core$IFn$_invoke$arity$1 ? X.cljs$core$IFn$_invoke$arity$1(x_k) : X.call(null,x_k))])], null);\n}),cljs.core.range.cljs$core$IFn$_invoke$arity$2((1),predict_prostate.state.run_time.N))),sablono.interpreter.interpret(cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2((function (k,y_k){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"line\",\"line\",212345235),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"stroke-dasharray\",\"stroke-dasharray\",-942933855),new cljs.core.Keyword(null,\"stroke\",\"stroke\",1741823555),new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),new cljs.core.Keyword(null,\"stroke-opacity\",\"stroke-opacity\",-1191543159),new cljs.core.Keyword(null,\"y1\",\"y1\",589123466),new cljs.core.Keyword(null,\"stroke-width\",\"stroke-width\",716836435),new cljs.core.Keyword(null,\"x1\",\"x1\",-1863922247),new cljs.core.Keyword(null,\"y2\",\"y2\",-718691301),new cljs.core.Keyword(null,\"x2\",\"x2\",-1362513475)],[((cljs.core.odd_QMARK_(k))?\"5 5\":\"2 10\"),\"#fff\",[\"y\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(y_k)].join(''),0.5,(Y.cljs$core$IFn$_invoke$arity$1 ? Y.cljs$core$IFn$_invoke$arity$1(y_k) : Y.call(null,y_k)),(1),(X.cljs$core$IFn$_invoke$arity$1 ? X.cljs$core$IFn$_invoke$arity$1((0)) : X.call(null,(0))),(Y.cljs$core$IFn$_invoke$arity$1 ? Y.cljs$core$IFn$_invoke$arity$1(y_k) : Y.call(null,y_k)),(X.cljs$core$IFn$_invoke$arity$1 ? X.cljs$core$IFn$_invoke$arity$1(predict_prostate.state.run_time.N) : X.call(null,predict_prostate.state.run_time.N))])], null);\n}),cljs.core.range.cljs$core$IFn$_invoke$arity$3((10),(100),(10))))))));\n}),null,\"curves-container\");\npredict_prostate.results.curves.curves = rum.core.build_defc((function (data){\nvar margin = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"top\",\"top\",-1856271961),(10),new cljs.core.Keyword(null,\"right\",\"right\",-452581833),(10),new cljs.core.Keyword(null,\"bottom\",\"bottom\",-1550509018),(0),new cljs.core.Keyword(null,\"left\",\"left\",-399115937),(0)], null);\nvar padding = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"top\",\"top\",-1856271961),(20),new cljs.core.Keyword(null,\"right\",\"right\",-452581833),(0),new cljs.core.Keyword(null,\"bottom\",\"bottom\",-1550509018),(60),new cljs.core.Keyword(null,\"left\",\"left\",-399115937),(80)], null);\nvar outer = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"width\",\"width\",-384071477),(400),new cljs.core.Keyword(null,\"height\",\"height\",1025178622),(400)], null);\nvar attrs47573 = (function (){var G__47574 = svg.space.space(outer,margin,padding,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),predict_prostate.state.run_time.N], null),(3),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(100)], null),(5));\nvar G__47575 = rum.core.react(predict_prostate.state.run_time.input_cursor(new cljs.core.Keyword(null,\"plot-style\",\"plot-style\",-113762355)));\nvar G__47576 = data;\nvar G__47577 = (rum.core.react(predict_prostate.state.run_time.input_cursor(new cljs.core.Keyword(null,\"primary-rx\",\"primary-rx\",-1656848904))) > (0));\nreturn (predict_prostate.results.curves.curves_container.cljs$core$IFn$_invoke$arity$4 ? predict_prostate.results.curves.curves_container.cljs$core$IFn$_invoke$arity$4(G__47574,G__47575,G__47576,G__47577) : predict_prostate.results.curves.curves_container.call(null,G__47574,G__47575,G__47576,G__47577));\n})();\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(React.createElement,\"div\",((cljs.core.map_QMARK_(attrs47573))?sablono.interpreter.attributes(attrs47573):null),((cljs.core.map_QMARK_(attrs47573))?null:new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret(attrs47573)], null)));\n}),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [rum.core.reactive,rum.core.static$,rum.core.local.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,new cljs.core.Keyword(\"predict-prostate.results.curves\",\"data\",\"predict-prostate.results.curves/data\",-1253026131))], null),\"curves\");\npredict_prostate.results.curves.benefit = (function predict_prostate$results$curves$benefit(data,tk){\nvar G__47578 = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(data,(10));\nreturn (tk.cljs$core$IFn$_invoke$arity$1 ? tk.cljs$core$IFn$_invoke$arity$1(G__47578) : tk.call(null,G__47578));\n});\npredict_prostate.results.curves.some_benefit_QMARK_ = (function predict_prostate$results$curves$some_benefit_QMARK_(data,treatment_key){\nreturn (predict_prostate.results.curves.benefit(data,treatment_key) > (0));\n});\npredict_prostate.results.curves.legend_item = rum.core.build_defc((function (p__47580){\nvar map__47581 = p__47580;\nvar map__47581__$1 = (((((!((map__47581 == null))))?(((((map__47581.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__47581.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__47581):map__47581);\nvar label = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47581__$1,new cljs.core.Keyword(null,\"label\",\"label\",1718410804));\nvar extra_style = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47581__$1,new cljs.core.Keyword(null,\"extra-style\",\"extra-style\",-1804716577));\nvar icon = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47581__$1,new cljs.core.Keyword(null,\"icon\",\"icon\",1679606541));\nreturn React.createElement(\"div\",null,React.createElement(\"div\",({\"key\": (3), \"style\": sablono.interpreter.attributes(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"width\",\"width\",-384071477),\"50px\",new cljs.core.Keyword(null,\"display\",\"display\",242065432),\"inline-block\",new cljs.core.Keyword(null,\"vertical-align\",\"vertical-align\",651007333),\"top\",new cljs.core.Keyword(null,\"text-align\",\"text-align\",1786091845),\"right\"], null),extra_style], 0)))}),sablono.interpreter.interpret((cljs.core.truth_(icon)?icon:null))),React.createElement(\"div\",({\"key\": (4), \"style\": ({\"display\": \"inline-block\", \"marginLeft\": \"10px\", \"width\": \"calc(100% - 60px)\"})}),(function (){var attrs47585 = label;\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(React.createElement,\"p\",((cljs.core.map_QMARK_(attrs47585))?sablono.interpreter.attributes(attrs47585):null),((cljs.core.map_QMARK_(attrs47585))?null:new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret(attrs47585)], null)));\n})()));\n}),null,\"legend-item\");\npredict_prostate.results.curves.legend = rum.core.build_defc((function (data){\nreturn React.createElement(\"div\",({\"width\": \"100%\"}),React.createElement(\"div\",({\"style\": ({\"borderTop\": [\"4px dashed \",predict_prostate.results.util.dashed_stroke].join(''), \"width\": \"50px\", \"display\": \"inline-block\", \"marginTop\": \"15px\", \"verticalAlign\": \"top\"})})),React.createElement(\"div\",({\"style\": ({\"display\": \"inline-block\", \"marginLeft\": \"10px\", \"width\": \"calc(100% - 60px)\"})}),React.createElement(\"p\",null,\" Survival excluding deaths from prostate cancer\")),sablono.interpreter.interpret((((rum.core.react(predict_prostate.state.run_time.input_cursor(new cljs.core.Keyword(null,\"primary-rx\",\"primary-rx\",-1656848904))) > (0)))?new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"p\",\"p\",151049309),(function (){var G__47600 = (predict_prostate.results.util.fill.cljs$core$IFn$_invoke$arity$1 ? predict_prostate.results.util.fill.cljs$core$IFn$_invoke$arity$1((1)) : predict_prostate.results.util.fill.call(null,(1)));\nreturn (predict_prostate.components.primitives.dead_icon.cljs$core$IFn$_invoke$arity$1 ? predict_prostate.components.primitives.dead_icon.cljs$core$IFn$_invoke$arity$1(G__47600) : predict_prostate.components.primitives.dead_icon.call(null,G__47600));\n})(),\" Estimated survival with radical treatment\"], null):null)),React.createElement(\"div\",null,React.createElement(\"div\",({\"key\": (3), \"style\": ({\"width\": \"50px\", \"display\": \"inline-block\", \"marginTop\": \"15px\", \"verticalAlign\": \"top\", \"textAlign\": \"right\"})}),sablono.interpreter.interpret((function (){var G__47614 = predict_prostate.results.util.treatment_fills((0));\nreturn (predict_prostate.components.primitives.dead_icon.cljs$core$IFn$_invoke$arity$1 ? predict_prostate.components.primitives.dead_icon.cljs$core$IFn$_invoke$arity$1(G__47614) : predict_prostate.components.primitives.dead_icon.call(null,G__47614));\n})())),React.createElement(\"div\",({\"key\": (4), \"style\": ({\"display\": \"inline-block\", \"marginLeft\": \"10px\", \"width\": \"calc(100% - 60px)\"})}),React.createElement(\"p\",null,\" Conservative management\"))));\n}),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [rum.core.reactive], null),\"legend\");\npredict_prostate.results.curves.legend2 = rum.core.build_defc((function (plot_style,radical_QMARK_){\nreturn React.createElement(\"div\",({\"width\": \"100%\"}),sablono.interpreter.interpret((function (){var G__47622 = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"label\",\"label\",1718410804),\"Survival excluding deaths from prostate cancer\",new cljs.core.Keyword(null,\"extra-style\",\"extra-style\",-1804716577),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"border-top\",\"border-top\",-158897573),[\"5px dashed \",predict_prostate.results.util.dashed_stroke].join(''),new cljs.core.Keyword(null,\"margin-top\",\"margin-top\",392161226),(9)], null),new cljs.core.Keyword(null,\"icon\",\"icon\",1679606541),null], null);\nreturn (predict_prostate.results.curves.legend_item.cljs$core$IFn$_invoke$arity$1 ? predict_prostate.results.curves.legend_item.cljs$core$IFn$_invoke$arity$1(G__47622) : predict_prostate.results.curves.legend_item.call(null,G__47622));\n})()),sablono.interpreter.interpret((cljs.core.truth_(radical_QMARK_)?(function (){var pred__47623 = cljs.core._EQ_;\nvar expr__47624 = plot_style;\nif(cljs.core.truth_((pred__47623.cljs$core$IFn$_invoke$arity$2 ? pred__47623.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"area1\",\"area1\",-316994623),expr__47624) : pred__47623.call(null,new cljs.core.Keyword(null,\"area1\",\"area1\",-316994623),expr__47624)))){\nvar G__47626 = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"label\",\"label\",1718410804),\"Estimated survival with radical treatment\",new cljs.core.Keyword(null,\"extra-style\",\"extra-style\",-1804716577),null,new cljs.core.Keyword(null,\"icon\",\"icon\",1679606541),(function (){var G__47627 = predict_prostate.results.util.treatment_fills((1));\nreturn (predict_prostate.components.primitives.dead_icon.cljs$core$IFn$_invoke$arity$1 ? predict_prostate.components.primitives.dead_icon.cljs$core$IFn$_invoke$arity$1(G__47627) : predict_prostate.components.primitives.dead_icon.call(null,G__47627));\n})()], null);\nreturn (predict_prostate.results.curves.legend_item.cljs$core$IFn$_invoke$arity$1 ? predict_prostate.results.curves.legend_item.cljs$core$IFn$_invoke$arity$1(G__47626) : predict_prostate.results.curves.legend_item.call(null,G__47626));\n} else {\nif(cljs.core.truth_((pred__47623.cljs$core$IFn$_invoke$arity$2 ? pred__47623.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"line2\",\"line2\",-1975668782),expr__47624) : pred__47623.call(null,new cljs.core.Keyword(null,\"line2\",\"line2\",-1975668782),expr__47624)))){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"div\",\"div\",1057191632),(function (){var G__47628 = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"label\",\"label\",1718410804),\"Potential range of treatment benefit above estimate\",new cljs.core.Keyword(null,\"extra-style\",\"extra-style\",-1804716577),null,new cljs.core.Keyword(null,\"icon\",\"icon\",1679606541),(function (){var G__47629 = new cljs.core.Keyword(null,\"radical-above\",\"radical-above\",-674575611).cljs$core$IFn$_invoke$arity$1((plot_style.cljs$core$IFn$_invoke$arity$1 ? plot_style.cljs$core$IFn$_invoke$arity$1(predict_prostate.results.util.fills_by_style_STAR_) : plot_style.call(null,predict_prostate.results.util.fills_by_style_STAR_)));\nreturn (predict_prostate.components.primitives.dead_icon.cljs$core$IFn$_invoke$arity$1 ? predict_prostate.components.primitives.dead_icon.cljs$core$IFn$_invoke$arity$1(G__47629) : predict_prostate.components.primitives.dead_icon.call(null,G__47629));\n})()], null);\nreturn (predict_prostate.results.curves.legend_item.cljs$core$IFn$_invoke$arity$1 ? predict_prostate.results.curves.legend_item.cljs$core$IFn$_invoke$arity$1(G__47628) : predict_prostate.results.curves.legend_item.call(null,G__47628));\n})(),(function (){var G__47630 = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"label\",\"label\",1718410804),\"Estimated survival with radical treatment\",new cljs.core.Keyword(null,\"extra-style\",\"extra-style\",-1804716577),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"border-top\",\"border-top\",-158897573),[\"3px solid \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(predict_prostate.results.util.treatment_fills((0)))].join(''),new cljs.core.Keyword(null,\"margin-top\",\"margin-top\",392161226),(9)], null),new cljs.core.Keyword(null,\"icon\",\"icon\",1679606541),null], null);\nreturn (predict_prostate.results.curves.legend_item.cljs$core$IFn$_invoke$arity$1 ? predict_prostate.results.curves.legend_item.cljs$core$IFn$_invoke$arity$1(G__47630) : predict_prostate.results.curves.legend_item.call(null,G__47630));\n})(),(function (){var G__47631 = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"label\",\"label\",1718410804),\"Potential range of treatment benefit below estimate\",new cljs.core.Keyword(null,\"extra-style\",\"extra-style\",-1804716577),null,new cljs.core.Keyword(null,\"icon\",\"icon\",1679606541),(function (){var G__47632 = new cljs.core.Keyword(null,\"radical\",\"radical\",1159030213).cljs$core$IFn$_invoke$arity$1((plot_style.cljs$core$IFn$_invoke$arity$1 ? plot_style.cljs$core$IFn$_invoke$arity$1(predict_prostate.results.util.fills_by_style_STAR_) : plot_style.call(null,predict_prostate.results.util.fills_by_style_STAR_)));\nreturn (predict_prostate.components.primitives.dead_icon.cljs$core$IFn$_invoke$arity$1 ? predict_prostate.components.primitives.dead_icon.cljs$core$IFn$_invoke$arity$1(G__47632) : predict_prostate.components.primitives.dead_icon.call(null,G__47632));\n})()], null);\nreturn (predict_prostate.results.curves.legend_item.cljs$core$IFn$_invoke$arity$1 ? predict_prostate.results.curves.legend_item.cljs$core$IFn$_invoke$arity$1(G__47631) : predict_prostate.results.curves.legend_item.call(null,G__47631));\n})()], null);\n} else {\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__47624)].join('')));\n}\n}\n})():null)),sablono.interpreter.interpret((function (){var G__47633 = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"label\",\"label\",1718410804),\"Initial conservative management\",new cljs.core.Keyword(null,\"icon\",\"icon\",1679606541),(function (){var G__47634 = predict_prostate.results.util.treatment_fills((0));\nreturn (predict_prostate.components.primitives.dead_icon.cljs$core$IFn$_invoke$arity$1 ? predict_prostate.components.primitives.dead_icon.cljs$core$IFn$_invoke$arity$1(G__47634) : predict_prostate.components.primitives.dead_icon.call(null,G__47634));\n})()], null);\nreturn (predict_prostate.results.curves.legend_item.cljs$core$IFn$_invoke$arity$1 ? predict_prostate.results.curves.legend_item.cljs$core$IFn$_invoke$arity$1(G__47633) : predict_prostate.results.curves.legend_item.call(null,G__47633));\n})()));\n}),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [rum.core.reactive], null),\"legend2\");\npredict_prostate.results.curves.extract_data = (function predict_prostate$results$curves$extract_data(results,radical_QMARK_){\n\nvar one_sum = (function (p1__47635_SHARP_,p2__47636_SHARP_){\nreturn ((100) * ((1) - (p1__47635_SHARP_ + p2__47636_SHARP_)));\n});\nvar radical_survival = (cljs.core.truth_(radical_QMARK_)?cljs.core.map.cljs$core$IFn$_invoke$arity$3(one_sum,cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(results,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"radical\",\"radical\",1159030213),new cljs.core.Keyword(null,\"pred-PC-cum\",\"pred-PC-cum\",1965177836)], null)),cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(results,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"radical\",\"radical\",1159030213),new cljs.core.Keyword(null,\"pred-NPC-cum\",\"pred-NPC-cum\",-1636287417)], null))):null);\nvar conservative_survival = cljs.core.map.cljs$core$IFn$_invoke$arity$3(one_sum,cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(results,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"conservative\",\"conservative\",-1075714010),new cljs.core.Keyword(null,\"pred-PC-cum\",\"pred-PC-cum\",1965177836)], null)),cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(results,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"conservative\",\"conservative\",-1075714010),new cljs.core.Keyword(null,\"pred-NPC-cum\",\"pred-NPC-cum\",-1636287417)], null)));\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [conservative_survival,(cljs.core.truth_(radical_QMARK_)?radical_survival:null),cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__47637_SHARP_){\nreturn ((100) * p1__47637_SHARP_);\n}),cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(results,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"conservative\",\"conservative\",-1075714010),new cljs.core.Keyword(null,\"NPC-survival\",\"NPC-survival\",-1399930619)], null)))], null);\n});\npredict_prostate.results.curves.results_in_curves = rum.core.build_defcs((function (state,p__47639){\nvar map__47640 = p__47639;\nvar map__47640__$1 = (((((!((map__47640 == null))))?(((((map__47640.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__47640.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__47640):map__47640);\nvar printable = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__47640__$1,new cljs.core.Keyword(null,\"printable\",\"printable\",-928999004));\nvar width = rum.core.react(new cljs.core.Keyword(null,\"width\",\"width\",-384071477).cljs$core$IFn$_invoke$arity$1(state));\nvar side_by_side = (function (){var or__4126__auto__ = printable;\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn (width > (600));\n}\n})();\nvar radical_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((1),rum.core.react(predict_prostate.state.run_time.input_cursor(new cljs.core.Keyword(null,\"primary-rx\",\"primary-rx\",-1656848904))));\nvar data = predict_prostate.results.curves.extract_data(rum.core.react(predict_prostate.state.run_time.results_cursor),radical_QMARK_);\nvar plot_style = rum.core.react(predict_prostate.state.run_time.input_cursor(new cljs.core.Keyword(null,\"plot-style\",\"plot-style\",-113762355)));\nreturn React.createElement(\"div\",({\"style\": ({\"position\": \"relative\"})}),React.createElement(\"p\",({\"style\": ({\"marginTop\": \"15px\"})}),\"This graph shows the percentage of men surviving up to \",sablono.interpreter.interpret(predict_prostate.state.run_time.N),\" years. These results are based on the inputs and treatment you selected\"),React.createElement(\"div\",({\"style\": ({\"width\": (cljs.core.truth_(side_by_side)?\"70%\":\"100%\"), \"maxWidth\": (350), \"display\": \"inline-block\"})}),React.createElement(\"div\",({\"style\": ({\"padding\": \"15px 40px 0px 0px\"})}),sablono.interpreter.interpret((predict_prostate.results.curves.curves.cljs$core$IFn$_invoke$arity$1 ? predict_prostate.results.curves.curves.cljs$core$IFn$_invoke$arity$1(data) : predict_prostate.results.curves.curves.call(null,data))))),React.createElement(\"div\",({\"style\": ({\"paddingTop\": \"30px\", \"verticalAlign\": \"top\", \"width\": (cljs.core.truth_(side_by_side)?\"30%\":\"100%\"), \"display\": \"inline-block\"})}),sablono.interpreter.interpret((predict_prostate.results.curves.legend2.cljs$core$IFn$_invoke$arity$2 ? predict_prostate.results.curves.legend2.cljs$core$IFn$_invoke$arity$2(plot_style,radical_QMARK_) : predict_prostate.results.curves.legend2.call(null,plot_style,radical_QMARK_)))));\n}),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [rum.core.static$,rum.core.reactive,predict_prostate.mixins.sizing_mixin], null),\"results-in-curves\");\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","predict_prostate/results/curves.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",36],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.core.async","~$cljs.core.async"],"~:use-macros",["^ ","~$defstyle","~$cljs-css-modules.macro"],"~:excludes",["~#set",[]],"~:name","~$predict-prostate.results.curves","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$predict-prostate.results.util","^O","~$svg.scales","^P","~$svg.space","^Q","~$rum.core","^R","~$cljs.core","^S","~$rum","^R","~$gobj","~$goog.object","~$goog","^W","^V","^V","~$svg.mixins","^X","~$predict-prostate.components.primitives","^Y","~$predict-prostate.mixins","^Z","^F","^F","~$str","~$clojure.string","~$svg.axis","^11","~$predict-prostate.state.run-time","^12","^10","^10","~$pubsub.feeds","^13"],"~:seen",["^H",["~:require"]],"~:uses",["^ ","~$nice-linear","^P","~$dead-icon","^Y","~$treatment-fills","^O","~$N","^12","~$publish","^13","~$in","^P","~$axisTop","^11","~$axisLeft","^11","~$->Identity","^P","~$sizing-mixin","^Z","~$space","^Q","~$patch-svg-attrs","^X","~$dashed-stroke","^O","~$on-screen-treatments-cursor","^12","~$tick-format-specifier","^P","~$getValueByKeys","^V","~$fill","^O","~$axisBottom","^11","~$input-cursor","^12","~$o->i","^P","~$results-cursor","^12","~$axisRight","^11","~$fills-by-style*","^O","~$out","^P","~$i->o","^P","~$ticks","^P"],"~:require-macros",["^ ","^F","^F","^S","^S","^R","^R","^T","^R"],"~:form",["~#list",["~$ns","^J",["^1R",["^15",["^10","~:as","^["],["^R","^1T","^T"],["^O","~:refer",["^1F","^19","^1B","^1L"]],["^12","^1U",["~$N","^1J","^1H","^1C"]],["^Y","^1U",["^18"]],["^Z","^1U",["^1?"]],["^13","^1U",["^1:"]],["^Q","^1U",["^1@"]],["^F","~:refer-macros",["^E"]],["^11","^1U",["^1G","^1<","^1=","^1K"]],["^P","^1U",["^1>","^17","^1N","^1I","^1;","^1M","^1O","^1D"]],["^X","^1U",["^1A"]],["^V","^1T","^U","^1U",["^1E"]]]]]],"~:flags",["^ ","^15",["^H",[]]],"~:js-deps",["^ "],"~:deps",["^W","^S","^10","^R","^O","^12","^Y","^Z","^13","^Q","^F","^11","^P","^X","^V"]],"^L","^J","~:resource-id",["~:shadow.build.classpath/resource","predict_prostate/results/curves.cljs"],"~:compiled-at",1635278425716,"~:resource-name","predict_prostate/results/curves.cljs","~:warnings",[],"~:source","(ns predict-prostate.results.curves\n  (:require [clojure.string :as str]\n            [rum.core :as rum]\n            [predict-prostate.results.util :refer [fill treatment-fills dashed-stroke fills-by-style*]]\n            [predict-prostate.state.run-time :refer [N results-cursor input-cursor on-screen-treatments-cursor]]\n            [predict-prostate.components.primitives :refer [dead-icon]]\n            [predict-prostate.mixins :refer [sizing-mixin]]\n            [pubsub.feeds :refer [publish]]\n            [svg.space :refer [space]]\n            [cljs-css-modules.macro :refer-macros [defstyle]]\n            [svg.axis :refer [axisBottom axisTop axisLeft axisRight]]\n            [svg.scales :refer [->Identity nice-linear i->o o->i in out ticks tick-format-specifier]]\n            [svg.mixins :refer [patch-svg-attrs]]\n            [goog.object :as gobj :refer [getValueByKeys]]\n            ))\n\n\n(enable-console-print!)\n\n(defstyle styles\n  [\".outer\" {:fill   \"none\"\n             :stroke \"none\"}]\n  [\".inner\" {:fill             \"#fff\"\n             :stroke           \"#000\"\n             :stroke-opacity   0\n             :stroke-width     0.5\n             :stroke-dasharray \"3, 4\"}]\n  [\".annotation\" {\n                  :font-size \"14pt\"\n                  }]\n  [\".arrow\" {\n             :stroke       \"#000\"\n             :stroke-width \"1.5px\"\n             }])\n\n\n(defn as-point-series [plot-layers]\n  \"Convert a vector of data-layers of time-series y-values to a vector of time-series of [x y] points.\"\n  (into [] (for [time-series plot-layers]\n             (into [] (map-indexed (fn [i v] [i v]) time-series)))))\n\n(rum/defc line-plot [{:keys [X Y] :as scale} point-series line-style]\n  \"X and Y are the x-axis and y-axis scale functions.\n  Data should look something like this:\n  [[0 100]  [1 98.89556593176486]  ... [9 64.83779488900586]  [10 60.8297996952587]]\"\n\n  (let [point (fn [x y] (str (X x) \" \" (Y y)))]\n    [:g\n     [:polyline (merge {:points (map #(apply point %) point-series)} line-style)]]))\n\n(rum/defc area-plot\n  \"scale contains the x-axis and y-axis scale functions.\n  Point series should look something like this:\n  [[0 100]  [1 98.89556593176486]  ... [9 64.83779488900586]  [10 60.8297996952587]]\n  Baseline is the \"\n  ([scale point-series area-style]\n   (area-plot scale point-series area-style 0))\n  ([{:keys [X Y]} point-series area-style base]\n   (when (seq point-series)\n     (let [point (fn [x y] (str (X x) \" \" (Y y)))]\n       [:g\n        [:polygon (merge {:points (str/join \", \" [(str/join \", \" (map #(apply point %) point-series))\n                                                  (str/join \", \" [(point (first (last point-series)) base)\n                                                                  (point (first (first point-series)) base)])])}\n                    area-style)]]))))\n\n(rum/defc plot [{:keys [X Y] :as scale} plot-style data radical?]\n  \"X and Y are the x-axis and y-axis scale functions.\n  Data should look something like this:\n  ([[0 100]  [1 98.89556593176486]  ... [9 64.83779488900586]  [10 60.8297996952587] ]\n   [[0 100]  [1 98.89556593176486]  ... [9 64.83779488900586]  [10 60.8297996952587] ]\n   [[0 100]  [1 98.89556593176486]  ... [9 64.83779488900586]  [10 60.8297996952587] ]\n   [[0 100]  [1 98.89556593176486]  ... [9 64.83779488900586]  [10 60.8297996952587] ]\n   [[0 100]  [1 99.93906220645762]  ... [9 98.75403990843078]  [10 98.5298358866154] ])\"\n\n  (condp = plot-style\n    :area1\n    [:g\n     ;(map-indexed #(rum/with-key (area-plot scale (nth data %1) {:fill (treatment-fills %1)}) (str \"a\" %1)) area-data)\n     (area-plot scale (nth data 1) {:fill (treatment-fills 1)})\n     (area-plot scale (nth data 0) {:fill (treatment-fills 0)})\n     (line-plot scale (nth data 2) {:fill \"none\" :stroke dashed-stroke :strokeDasharray \"8,8\" :strokeWidth 5 :strokeLinecap \"round\"})\n     ]\n\n    :line2\n    [:g\n     ; light blue fill\n     (when radical? (area-plot scale (nth data 2) {:fill (:radical-above (:line2 fills-by-style*))}))\n\n     ; light blue fill\n     (when radical? (area-plot scale (nth data 1) {:fill (:radical (:line2 fills-by-style*))}))\n\n     ; dotted orange\n     (line-plot scale (nth data 2) {:fill \"none\" :stroke dashed-stroke :strokeDasharray \"8,8\" :strokeWidth 5 :strokeLinecap \"round\"})\n\n     ; dark blue conservative\n     (area-plot scale (nth data 0) {:fill (treatment-fills 0)})\n\n     ; dark blue line\n     (line-plot scale (nth data 1) {:fill \"none\" :stroke (treatment-fills 0) :strokeWidth 2 :strokeLinecap \"round\"})\n\n     ]\n\n\n\n    [:text (str \"bad plot-style\" plot-style)]\n    ))\n\n\n(rum/defc curves-container [{:keys [outer margin inner padding width height x y]} plot-style data radical?]\n  (let [inner (if (nil? inner) {:width  (- (:width outer) (:left margin) (:right margin))\n                                :height (- (:height outer) (:top margin) (:bottom margin))}\n                               inner)\n        width (if (nil? width) (- (:width inner) (:left padding) (:right padding)) width)\n        height (if (nil? height) (- (:height inner) (:top padding) (:bottom padding)) height)\n        x (if (nil? x) (->Identity [0 width] N) x)\n        x-ticks (ticks x)                                   ;(if (nil? x-ticks) (ticks 0 width 10) x-ticks)\n        y (if (nil? y) (->Identity [0 height] 10) y)\n        y-ticks (ticks y)                                   ;(if (nil? y-ticks) (ticks 0 height 5) y-ticks)\n        X (i->o x)\n        Y (i->o y)\n        ]\n\n    [:div {:style {:margin      \"0 auto\"\n                   :width       \"100%\"\n                   :height      0\n                   :padding-top \"100%\"\n                   :position    \"relative\"\n                   }}\n     [:svg {:style    {:position \"absolute\"\n                       :top      0\n                       :left     0\n                       }\n            :view-box (str \" 0 0 \" (:width outer) \" \" (:height outer))}\n\n      [:g {:key       0\n           :transform (str \"translate(\" (:left margin) \", \" (:top margin) \")\")}\n\n       [:rect {:key        1\n               :class-name (:outer styles)\n               :width      (:width inner)\n               :height     (:height inner)}]\n\n       ;;\n       ;; define the coordinate system\n       ;;\n       [:g {:key       2\n            :transform (str \"translate(\" (:left padding) \",\" (:top padding) \")\")}\n        [:rect {:key        1\n                :class-name (:inner styles)\n                :width      width\n                :height     height}]\n\n        ;; axes on all edges\n        [:g {:key       \"bottom\"\n             ;:class-name \".xaxis\"\n             :transform (str \"translate(0,\" (+ (first (out y)) 10) \")\")}\n         (axisBottom {:scale x :ticks x-ticks})]\n\n        [:g {:key       \"left\"\n             :transform (str \"translate(\" (- (first (out x)) 10) \",0)\")}\n         (axisLeft {:scale y :ticks y-ticks :format-specifier (str (tick-format-specifier y) \"%\")})]\n\n\n        [:g {:key       \"y-title\"\n             :transform (str \"translate(-62 0) rotate(-90 \" (X 0) \" \" (Y 0) \")\")}\n         [:text {:key        \"note\"\n                 :class-name (:annotation styles)\n                 :x          (X 1)\n                 :y          (Y 0)}\n          \"Percentage of men surviving\"]]\n\n        [:g {:key \"x-title\" :transform (str \"translate(0 50)\")}\n         [:text {:key        \"note\"\n                 :class-name (:annotation styles)\n                 :x          (X 2.5)\n                 :y          (Y 0)}\n          \"Years after diagnosis\"]]\n\n        (rum/with-key (plot {:X X :Y Y} plot-style (as-point-series data) radical?) \"plot\")\n\n        ; Add grid overlay\n        (map-indexed (fn [k x_k] [:line {:key              (str \"x\" x_k)\n                                         :x1               (X x_k)\n                                         :x2               (X x_k)\n                                         :y1               (Y 0)\n                                         :y2               (Y 100)\n                                         :stroke           \"#fff\"\n                                         :stroke-opacity   0.5\n                                         :stroke-width     1\n                                         :stroke-dasharray (if (zero? (mod (inc k) 5)) \"5 5\" \"2 10\")}])\n          (range 1 N))\n\n        (map-indexed (fn [k y_k] [:line {:key              (str \"y\" y_k)\n                                         :x1               (X 0)\n                                         :x2               (X N)\n                                         :y1               (Y y_k)\n                                         :y2               (Y y_k)\n                                         :stroke           \"#fff\"\n                                         :stroke-opacity   0.5\n                                         :stroke-width     1\n                                         :stroke-dasharray (if (odd? k) \"5 5\" \"2 10\")}])\n          (range 10 100 10))]\n\n       ]]]))\n\n(rum/defc curves < rum/reactive rum/static (rum/local [] ::data)\n  [data]\n  (let [margin {:top 10 :right 10 :bottom 0 :left 0}\n        padding {:top 20 :right 0 :bottom 60 :left 80}\n        outer {:width 400 :height 400}]\n    [:div (curves-container\n            (space outer margin padding [0 N] 3 [0 100] 5)\n            (rum/react (input-cursor :plot-style))\n            data\n            (pos? (rum/react (input-cursor :primary-rx)))\n            )]))\n\n(defn benefit [data tk]\n  (tk (nth data 10)))\n\n(defn some-benefit? [data treatment-key] (pos? (benefit data treatment-key)))\n\n(rum/defc legend-item\n  [{:keys [label extra-style icon]}]\n  [:div\n   [:div {:key   3\n          :style (merge {:width          \"50px\"\n                         :display        \"inline-block\"\n                         ;:margin-top     \"15px\"\n                         :vertical-align \"top\"\n                         :text-align     \"right\"}\n                   extra-style)}\n    (when icon icon)]\n   [:div {:key   4\n          :style {:display     \"inline-block\"\n                  :margin-left \"10px\"\n                  :width       \"calc(100% - 60px)\"}}\n    [:p label]]])\n\n(rum/defc legend < rum/reactive [data]\n  [:div {:width \"100%\"}\n   [:div {:style {:border-top     (str \"4px dashed \" dashed-stroke)\n                  :width          \"50px\"\n                  :display        \"inline-block\"\n                  :margin-top     \"15px\"\n                  :vertical-align \"top\"}}]\n   [:div {:style {:display     \"inline-block\"\n                  :margin-left \"10px\"\n                  :width       \"calc(100% - 60px)\"}}\n    [:p \" Survival excluding deaths from prostate cancer\"]]\n   (when (pos? (rum/react (input-cursor :primary-rx)))\n     [:p (dead-icon (fill 1)) \" Estimated survival with radical treatment\"])\n\n   [:div\n    [:div {:key   3\n           :style {:width          \"50px\"\n                   :display        \"inline-block\"\n                   :margin-top     \"15px\"\n                   :vertical-align \"top\"\n                   :text-align     \"right\"}}\n     (dead-icon (treatment-fills 0))]\n    [:div {:key   4\n           :style {:display     \"inline-block\"\n                   :margin-left \"10px\"\n                   :width       \"calc(100% - 60px)\"}}\n     [:p \" Conservative management\"]]]\n\n   ])\n\n(rum/defc legend2 < rum/reactive [plot-style radical?]\n  [:div {:width \"100%\"}\n   (legend-item {:label       \"Survival excluding deaths from prostate cancer\"\n                 :extra-style {:border-top (str \"5px dashed \" dashed-stroke)\n                               :margin-top 9}\n                 :icon        nil})\n\n   (when radical?\n     (condp = plot-style\n       :area1\n       (legend-item {:label       \"Estimated survival with radical treatment\"\n                     :extra-style nil\n                     :icon        (dead-icon (treatment-fills 1))})\n\n       :line2\n       [:div\n\n        (legend-item {:label       \"Potential range of treatment benefit above estimate\"\n                      :extra-style nil\n                      :icon        (dead-icon (:radical-above (plot-style fills-by-style*)))})\n        (legend-item {:label       \"Estimated survival with radical treatment\"\n                      :extra-style {:border-top (str \"3px solid \" (treatment-fills 0))\n                                    :margin-top 9}\n                      :icon        nil})\n        (legend-item {:label       \"Potential range of treatment benefit below estimate\"\n                      :extra-style nil\n                      :icon        (dead-icon (:radical (plot-style fills-by-style*)))})]))\n\n   (legend-item {:label \"Initial conservative management\"\n                 :icon  (dead-icon (treatment-fills 0))})\n\n   ])\n\n(defn extract-data [results radical?]\n  \"extract plot data from the model run. Include radical treatment if radical?\"\n  (let [;years (range 0 11)\n        one-sum #(* 100 (- 1 (+ %1 %2)))\n        radical-survival (when radical? (map one-sum\n                                          (get-in results [:radical :pred-PC-cum])\n                                          (get-in results [:radical :pred-NPC-cum])))\n        conservative-survival (map one-sum\n                                (get-in results [:conservative :pred-PC-cum])\n                                (get-in results [:conservative :pred-NPC-cum]))]\n    [conservative-survival                                  ; 0 conservative\n     (when radical? radical-survival)                       ; 1 radical\n     ;(map #(* 100 (- 1 %)) (get-in results [(if radical? :radical :conservative) :pred-NPC-cum])) ; 2 dotted orange\n     (map #(* 100 %) (get-in results [:conservative :NPC-survival]))\n     ]))\n\n\n(rum/defcs results-in-curves < rum/static rum/reactive sizing-mixin [state {:keys [printable]}]\n  (let [width (rum/react (:width state))\n        side-by-side (or printable (> width 600))\n        radical? (= 1 (rum/react (input-cursor :primary-rx)))\n        data (extract-data (rum/react results-cursor) radical?)\n        plot-style (rum/react (input-cursor :plot-style))\n        ;point-series (as-point-series data)\n        ]\n    [:div {:style {:position \"relative\"}}\n\n     [:p {:style {:margin-top \"15px\"}}\n      \"This graph shows the percentage of men surviving up to \" N \" years. These results are based on the inputs and treatment you selected\"]\n\n\n     [:div {:style {:width   (if side-by-side \"70%\" \"100%\")\n                    :max-width 350\n                    :display \"inline-block\"}}\n      [:div {:style {:padding \"15px 40px 0px 0px\"}} (curves data)]]\n     [:div {:style {:padding-top    \"30px\"\n                    :vertical-align \"top\"\n                    :width          (if side-by-side \"30%\" \"100%\")\n                    :display        \"inline-block\"}}\n      (legend2 plot-style radical?)\n      ]]))","~:reader-features",["^H",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["cljs.core/enable-console-print!","cljs-css-modules.runtime/inject-style!","cljs.core.apply","garden.core/css","predict-prostate.results.curves/styles","predict-prostate.results.curves/as-point-series","plot-layers","cljs.core.into","iter__4529__auto__","s__47478","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4527__auto__","size__4528__auto__","cljs.core/count","b__47480","cljs.core/chunk-buffer","i__47479","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__47477","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","time-series","cljs.core.map_indexed","i","v","rum.core/build-defc","p__47483","map__47484","cljs.core/PROTOCOL_SENTINEL","cljs.core/hash-map","cljs.core.get","js/React.createElement","attrs47486","cljs.core/map?","sablono.interpreter/attributes","sablono.interpreter/interpret","predict-prostate.results.curves/line-plot","X","Y","scale","point-series","line-style","point","x","y","cljs.core.merge","p1__47482#","cljs.core.map","p__47488","map__47489","predict-prostate.results.curves/area-plot","area-style","base","clojure.string.join","p1__47487#","cljs.core/last","p__47491","map__47492","predict-prostate.results.curves/plot","plot-style","data","radical?","pred__47494","expr__47495","cljs.core/=","G__47497","G__47498","G__47499","cljs.core.nth","predict-prostate.results.util/treatment-fills","G__47500","G__47501","G__47502","G__47508","G__47509","G__47510","predict-prostate.results.util/dashed-stroke","G__47511","G__47512","G__47513","predict-prostate.results.util/fills-by-style*","G__47515","G__47516","G__47517","G__47518","G__47519","G__47520","G__47522","G__47523","G__47524","G__47526","G__47527","G__47528","p__47554","map__47555","predict-prostate.results.curves/curves-container","outer","margin","inner","padding","width","height","svg.scales/->Identity","predict-prostate.state.run-time/N","x-ticks","svg.scales/ticks","y-ticks","svg.scales/i->o","svg.scales/out","G__47557","svg.axis/axisBottom","G__47565","svg.axis/axisLeft","svg.scales/tick-format-specifier","rum.core/with-key","G__47567","G__47568","G__47569","G__47570","k","x_k","cljs.core/mod","cljs.core.range","y_k","cljs.core/odd?","attrs47573","predict-prostate.results.curves/curves","rum.core/reactive","rum.core/static","rum.core.local","G__47574","G__47575","G__47576","G__47577","svg.space/space","rum.core/react","predict-prostate.state.run-time/input-cursor","predict-prostate.results.curves/benefit","tk","G__47578","predict-prostate.results.curves/some-benefit?","treatment-key","p__47580","map__47581","attrs47585","predict-prostate.results.curves/legend-item","label","extra-style","icon","predict-prostate.results.curves/legend","G__47600","predict-prostate.components.primitives/dead-icon","predict-prostate.results.util/fill","G__47614","predict-prostate.results.curves/legend2","G__47622","pred__47623","expr__47624","js/Error","G__47626","G__47627","G__47628","G__47629","G__47630","G__47631","G__47632","G__47633","G__47634","predict-prostate.results.curves/extract-data","results","p1__47635#","p2__47636#","one-sum","radical-survival","cljs.core.get_in","conservative-survival","p1__47637#","rum.core/build-defcs","p__47639","map__47640","predict-prostate.results.curves/results-in-curves","predict-prostate.mixins/sizing-mixin","state","printable","side-by-side","or__4126__auto__","cljs.core._EQ_","predict-prostate.state.run-time/results-cursor","cljs.core/chunk-first"]],"~:used-vars",["^H",["~$clojure.string/join","~$cljs.core/odd?","~$cljs-css-modules.runtime/inject-style!","~$predict-prostate.mixins/sizing-mixin","~$predict-prostate.results.curves/as-point-series","~$svg.axis/axisLeft","~$predict-prostate.results.curves/legend","~$cljs.core/enable-console-print!","~$predict-prostate.results.curves/benefit","~$rum.core/local","~$cljs.core/seq","~$cljs.core/apply","~$predict-prostate.results.curves/some-benefit?","~$predict-prostate.results.curves/line-plot","~$cljs.core/last","~$predict-prostate.results.curves/results-in-curves","~$predict-prostate.state.run-time/input-cursor","~$predict-prostate.results.curves/curves-container","~$garden.core/css","~$rum.core/with-key","~$predict-prostate.results.curves/area-plot","~$predict-prostate.results.curves/styles","~$predict-prostate.results.curves/extract-data","~$rum.core/build-defcs","~$cljs.core/into","~$cljs.core/map?","~$predict-prostate.state.run-time/N","~$cljs.core/map","~$svg.axis/axisBottom","~$cljs.core/get-in","~$rum.core/static","~$predict-prostate.results.curves/curves","~$cljs.core/mod","~$predict-prostate.components.primitives/dead-icon","~$svg.scales/out","~$predict-prostate.results.curves/legend2","~$rum.core/react","~$rum.core/reactive","~$sablono.interpreter/interpret","~$js/React.createElement","~$cljs.core/map-indexed","~$cljs.core/range","~$predict-prostate.results.curves/plot","~$predict-prostate.results.util/dashed-stroke","~$cljs.core/first","~$rum.core/build-defc","~$cljs.core/merge","~$js/Error","~$predict-prostate.results.curves/legend-item","~$sablono.interpreter/attributes"]]],"~:cache-keys",["~#cmap",[["~:shadow.build.npm/resource","node_modules/react-dom/index.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","91f343238d339a21b91ac3d4f1d804783ecfdecb","dc3011a0ee823c91a565237d17cbc3c0856de8a6","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^H",[]],"~:deps-syms",["~$shadow.js","~$module$node_modules$react_dom$cjs$react_dom_production_min","~$module$node_modules$react_dom$cjs$react_dom_development"]]],["^1[","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","~$goog.dom.HtmlElement"]]],["^3C","node_modules/fbjs/lib/camelize.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","91f343238d339a21b91ac3d4f1d804783ecfdecb","fdf1074502399d022871fac4144e6eb63c959819","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^3H"]]],["^1[","svg/axis.cljs"],["dae2dc5ee1d2f8f8b45ca039199145c67e605913","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S","^R","^10","^?","^F","^P"]]],["^1[","cljs/core/async/impl/ioc_helpers.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S","~$cljs.core.async.impl.protocols"]]],["^1[","goog/labs/useragent/platform.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","~$goog.labs.userAgent.util","~$goog.string"]]],["^1[","cljs/core/async.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S","^3L","~$cljs.core.async.impl.channels","~$cljs.core.async.impl.buffers","~$cljs.core.async.impl.timers","~$cljs.core.async.impl.dispatch","~$cljs.core.async.impl.ioc-helpers","~$goog.array"]]],["^1[","cljs/tools/reader/impl/utils.cljs"],["d87b8bf9f6ce87b207d5ac625236d72923b7d71f","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S","^10","^3N"]]],["^1[","rum/util.cljc"],["015cbe92b73dc956eb72b2a36c793bff2f7b8de2","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S"]]],["^1[","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^3T","~$goog.asserts"]]],["^1[","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W"]]],["^1[","goog/string/stringformat.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^3N"]]],["^1[","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^3T","^3M","^V","~$goog.string.internal"]]],["^1[","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^3U","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^3V"]]],["^1[","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^3U"]]],["^3C","node_modules/prop-types/checkPropTypes.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","91f343238d339a21b91ac3d4f1d804783ecfdecb","3180f5f58c360a2e36c5ff354213b3ff22f43d1b","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^3H","~$module$node_modules$prop_types$lib$ReactPropTypesSecret"]]],["^1[","garden/color.cljc"],["ee5fc50fad089581dd0cf1fd0f16e4ec745a57dd","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S","^10","~$garden.util"]]],["^1[","goog/useragent/useragent.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^3M","~$goog.reflect","^3N"]]],["^3C","node_modules/fbjs/lib/emptyFunction.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","91f343238d339a21b91ac3d4f1d804783ecfdecb","e4c24d86bdc1d3fdfdea4bcd8ad79ede5d045fb0","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^3H"]]],["^1[","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W"]]],["^1[","garden/units.cljc"],["ee5fc50fad089581dd0cf1fd0f16e4ec745a57dd","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S","~$cljs.reader","~$garden.types","^42"]]],["^1[","rum/derived_atom.cljc"],["015cbe92b73dc956eb72b2a36c793bff2f7b8de2","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S"]]],["^1[","cljs/tools/reader/edn.cljs"],["d87b8bf9f6ce87b207d5ac625236d72923b7d71f","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S","~$cljs.tools.reader.impl.errors","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^3N","~$goog.string.StringBuffer"]]],["^3C","node_modules/fbjs/lib/emptyObject.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","91f343238d339a21b91ac3d4f1d804783ecfdecb","3b34d3f45a149b2a8016477c9ffbe011103fd779","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^3H"]]],["^1[","goog/color/color.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","~$goog.color.names","~$goog.math"]]],["^1[","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W"]]],["^3C","node_modules/fbjs/lib/shallowEqual.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","91f343238d339a21b91ac3d4f1d804783ecfdecb","5b863319ab6479f98e932857e0fd6d7ce5580803","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^3H"]]],["^1[","cljs/tools/reader/impl/inspect.cljs"],["d87b8bf9f6ce87b207d5ac625236d72923b7d71f","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S"]]],["^1[","cljs/pprint.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S","^10","^3N","^4>"]]],["^1[","predict_prostate/results/util.cljs"],["d51e1ee645d742b41f1b702a66f99cf29642a3c5","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S","^10","~$goog.color"]]],["^1[","cljs/tools/reader.cljs"],["d87b8bf9f6ce87b207d5ac625236d72923b7d71f","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S","^4:","^4;","^4<","^49","^3T","^3N","^4>"]]],["^1[","sablono/interpreter.cljc"],["5bb2734298a88a75afaebe4dea010ffea229cd2c","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S","^V","^10","~$sablono.normalize","~$sablono.util"]]],["^1[","garden/stylesheet.cljc"],["ee5fc50fad089581dd0cf1fd0f16e4ec745a57dd","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S","^42","~$garden.color","^48"]]],["^3C","node_modules/fbjs/lib/hyphenate.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","91f343238d339a21b91ac3d4f1d804783ecfdecb","fa0a75e38361fec1337de5313a86836e92155698","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^3H"]]],["^1[","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W"]]],["^3C","node_modules/react/index.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","91f343238d339a21b91ac3d4f1d804783ecfdecb","a69a7f3d4a4636bf9035bc53c05b2d99a7b8af7f","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^3H","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1[","shadow/js.js"],["e21b1ce88fb2e40199fb2ea0618eff637b57a162","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W"]]],["^1[","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W"]]],["^1[","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^3U"]]],["^3C","node_modules/react-dom/cjs/react-dom.production.min.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","91f343238d339a21b91ac3d4f1d804783ecfdecb","6725a800a499faaea14eb4fba1d060aee9143fc8","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^3H","~$module$node_modules$react$index","~$module$node_modules$fbjs$lib$ExecutionEnvironment","~$module$node_modules$object_assign$index","~$module$node_modules$fbjs$lib$emptyFunction","~$module$node_modules$fbjs$lib$EventListener","~$module$node_modules$fbjs$lib$getActiveElement","~$module$node_modules$fbjs$lib$shallowEqual","~$module$node_modules$fbjs$lib$containsNode","~$module$node_modules$fbjs$lib$focusNode","~$module$node_modules$fbjs$lib$emptyObject"]]],"~:SHADOW-TIMESTAMP",[1635266348000,1635266348000,1634894918000],["^3C","node_modules/react/cjs/react.development.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","91f343238d339a21b91ac3d4f1d804783ecfdecb","e43f495c748a38e418d9936bba01580afd0da061","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^3H","^4I","^4P","~$module$node_modules$fbjs$lib$invariant","~$module$node_modules$fbjs$lib$warning","^4J","~$module$node_modules$prop_types$checkPropTypes"]]],["^1[","cljs_css_modules/macro.cljc"],["aa16088abf13627b6e847754432767ed39b3c8b2","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S","~$garden.core","~$garden.stylesheet","~$cljs-css-modules.runtime"]]],["^1[","sablono/normalize.cljc"],["5bb2734298a88a75afaebe4dea010ffea229cd2c","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S","~$clojure.set","^10","^4C"]]],["^3C","node_modules/fbjs/lib/isNode.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","91f343238d339a21b91ac3d4f1d804783ecfdecb","96611445564981035d564b0c1572e263cea31994","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^3H"]]],["^1[","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^3U","^46"]]],["^1[","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^3U","~$goog.html.trustedtypes","^3Y","^3Z","^3[","^40"]]],["^1[","cljs/core/async/impl/channels.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S","^3L","^3R","^3P"]]],["^1[","sablono/core.cljs"],["5bb2734298a88a75afaebe4dea010ffea229cd2c","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S","^10","^3N","^4B","^4C","~$sablono.interpreter","~$goog.dom"]]],["^1[","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W"]]],["^1[","goog/color/names.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W"]]],["^1[","predict_prostate/components/primitives.cljs"],["1a9be9e8e2be2412c6ed0bba4224e1f60cca9885","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S","^R","~$graphics.simple-icons"]]],["^3C","node_modules/fbjs/lib/warning.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","91f343238d339a21b91ac3d4f1d804783ecfdecb","1a9dceee8d9dbda2fffdba852c8b22f247dd139d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^3H","^4J"]]],["^1[","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W"]]],["^1[","cljs/core/async/impl/dispatch.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S","^3P","~$goog.async.nextTick"]]],["^1[","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^3T","^3U","~$goog.html.SafeUrl","^3[","^40","^3V"]]],["^1[","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^3U","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^52","^3X","~$goog.html.uncheckedconversions","^3[","^3V"]]],["^1[","cljs/core/async/impl/protocols.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S"]]],["^1[","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1[","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^3T","^3U","~$goog.dom.TagName","~$goog.dom.tags","^56","^57","~$goog.html.SafeStyleSheet","^52","^3X","^4Y","^3Y","^3Z","^43","^V","^3[","^40","^3V"]]],["^1[","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^V"]]],["^1[","goog/math/size.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W"]]],["^1[","pubsub/feeds.cljs"],["e1f7cd6b96dcccd63a27ab60a37059912e9ee83e","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S","^C"]]],["^1[","goog/labs/useragent/engine.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^3T","^3M","^3N"]]],["^1[","garden/core.cljc"],["ee5fc50fad089581dd0cf1fd0f16e4ec745a57dd","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S","~$garden.compiler"]]],["^1[","cljs/reader.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S","^V","^4=","~$cljs.tools.reader.edn","^4>"]]],["^1[","goog/dom/dom.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^3T","^3U","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^5;","~$goog.dom.safe","^55","^58","~$goog.math.Coordinate","~$goog.math.Size","^V","^3N","~$goog.string.Unicode","~$goog.userAgent"]]],["^1[","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","~$goog.debug.Error","^5A"]]],["^1[","cljs/core/async/impl/buffers.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S","^3L"]]],["^1[","garden/types.cljc"],["ee5fc50fad089581dd0cf1fd0f16e4ec745a57dd","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S"]]],["^1[","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^3T","^3U","^3N","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1[","predict_prostate/mixins.cljs"],["92ec905bcdf2fcb05c95299dfd58361c3c2f5a6e","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S","^4X","^12","~$predict-prostate.state.config","^13"]]],["^1[","svg/scales.cljs"],["9ade7a31bce18d3170e4d1f8185888c94a47edea","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S"]]],["^1[","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W"]]],["^3C","node_modules/object-assign/index.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","91f343238d339a21b91ac3d4f1d804783ecfdecb","519ffd5a4c91b67302cc9947b794966d629860cd","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^3H"]]],["^3C","node_modules/fbjs/lib/containsNode.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","91f343238d339a21b91ac3d4f1d804783ecfdecb","ddf281cd32e056e667987aa8c37a55df26d5ed13","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^3H","~$module$node_modules$fbjs$lib$isTextNode"]]],["^3C","node_modules/fbjs/lib/hyphenateStyleName.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","91f343238d339a21b91ac3d4f1d804783ecfdecb","0a86d088c32cff01e690aa590a34a521e797529e","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^3H","~$module$node_modules$fbjs$lib$hyphenate"]]],["^1[","garden/selectors.cljc"],["ee5fc50fad089581dd0cf1fd0f16e4ec745a57dd","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S","^10"]]],["^1[","predict_prostate/state/run_time.cljs"],["c0a2c9f689f0bf2fda698a6fd09c08ad2b5b93c5","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S","^R","^10","^?","^4X","^13"]]],["^1[","cljs/core/async/impl/timers.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S","^3L","^3O","^3R"]]],["^1[","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W"]]],["^1[","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",[]]],["^1[","garden/util.cljc"],["ee5fc50fad089581dd0cf1fd0f16e4ec745a57dd","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S","^10","^48","^3N","~$goog.string.format"]]],["^1[","garden/compression.cljc"],["ee5fc50fad089581dd0cf1fd0f16e4ec745a57dd","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S"]]],["^1[","predict_prostate/results/curves.cljs"],["ca681fcd83e077b25ff51bf46b09d2eb6896dc03","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S","^10","^R","^O","^12","^Y","^Z","^13","^Q","^F","^11","^P","^X","^V"]]],["^1[","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^3T","^V"]]],["^1[","cljs/tools/reader/impl/errors.cljs"],["d87b8bf9f6ce87b207d5ac625236d72923b7d71f","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S","^4:","^10","~$cljs.tools.reader.impl.inspect"]]],["^1[","cljsjs/react.cljs"],["9ba9f8ed128a3c607c8b81217a06b6098d2484d1","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S","^4G"]]],["^1[","clojure/string.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S","^3N","^4>"]]],["^3C","node_modules/fbjs/lib/ExecutionEnvironment.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","91f343238d339a21b91ac3d4f1d804783ecfdecb","88d12f37919ab3c91fe9da149e81bcd703732e99","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^3H"]]],["^3C","node_modules/fbjs/lib/EventListener.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","91f343238d339a21b91ac3d4f1d804783ecfdecb","929b4741446144eeb8b06be35455b16cc1f1c6bf","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^3H","^4J"]]],["^3C","node_modules/react/cjs/react.production.min.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","91f343238d339a21b91ac3d4f1d804783ecfdecb","d7ebe7efb96e1f7682bbd47d28597fc08f35e916","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^3H","^4I","^4P","^4J"]]],["^1[","graphics/simple_icons.cljs"],["9a6bcd29ff29c0904a7e56633f12f2ee4fee897b","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S","^R"]]],["^1[","goog/debug/entrypointregistry.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^3U"]]],["^1[","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^5B","^58","^3[","^3V"]]],["^1[","predict_prostate/state/config.cljs"],["04583f9ab6d86ac329542fc43254eb74703a84b5","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S","^R","^12","^13"]]],["^1[","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W"]]],["^1[","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^3V"]]],["^1[","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W"]]],["^1[","goog/math/coordinate.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^4@"]]],["^1[","cljs/tools/reader/reader_types.cljs"],["d87b8bf9f6ce87b207d5ac625236d72923b7d71f","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S","^4;","^3N","^4>"]]],["^1[","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^3T","^3U","^54","^4@"]]],["^1[","rum/cursor.cljs"],["015cbe92b73dc956eb72b2a36c793bff2f7b8de2","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S"]]],["^1[","svg/mixins.cljs"],["2d2143c2f690134b3b426b5966864bbd55c11942","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S","^R"]]],["^1[","goog/async/nexttick.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","~$goog.debug.entryPointRegistry","^4[","^5;","^5B","^54","^55","^3X","^43","^44","^3["]]],["^1[","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^3U","^55","^56","^57","^5=","^52","^3X","^3[","^3V"]]],["^3C","node_modules/fbjs/lib/getActiveElement.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","91f343238d339a21b91ac3d4f1d804783ecfdecb","408ad0d86263ac7814e39c556f9f3f58bed1dc1d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^3H"]]],["^3C","node_modules/fbjs/lib/camelizeStyleName.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","91f343238d339a21b91ac3d4f1d804783ecfdecb","2114fb57ff19440d318cfa5f55eb7775bdeb93d8","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^3H","~$module$node_modules$fbjs$lib$camelize"]]],["^3C","node_modules/prop-types/lib/ReactPropTypesSecret.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","91f343238d339a21b91ac3d4f1d804783ecfdecb","4eec230c5b56ef580ea9c3e7ae6358ba1f8bdbec","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^3H"]]],["^1[","cljs/tools/reader/impl/commons.cljs"],["d87b8bf9f6ce87b207d5ac625236d72923b7d71f","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S","^49","^4:","^4;"]]],["^1[","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W"]]],["^1[","cljs/core.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","~$goog.math.Long","~$goog.math.Integer","^3N","^V","^3T","~$goog.Uri","^4>"]]],["^1[","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^3U","^4Y","^3[","^40"]]],["^1[","svg/space.cljs"],["5c28bf95c36d56ef0c3f80c41e8684a13d687cd3","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S","^R","^P"]]],["^1[","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^3T","^3U","^57","^V","^3[","^40","^3V"]]],["^1[","cljsjs/react/dom.cljs"],["9ba9f8ed128a3c607c8b81217a06b6098d2484d1","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S","^4G","~$module$node_modules$react_dom$index"]]],["^1[","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^46"]]],["^1[","goog/dom/browserfeature.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^5F"]]],["^3C","node_modules/react-dom/cjs/react-dom.development.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","91f343238d339a21b91ac3d4f1d804783ecfdecb","b8239c69123f87a3aba7a369b7f39a82caee905d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^3H","^4G","^4R","^4S","^4H","^4I","^4J","^4K","^4L","^4M","^4N","^4O","^4P","^4T","~$module$node_modules$fbjs$lib$hyphenateStyleName","~$module$node_modules$fbjs$lib$camelizeStyleName"]]],["^1[","clojure/set.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S"]]],["^1[","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^3T","^3U","^3N"]]],["^1[","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^3U","^40"]]],["^1[","cljs_css_modules/runtime.cljs"],["aa16088abf13627b6e847754432767ed39b3c8b2","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S","^4U"]]],["^1[","rum/core.cljs"],["015cbe92b73dc956eb72b2a36c793bff2f7b8de2","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S","~$cljsjs.react","~$cljsjs.react.dom","^V","~$sablono.core","~$rum.cursor","~$rum.util","~$rum.derived-atom"]]],["^1[","garden/compiler.cljc"],["ee5fc50fad089581dd0cf1fd0f16e4ec745a57dd","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S","^10","^4D","~$garden.compression","~$garden.selectors","~$garden.units","^42","^48"]]],["^3C","node_modules/fbjs/lib/isTextNode.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","91f343238d339a21b91ac3d4f1d804783ecfdecb","aec42d2e5aab9884f2d320ee591c0cea8597aec0","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^3H","~$module$node_modules$fbjs$lib$isNode"]]],["^3C","node_modules/fbjs/lib/focusNode.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","91f343238d339a21b91ac3d4f1d804783ecfdecb","115c8d920f07283651332c0f53a28dfed90bfe7e","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^3H"]]],["^3C","node_modules/fbjs/lib/invariant.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","91f343238d339a21b91ac3d4f1d804783ecfdecb","81766ad77bd9ea6a67c23a47aadd9acd4fe8d105","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^3H"]]],["^1[","sablono/util.cljc"],["5bb2734298a88a75afaebe4dea010ffea229cd2c","^3D",["^ ","^3E",null,"^3F",["^H",[]],"^3G",["^W","^S","^5V","^4X","^10"]]]]],"~:clj-info",["^ ","jar:file:/Users/mehdi/.m2/repository/org/omcljs/om/1.0.0-alpha48/om-1.0.0-alpha48.jar!/om/checksums.clj",1635148719000,"jar:file:/Users/mehdi/.m2/repository/cljs-css-modules/cljs-css-modules/0.2.1/cljs-css-modules-0.2.1.jar!/cljs_css_modules/macro.cljc",1633636902000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/cljs/tools/reader/reader_types.clj",1634894917000,"jar:file:/Users/mehdi/.m2/repository/garden/garden/1.3.2/garden-1.3.2.jar!/garden/types.cljc",1633636901000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/cljs/core/async/macros.clj",1634894917000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1634893165000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/reader_types.clj",1634894917000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/concurrent.clj",1634894917000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/externs.clj",1634894918000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/analyzer.cljc",1634894918000,"jar:file:/Users/mehdi/.m2/repository/garden/garden/1.3.2/garden-1.3.2.jar!/garden/color.cljc",1633636901000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/core.cljc",1634894918000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/env.cljc",1634894918000,"jar:file:/Users/mehdi/.m2/repository/org/omcljs/om/1.0.0-alpha48/om-1.0.0-alpha48.jar!/om/dom.cljc",1635148719000,"jar:file:/Users/mehdi/.m2/repository/sablono/sablono/0.8.1/sablono-0.8.1.jar!/sablono/normalize.cljc",1635148718000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/compiler.cljc",1634894918000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/js_deps.cljc",1634894918000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1634893165000,"jar:file:/Users/mehdi/.m2/repository/rum/rum/0.11.3/rum-0.11.3.jar!/rum/derived_atom.cljc",1635148718000,"jar:file:/Users/mehdi/.m2/repository/binaryage/devtools/1.0.3/devtools-1.0.3.jar!/devtools/defaults.clj",1633351665000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/cljs/core/async.clj",1634894917000,"jar:file:/Users/mehdi/.m2/repository/garden/garden/1.3.2/garden-1.3.2.jar!/garden/compiler.cljc",1633636901000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/pprint.cljc",1634894918000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1634893165000,"jar:file:/Users/mehdi/.m2/repository/garden/garden/1.3.2/garden-1.3.2.jar!/garden/units.cljc",1633636901000,"jar:file:/Users/mehdi/.m2/repository/sablono/sablono/0.8.1/sablono-0.8.1.jar!/sablono/compiler.clj",1635148718000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/tagged_literals.cljc",1634894918000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64.clj",1634894918000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/cljs/core/async/impl/ioc_macros.clj",1634894917000,"jar:file:/Users/mehdi/.m2/repository/org/omcljs/om/1.0.0-alpha48/om-1.0.0-alpha48.jar!/om/next/protocols.cljc",1635148719000,"jar:file:/Users/mehdi/.m2/repository/garden/garden/1.3.2/garden-1.3.2.jar!/garden/compression.cljc",1633636901000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/data.json/1.0.0/data.json-1.0.0.jar!/clojure/data/json.clj",1634894917000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1634893165000,"jar:file:/Users/mehdi/.m2/repository/rum/rum/0.11.3/rum-0.11.3.jar!/rum/util.cljc",1635148718000,"jar:file:/Users/mehdi/.m2/repository/garden/garden/1.3.2/garden-1.3.2.jar!/garden/util.cljc",1633636901000,"jar:file:/Users/mehdi/.m2/repository/sablono/sablono/0.8.1/sablono-0.8.1.jar!/sablono/util.cljc",1635148718000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1634893165000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1634893165000,"jar:file:/Users/mehdi/.m2/repository/rum/rum/0.11.3/rum-0.11.3.jar!/rum/core.clj",1635148718000,"jar:file:/Users/mehdi/.m2/repository/garden/garden/1.3.2/garden-1.3.2.jar!/garden/selectors.cljc",1633636901000,"jar:file:/Users/mehdi/.m2/repository/sablono/sablono/0.8.1/sablono-0.8.1.jar!/sablono/interpreter.cljc",1635148718000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/inspect.clj",1634894917000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader.clj",1634894917000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/dispatch.clj",1634894917000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map.clj",1634894918000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/walk.clj",1634893165000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1634893165000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/protocols.clj",1634894917000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/exec/threadpool.clj",1634894917000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/reader.clj",1634894918000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core/reducers.clj",1634893165000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/default_data_readers.clj",1634894917000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/util.cljc",1634894918000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/errors.clj",1634894917000,"jar:file:/Users/mehdi/.m2/repository/rum/rum/0.11.3/rum-0.11.3.jar!/rum/server_render.clj",1635148718000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64_vlq.clj",1634894918000,"jar:file:/Users/mehdi/.m2/repository/rum/rum/0.11.3/rum-0.11.3.jar!/rum/cursor.clj",1635148718000,"jar:file:/Users/mehdi/.m2/repository/sablono/sablono/0.8.1/sablono-0.8.1.jar!/sablono/core.clj",1635148718000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","predict_prostate/results/curves.cljs","^7",1,"^8",5,"^9",1,"^:",36],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"^D",["^ ","^E","^F"],"^G",["^H",[]],"~:shadow/js-access-properties",["^H",["createElement"]],"^I","^J","^M",null,"^N",["^ ","^O","^O","^P","^P","^Q","^Q","^R","^R","^S","^S","^T","^R","^U","^V","^W","^W","^V","^V","^X","^X","^Y","^Y","^Z","^Z","^F","^F","^[","^10","^11","^11","^12","^12","^10","^10","^13","^13"],"^14",["^H",["^15"]],"~:shadow/js-access-global",["^H",["React","Error"]],"^16",["^ ","^17","^P","^18","^Y","^19","^O","~$N","^12","^1:","^13","^1;","^P","^1<","^11","^1=","^11","^1>","^P","^1?","^Z","^1@","^Q","^1A","^X","^1B","^O","^1C","^12","^1D","^P","^1E","^V","^1F","^O","^1G","^11","^1H","^12","^1I","^P","^1J","^12","^1K","^11","^1L","^O","^1M","^P","^1N","^P","^1O","^P"],"~:defs",["^ ","~$legend2",["^ ","^5",["^ ","^6","predict_prostate/results/curves.cljs","^7",271,"^8",11,"^9",271,"^:",18,"~:arglists",["^1R",["~$quote",["^1R",[["~$plot-style","~$radical?"]]]]]],"^I","^32","^6","predict_prostate/results/curves.cljs","^:",18,"^8",1,"^7",271,"^9",271,"~:tag",["^H",["~$clj","~$cljs.core/MetaFn","~$clj-nil"]],"^7L",["^1R",["^7M",["^1R",[["^7N","^7O"]]]]]],"~$curves-container",["^ ","^5",["^ ","^6","predict_prostate/results/curves.cljs","^7",110,"^8",11,"^9",110,"^:",27,"^7L",["^1R",["^7M",["^1R",[[["^ ","~:keys",["~$outer","~$margin","~$inner","~$padding","~$width","~$height","~$x","~$y"]],"^7N","~$data","^7O"]]]]]],"^I","^2L","^6","predict_prostate/results/curves.cljs","^:",27,"^8",1,"^7",110,"^9",110,"^7P",["^H",["^7Q","^7R","^7S"]],"^7L",["^1R",["^7M",["^1R",[[["^ ","^7U",["^7V","^7W","^7X","^7Y","^7Z","^7[","~$x","~$y"]],"^7N","^80","^7O"]]]]]],"~$curves",["^ ","^5",["^ ","^6","predict_prostate/results/curves.cljs","^7",207,"^8",11,"^9",207,"^:",17,"^7L",["^1R",["^7M",["^1R",[["^80"]]]]]],"^I","^2Z","^6","predict_prostate/results/curves.cljs","^:",17,"^8",1,"^7",207,"^9",207,"^7P",["^H",["^7Q","^7R","^7S"]],"^7L",["^1R",["^7M",["^1R",[["^80"]]]]]],"~$area-plot",["^ ","^5",["^ ","^6","predict_prostate/results/curves.cljs","^7",51,"^8",11,"^9",51,"^:",20,"^7L",["^1R",["^7M",["^1R",[["~$scale","~$point-series","~$area-style"],[["^ ","^7U",["~$X","~$Y"]],"^84","^85","~$base"]]]]]],"^I","^2O","^6","predict_prostate/results/curves.cljs","^:",20,"^8",1,"^7",51,"^9",51,"^7P",["^H",["^7Q","^7R","^7S"]],"^7L",["^1R",["^7M",["^1R",[["^83","^84","^85"],[["^ ","^7U",["~$X","~$Y"]],"^84","^85","^86"]]]]],"~:doc","scale contains the x-axis and y-axis scale functions.\n  Point series should look something like this:\n  [[0 100]  [1 98.89556593176486]  ... [9 64.83779488900586]  [10 60.8297996952587]]\n  Baseline is the "],"~$results-in-curves",["^ ","^5",["^ ","^6","predict_prostate/results/curves.cljs","^7",321,"^8",12,"^9",321,"^:",29,"^7L",["^1R",["^7M",["^1R",[[["^ ","^7U",["~$printable"]]]]]]]],"^I","^2J","^6","predict_prostate/results/curves.cljs","^:",29,"^8",1,"^7",321,"^9",321,"^7P",["^H",["^7Q","^7R","^7S"]],"^7L",["^1R",["^7M",["^1R",[[["^ ","^7U",["^89"]]]]]]]],"~$plot",["^ ","^5",["^ ","^6","predict_prostate/results/curves.cljs","^7",67,"^8",11,"^9",67,"^:",15,"^7L",["^1R",["^7M",["^1R",[[["^ ","^7U",["~$X","~$Y"],"^1T","^83"],"^7N","^80","^7O"]]]]]],"^I","^39","^6","predict_prostate/results/curves.cljs","^:",15,"^8",1,"^7",67,"^9",67,"^7P",["^H",["^7Q","^7R","^7S"]],"^7L",["^1R",["^7M",["^1R",[[["^ ","^7U",["~$X","~$Y"],"^1T","^83"],"^7N","^80","^7O"]]]]]],"~$legend-item",["^ ","^5",["^ ","^6","predict_prostate/results/curves.cljs","^7",224,"^8",11,"^9",224,"^:",22,"^7L",["^1R",["^7M",["^1R",[[["^ ","^7U",["~$label","~$extra-style","~$icon"]]]]]]]],"^I","^3?","^6","predict_prostate/results/curves.cljs","^:",22,"^8",1,"^7",224,"^9",224,"^7P",["^H",["^7Q","^7R","^7S"]],"^7L",["^1R",["^7M",["^1R",[[["^ ","^7U",["^8<","^8=","^8>"]]]]]]]],"~$as-point-series",["^ ","~:protocol-inline",null,"^5",["^ ","^6","predict_prostate/results/curves.cljs","^7",37,"^8",7,"^9",37,"^:",22,"^7L",["^1R",["^7M",["^1R",[["~$plot-layers"]]]]]],"^I","^2?","^6","predict_prostate/results/curves.cljs","^:",22,"~:method-params",["^1R",[["^8A"]]],"~:protocol-impl",null,"~:arglists-meta",["^1R",[null,null]],"^8",1,"~:variadic?",false,"^7",37,"~:ret-tag",["^H",[null,"^7Q","~$any"]],"^9",37,"~:max-fixed-arity",1,"~:fn-var",true,"^7L",["^1R",["^7M",["^1R",[["^8A"]]]]]],"~$legend",["^ ","^5",["^ ","^6","predict_prostate/results/curves.cljs","^7",241,"^8",11,"^9",241,"^:",17,"^7L",["^1R",["^7M",["^1R",[["^80"]]]]]],"^I","^2A","^6","predict_prostate/results/curves.cljs","^:",17,"^8",1,"^7",241,"^9",241,"^7P",["^H",["^7Q","^7R","^7S"]],"^7L",["^1R",["^7M",["^1R",[["^80"]]]]]],"~$extract-data",["^ ","^8@",null,"^5",["^ ","^6","predict_prostate/results/curves.cljs","^7",304,"^8",7,"^9",304,"^:",19,"^7L",["^1R",["^7M",["^1R",[["~$results","^7O"]]]]]],"^I","^2Q","^6","predict_prostate/results/curves.cljs","^:",19,"^8B",["^1R",[["^8L","^7O"]]],"^8C",null,"^8D",["^1R",[null,null]],"^8",1,"^8E",false,"^7",304,"^8F","~$cljs.core/IVector","^9",304,"^8H",2,"^8I",true,"^7L",["^1R",["^7M",["^1R",[["^8L","^7O"]]]]]],"~$benefit",["^ ","^8@",null,"^5",["^ ","^6","predict_prostate/results/curves.cljs","^7",219,"^8",7,"^9",219,"^:",14,"^7L",["^1R",["^7M",["^1R",[["^80","~$tk"]]]]]],"^I","^2C","^6","predict_prostate/results/curves.cljs","^:",14,"^8B",["^1R",[["^80","^8O"]]],"^8C",null,"^8D",["^1R",[null,null]],"^8",1,"^8E",false,"^7",219,"^8F","^8G","^9",219,"^8H",2,"^8I",true,"^7L",["^1R",["^7M",["^1R",[["^80","^8O"]]]]]],"~$some-benefit?",["^ ","^8@",null,"^5",["^ ","^6","predict_prostate/results/curves.cljs","^7",222,"^8",7,"^9",222,"^:",20,"^7L",["^1R",["^7M",["^1R",[["^80","~$treatment-key"]]]]]],"^I","^2G","^6","predict_prostate/results/curves.cljs","^:",20,"^8B",["^1R",[["^80","^8Q"]]],"^8C",null,"^8D",["^1R",[null,null]],"^8",1,"^8E",false,"^7",222,"^8F","~$boolean","^9",222,"^8H",2,"^8I",true,"^7L",["^1R",["^7M",["^1R",[["^80","^8Q"]]]]]],"~$styles",["^ ","^I","^2P","^6","predict_prostate/results/curves.cljs","^7",20,"^8",1,"^9",20,"^:",17,"^5",["^ ","^6","predict_prostate/results/curves.cljs","^7",20,"^8",11,"^9",20,"^:",17],"^7P","~$cljs.core/IMap"],"~$line-plot",["^ ","^5",["^ ","^6","predict_prostate/results/curves.cljs","^7",42,"^8",11,"^9",42,"^:",20,"^7L",["^1R",["^7M",["^1R",[[["^ ","^7U",["~$X","~$Y"],"^1T","^83"],"^84","~$line-style"]]]]]],"^I","^2H","^6","predict_prostate/results/curves.cljs","^:",20,"^8",1,"^7",42,"^9",42,"^7P",["^H",["^7Q","^7R","^7S"]],"^7L",["^1R",["^7M",["^1R",[[["^ ","^7U",["~$X","~$Y"],"^1T","^83"],"^84","^8V"]]]]]]],"^1P",["^ ","^F","^F","^S","^S","^R","^R","^T","^R"],"~:cljs.analyzer/constants",["^ ","^14",["^H",["~:y","~:stroke-dasharray","~:arrow","~:area1","~:stroke","~:printable","~:NPC-survival","~:text-align","~:vertical-align","~:radical","~:key","~:radical-above","~:bottom","~:conservative","~:format-specifier","~:font-size","~:pred-NPC-cum","~:scale","~:top","~:stroke-opacity","~:fill","~:y1","~:margin-top","~:width","~:pred-PC-cum","~:points","~:predict-prostate.results.curves/data","~:icon","~:plot-style","~:div","~:g","~:inner","~:line2","^7","~:stroke-width","~:strokeWidth","~:Y","~:label","~:padding","~:strokeDasharray","~:right","~:ticks","~:display","~:primary-rx","~:X","~:x","~:x1","~:y2","~:border-top","~:strokeLinecap","~:outer","~:p","~:x2","~:annotation","~:height","~:polygon","~:left","~:extra-style","~:text","~:margin"]],"~:order",["^9X","^9I","^9Z","^8Y","^9?","^8[","^9>","^9K","^8X","^9:","~:X","~:Y","^9D","~:g","^:0","^8Z","^9O","^9L","^9W","^9J","^96","^94","^:3","^:4","^9N","^9B","^9[","~:x","~:y","^:1","^9P","^9=","^97","^9<","^9Q","^99","^7","^95","^9@","^9T","^9U","^9Y","^9G","^9S","^9E","^9M","^:2","^9F","^9R","^93","^92","~:p","^9V","^9A","^9H","^9C","^9;","^98","^91","^90"]],"^1W",["^ ","^15",["^H",[]]],"^1X",["^ "],"^1Y",["^W","^S","^10","^R","^O","^12","^Y","^Z","^13","^Q","^F","^11","^P","^X","^V"]],"^L","^J","~:ns-specs",["^ "],"~:ns-spec-vars",["^H",[]],"~:compiler-options",["^3B",[["^:8","~:static-fns"],true,["^:8","~:shadow-tweaks"],null,["^:8","~:source-map-inline"],null,["^:8","~:elide-asserts"],false,["^:8","~:optimize-constants"],null,["^:8","^22"],null,["^:8","~:external-config"],null,["^:8","~:tooling-config"],null,["^:8","~:emit-constants"],null,["^:8","~:load-tests"],null,["^:8","~:form-size-threshold"],null,["^:8","~:data-readers"],null,["^:8","~:infer-externs"],"~:auto",["^:8","^24"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^:8","~:fn-invoke-direct"],null,["^:8","~:source-map"],"/dev/null"]]]