["^ ","~:output",["^ ","~:js","goog.provide('predict_prostate.models.adapters.predict');\npredict_prostate.models.adapters.predict.in_range = (function predict_prostate$models$adapters$predict$in_range(s){\nvar vec__43450 = clojure.string.split.cljs$core$IFn$_invoke$arity$2(s,/:/);\nvar good = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43450,(0),null);\nvar bad = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43450,(1),null);\nreturn parseFloat(good);\n});\n/**\n * Run the prostate model, mapping input factors to numeric model parameters.\n *   Arity 1 defaults to 10 year prediction using the 10 year model.\n *   Arity 2 allows you to say how many but uses the 15 year model if n > 10\n */\npredict_prostate.models.adapters.predict.predict_prostate = (function predict_prostate$models$adapters$predict$predict_prostate(var_args){\nvar G__43457 = arguments.length;\nswitch (G__43457) {\ncase 2:\nreturn predict_prostate.models.adapters.predict.predict_prostate.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 1:\nreturn predict_prostate.models.adapters.predict.predict_prostate.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(predict_prostate.models.adapters.predict.predict_prostate.cljs$core$IFn$_invoke$arity$2 = (function (input_map,n){\nreturn predict_prostate.models.prostate_release.run_prostate(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.update.cljs$core$IFn$_invoke$arity$3(cljs.core.update.cljs$core$IFn$_invoke$arity$3(cljs.core.update.cljs$core$IFn$_invoke$arity$3(cljs.core.update.cljs$core$IFn$_invoke$arity$3(input_map,new cljs.core.Keyword(null,\"age\",\"age\",-604307804),cljs.reader.read_string),new cljs.core.Keyword(null,\"n\",\"n\",562130025),cljs.core.constantly(n)),new cljs.core.Keyword(null,\"psa\",\"psa\",-321761459),cljs.reader.read_string),new cljs.core.Keyword(null,\"t-stage\",\"t-stage\",-1315750984),cljs.core.identity),new cljs.core.Keyword(null,\"protect\",\"protect\",-67966332),(0)));\n}));\n\n(predict_prostate.models.adapters.predict.predict_prostate.cljs$core$IFn$_invoke$arity$1 = (function (input_map){\nreturn predict_prostate.models.adapters.predict.predict_prostate.cljs$core$IFn$_invoke$arity$2(input_map,(10));\n}));\n\n(predict_prostate.models.adapters.predict.predict_prostate.cljs$lang$maxFixedArity = 2);\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","predict_prostate/models/adapters/predict.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",45],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$predict-prostate.models.adapters.predict","~:reader-aliases",["^ "],"~:op","~:ns","~:imports",null,"~:requires",["^ ","~$predict-prostate.models.prostate-release","^L","~$mdl","^L","~$clojure.string","^N","~$cljs.reader","^O","~$goog.object","^P","~$cljs.core","^Q","~$goog","^R"],"~:seen",["^D",["~:require"]],"~:uses",["^ ","~$starts-with?","^N","~$split","^N","~$read-string","^O","~$getValueByKeys","^P"],"~:require-macros",["^ ","^Q","^Q","^O","^O"],"~:form",["~#list",["~$ns","^F",["^10",["^T",["^L","~:as","^M"],["^N","~:refer",["^V","^W"]],["^O","^13",["^X"]],["^P","^13",["^Y"]]]]]],"~:flags",["^ ","^T",["^D",[]]],"~:js-deps",["^ "],"~:deps",["^R","^Q","^L","^N","^O","^P"]],"^I","^F","~:resource-id",["~:shadow.build.classpath/resource","predict_prostate/models/adapters/predict.cljs"],"~:compiled-at",1648475980684,"^G",["^ ","^L","^L","^M","^L","^N","^N","^O","^O","^P","^P","^Q","^Q","^R","^R"],"~:resource-name","predict_prostate/models/adapters/predict.cljs","~:warnings",[],"~:source","(ns predict-prostate.models.adapters.predict\n  (:require\n    [predict-prostate.models.prostate-release :as mdl]\n    [clojure.string :refer [starts-with? split]]\n    [cljs.reader :refer [read-string]]\n    [goog.object :refer [getValueByKeys]]\n    ))\n\n\n#_(comment                                                  ;prostate15\n    (defn predict-prostate\n      \"Run the prostate model, mapping input factors to numeric model parameters.\n      Arity 1 defaults to 10 year prediction using the 10 year model.\n      Arity 2 allows you to say how many but uses the 15 year model if n > 10\"\n      ([input-map n]\n       (-> input-map\n           (update :age read-string)\n           (update :n (constantly n))\n           (update :psa read-string)\n           (update :t-stage identity)\n           ;(update :grade-group identity)\n           ;(update :charlson-comorbidity identity)\n           (update :biopsy50 #(if (= :unknown %) 0 %))\n           (assoc :protect 0)\n           (mdl/run-prostate)))\n      ([input-map]\n       (predict-prostate input-map 10))))\n\n(defn in-range [s]\n  (let [[good bad] (split s #\":\")]\n    (js/parseFloat good))\n  )\n\n(defn predict-prostate\n  \"Run the prostate model, mapping input factors to numeric model parameters.\n  Arity 1 defaults to 10 year prediction using the 10 year model.\n  Arity 2 allows you to say how many but uses the 15 year model if n > 10\"\n  ([input-map n]\n   (-> input-map\n       (update :age read-string)\n       (update :n (constantly n))\n       (update :psa read-string)\n       (update :t-stage identity)\n       ;(update :grade-group identity)\n       ;(update :charlson-comorbidity identity)\n       #_(update :biopsy50 #(if (= :unknown %) 0 %))\n       (assoc :protect 0)\n       (mdl/run-prostate)))\n  ([input-map]\n   (predict-prostate input-map 10)))\n\n;; (comment\n\n;;   (def results\n;;     {:conservative\n;;      {:pred-PC-cum  '(0 0.00209439167481409 0.0068631030425986275 0.013751329202967382 0.022479232057763355 0.032849141591410363 0.04470083770029029 0.057894651946130055 0.07230334252302753 0.08780755798557525 0.10429297055204881),\n;;       :pred-NPC-cum '(0 0.0002182447271967578 0.000544287475592099 0.0009307275902806942 0.0013662580043685233 0.0018484505910423502 0.002380109932274687 0.002968343202003146 0.0036245266082841282 0.004364779246955558 0.005210877168111608),\n;;       :NPC-survival '(1 0.9997817121199226 0.9994554593459529 0.9990685368375318 0.9986321524197489 0.9981486208199123 0.9976149894821492 0.9970239420761796 0.9963637933269195 0.9956179553493606 0.9947639276902916)},\n;;      :radical-low\n;;      {:pred-PC-cum  '(0 0.0007335583499764896 0.002407602686350095 0.004835063469570774 0.007926895894052616 0.011624081339670616 0.01588165160115533 0.02066252974225701 0.0259344864220196 0.031668383409725595 0.03783702781932995),\n;;       :pred-NPC-cum '(0 0.00021825115659365523 0.000544316212833242 0.000930799814108788 0.0013664002731486977 0.0018486971474197707 0.0023805071975003395 0.0029689574762498195 0.0036254571263068746 0.004366180648653087 0.005212998991071756),\n;;       :NPC-survival '(1 0.9997817121199226 0.9994554593459529 0.9990685368375318 0.9986321524197489 0.9981486208199123 0.9976149894821492 0.9970239420761796 0.9963637933269195 0.9956179553493606 0.9947639276902916)},\n;;      :radical\n;;      {:pred-PC-cum  '(0 0.0010121556874419695 0.0033208892722127277 0.006666009669913535 0.010922079710044877 0.01600471235091617 0.021848603059883027 0.028399086041023668 0.03560797615060335 0.04343117663580254 0.0518271193008505),\n;;       :pred-NPC-cum '(0 0.00021824868254736567 0.000544304911834677 0.0009307712038230736 0.0013663438408784236 0.0018485995864232431 0.002380350841826511 0.0029687176069217803 0.003625097434017231 0.004365645501480441 0.005212199988904085),\n;;       :NPC-survival '(1 0.9997817121199226 0.9994554593459529 0.9990685368375318 0.9986321524197489 0.9981486208199123 0.9976149894821492 0.9970239420761796 0.9963637933269195 0.9956179553493606 0.9947639276902916)},\n;;      :radical-high\n;;      {:pred-PC-cum  '(0 0.0014037401627852591 0.004603579602983735 0.00923466300292725 0.015118065289657147 0.02213108709725974 0.03017695312299632 0.03917322657966766 0.049046144092173935 0.05972738307190151 0.07115196920296826),\n;;       :pred-NPC-cum '(0 0.00021824664197662888 0.0005442958283880051 0.0009307484328346354 0.0013662990801877593 0.0018485221694604212 0.002380226355133872 0.002968525522271607 0.0036248070970956343 0.004365209233051064 0.005211540965589994),\n;;       :NPC-survival '(1 0.9997817121199226 0.9994554593459529 0.9990685368375318 0.9986321524197489 0.9981486208199123 0.9976149894821492 0.9970239420761796 0.9963637933269195 0.9956179553493606 0.9947639276902916)}})\n\n;;   (defn extract-data [results]\n;;     (let [years (range 0 11)\n;;           one-sum #(- 1 (+ %1 %2))\n;;           radical-low-survival (map one-sum\n;;                                     (get-in results [:radical-low :pred-PC-cum])\n;;                                     (get-in results [:radical-low :pred-NPC-cum]) years)\n;;           radical-survival (map one-sum\n;;                                 (get-in results [:radical :pred-PC-cum])\n;;                                 (get-in results [:radical :pred-NPC-cum]) years)\n;;           radical-high-survival (map one-sum\n;;                                      (get-in results [:radical-high :pred-PC-cum])\n;;                                      (get-in results [:radical-high :pred-NPC-cum]) years)\n;;           conservative-survival (map one-sum\n;;                                      (get-in results [:conservative :pred-PC-cum])\n;;                                      (get-in results [:conservative :pred-NPC-cum]) years)]\n;;       {:dotted-orange         (get-in results [:conservative :NPC-survival])\n;;        :conservative-survival conservative-survival\n;;        :radical-survival      radical-survival\n;;        :radical-benefit       (map - radical-survival conservative-survival)\n;;        :radical-benefit-low   (map - radical-low-survival conservative-survival)\n;;        :radical-benefit-high  (map - radical-high-survival conservative-survival)\n;;        }))\n\n;;   (extract-data results)\n;;   )\n","~:reader-features",["^D",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings",";AA4BA,oDAAA,pDAAMA,gHAAUC;AAAhB,AACE,IAAAC,aAAiB,qDAAA,rDAACI,mDAAML;WAAxB,AAAAE,4CAAAD,WAAA,IAAA,lEAAOE;UAAP,AAAAD,4CAAAD,WAAA,IAAA,jEAAYG;AAAZ,AACE,OAACE,WAAcH;;AAGnB,AAAA;;;;;4DAAA,oEAAAI,hIAAME;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,wFAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,wFAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAC,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,0FAAA,1FAAMD,qGAIFE,UAAUC;AAJd,uSAKOD,/CACA,yDAAA,zDAACE,4GAAYC,3JACb,oLAAA,pLAACD,kOAAU,AAACE,qBAAWH,tSACvB,0SAAA,1SAACC,6VAAYC,5YACb,qaAAA,raAACD,ieAAgBG,/gBAIjB,miBAAA,0DAAA,7lBAACC,7DACD,OAACC;;;AAdR,CAAA,0FAAA,1FAAMT,qGAeFE;AAfJ,AAgBG,yGAAA,lGAACQ,wFAAiBR;;;AAhBrB,CAAA,oFAAA,pFAAMF;;AAAN","names",["predict-prostate.models.adapters.predict/in-range","s","vec__43450","cljs.core.nth","good","bad","clojure.string.split","js/parseFloat","var_args","G__43457","predict-prostate.models.adapters.predict/predict-prostate","js/Error","input-map","n","cljs.core.update","cljs.reader/read-string","cljs.core/constantly","cljs.core/identity","cljs.core.assoc","predict-prostate.models.prostate-release/run-prostate","predict_prostate.models.adapters.predict.predict_prostate"]],"~:used-vars",["^D",["~$clojure.string/split","~$cljs.core/identity","~$cljs.core/update","~$predict-prostate.models.prostate-release/run-prostate","~$cljs.core/constantly","~$cljs.core/nth","~$predict-prostate.models.adapters.predict/predict-prostate","~$js/parseFloat","~$cljs.core/assoc","~$cljs.reader/read-string","~$predict-prostate.models.adapters.predict/in-range","~$js/Error"]]],"~:cache-keys",["~#cmap",[["^18","goog/dom/tagname.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^D",[]],"~:deps-syms",["^R","~$goog.dom.HtmlElement"]]],["^18","cljs/tools/reader/impl/utils.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R","^Q","^N","~$goog.string"]]],["^18","goog/math/math.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R","~$goog.array","~$goog.asserts"]]],["^18","goog/html/trustedtypes.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R"]]],["^18","goog/labs/useragent/browser.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R","^1X","~$goog.labs.userAgent.util","^P","~$goog.string.internal"]]],["^18","goog/html/safeurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R","^1Y","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^1["]]],["^18","common/utils.cljs"],["11bf38210ca45253e8d82ee36df08e8d79f363a7","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R","^Q"]]],["^18","goog/array/array.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R","^1Y"]]],["^18","goog/debug/error.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R"]]],["^18","predict_prostate/models/adapters/predict.cljs"],["7aebfc6aecedb3e8691ba5ac2ec76613c3977718","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R","^Q","^L","^N","^O","^P"]]],["^18","cljs/tools/reader/edn.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R","^Q","~$cljs.tools.reader.impl.errors","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^1W","~$goog.string.StringBuffer"]]],["^18","goog/dom/nodetype.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R"]]],["^18","cljs/tools/reader/impl/inspect.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R","^Q"]]],["^18","cljs/tools/reader.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R","^Q","^27","^28","^29","^26","^1X","^1W","^2;"]]],["^18","goog/string/typedstring.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R"]]],["^18","goog/object/object.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R"]]],["^18","goog/dom/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R","^1Y"]]],"~:SHADOW-TIMESTAMP",[1647940543000,1647940543000,1633031471000],["^18","goog/math/long.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R","^1Y","~$goog.reflect"]]],["^18","goog/html/trustedresourceurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R","^1Y","~$goog.fs.blob","^20","~$goog.html.SafeScript","~$goog.html.trustedtypes","^22","^23","^24","^25"]]],["^18","goog/string/internal.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R"]]],["^18","goog/functions/functions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R"]]],["^18","goog/html/safestyle.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R","^1X","^1Y","~$goog.html.SafeUrl","^24","^25","^1["]]],["^18","goog/dom/safe.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R","^1Y","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^2?","~$goog.html.SafeStyle","^2A","^21","~$goog.html.uncheckedconversions","^24","^1["]]],["^18","goog/structs/map.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^18","goog/html/safehtml.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R","^1X","^1Y","~$goog.dom.TagName","~$goog.dom.tags","^2?","^2E","~$goog.html.SafeStyleSheet","^2A","^21","^2@","^22","^23","~$goog.labs.userAgent.browser","^P","^24","^25","^1["]]],["^18","goog/dom/tags.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R","^P"]]],["^18","goog/fs/blob.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R","^1X"]]],["^18","cljs/reader.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R","^Q","^P","^2:","~$cljs.tools.reader.edn","^2;"]]],["^18","goog/asserts/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^18","goog/uri/uri.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R","^1X","^1Y","^1W","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^18","goog/i18n/bidi.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R"]]],["^18","predict_prostate/models/prostate_release.cljs"],["a41e8a6ed61ada5549b2dfebc6fbfb8c1e429e9c","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R","^Q","~$common.data-frame","~$common.utils"]]],["^18","goog/fs/url.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R"]]],["^18","goog/base.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",[]]],["^18","goog/structs/structs.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R","^1X","^P"]]],["^18","cljs/tools/reader/impl/errors.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R","^Q","^27","^N","~$cljs.tools.reader.impl.inspect"]]],["^18","clojure/string.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R","^Q","^1W","^2;"]]],["^18","goog/string/string.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R","~$goog.dom.safe","^2F","^24","^1["]]],["^18","goog/reflect/reflect.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R"]]],["^18","goog/labs/useragent/util.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R","^1["]]],["^18","common/data_frame.cljs"],["5d3818dd44b99fe53158200df93b70522cbd1884","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R","^Q"]]],["^18","goog/string/stringbuffer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R"]]],["^18","cljs/tools/reader/reader_types.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R","^Q","^28","^1W","^2;"]]],["^18","goog/iter/iter.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R","^1X","^1Y","^2C","~$goog.math"]]],["^18","goog/html/uncheckedconversions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R","^1Y","^2D","^2?","^2E","^2K","^2A","^21","^24","^1[","^22"]]],["^18","cljs/tools/reader/impl/commons.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R","^Q","^26","^27","^28"]]],["^18","goog/dom/htmlelement.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R"]]],["^18","cljs/core.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R","~$goog.math.Long","~$goog.math.Integer","^1W","^P","^1X","~$goog.Uri","^2;"]]],["^18","goog/html/safescript.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R","^24","^25","^2@","^1Y"]]],["^18","goog/html/safestylesheet.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R","^24","^2E","^25","^1X","^P","^1Y","^1["]]],["^18","goog/math/integer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R","^2="]]],["^18","goog/uri/utils.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R","^1Y","^1W"]]],["^18","goog/string/const.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1R",["^ ","^1S",null,"^1T",["^D",[]],"^1U",["^R","^1Y","^25"]]]]],"~:clj-info",["^ ","jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/core.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/cljs/tools/reader/reader_types.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/env.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/js_deps.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/inspect.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/reader_types.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/passes.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/reader.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/default_data_readers.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/errors.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map/base64_vlq.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/passes/and_or.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1633011066000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/tagged_literals.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/instant.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1633011066000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/compiler.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/impl.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1633011066000,"jar:file:/Users/mehdi/.m2/repository/binaryage/devtools/1.0.4/devtools-1.0.4.jar!/devtools/defaults.clj",1648121537000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/util.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1633011066000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map/base64.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1633011066000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1633011066000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/data.json/2.4.0/data.json-2.4.0.jar!/clojure/data/json.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/externs.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1633011066000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","predict_prostate/models/adapters/predict.cljs","^7",1,"^8",5,"^9",1,"^:",45],"^;",["^ ","^<","^=","^>","^?","^@","^A"],"^B",null,"^C",["^D",[]],"^E","^F","^G",["^ "],"^J",null,"^K",["^ ","^L","^L","^M","^L","^N","^N","^O","^O","^P","^P","^Q","^Q","^R","^R"],"^S",["^D",["^T"]],"~:shadow/js-access-global",["^D",["parseFloat","Error"]],"^U",["^ ","^V","^N","^W","^N","^X","^O","^Y","^P"],"~:defs",["^ ","~$in-range",["^ ","~:protocol-inline",null,"^5",["^ ","^6","predict_prostate/models/adapters/predict.cljs","^7",29,"^8",7,"^9",29,"^:",15,"~:arglists",["^10",["~$quote",["^10",[["~$s"]]]]]],"^E","^1N","^6","predict_prostate/models/adapters/predict.cljs","^:",15,"~:method-params",["^10",[["~$s"]]],"~:protocol-impl",null,"~:arglists-meta",["^10",[null,null]],"^8",1,"~:variadic?",false,"^7",29,"~:ret-tag","~$js","^9",29,"~:max-fixed-arity",1,"~:fn-var",true,"^3V",["^10",["^3W",["^10",[["~$s"]]]]]],"~$predict-prostate",["^ ","^3U",null,"^5",["^ ","^6","predict_prostate/models/adapters/predict.cljs","^7",34,"^8",7,"^9",34,"^:",23,"^3V",["^10",["^3W",["^10",[["~$input-map","~$n"],["^45"]]]]],"~:doc","Run the prostate model, mapping input factors to numeric model parameters.\n  Arity 1 defaults to 10 year prediction using the 10 year model.\n  Arity 2 allows you to say how many but uses the 15 year model if n > 10","~:top-fn",["^ ","^3[",false,"~:fixed-arity",2,"^42",2,"^3X",[["^45","~$n"],["^45"]],"^3V",["^10",[["^45","~$n"],["^45"]]],"^3Z",["^10",[null,null]]]],"^E","^1J","^6","predict_prostate/models/adapters/predict.cljs","^:",23,"^47",["^ ","^3[",false,"^48",2,"^42",2,"^3X",[["^45","~$n"],["^45"]],"^3V",["^10",[["^45","~$n"],["^45"]]],"^3Z",["^10",[null,null]]],"^3X",[["^45","~$n"],["^45"]],"^3Y",null,"^48",2,"^3Z",["^10",[null,null]],"^8",1,"^3[",false,"~:methods",[["^ ","^48",2,"^3[",false,"~:tag","~$cljs.core/PersistentArrayMap"],["^ ","^48",1,"^3[",false,"^4:","^4;"]],"^7",34,"^9",34,"^42",2,"^43",true,"^3V",["^10",[["^45","~$n"],["^45"]]],"^46","Run the prostate model, mapping input factors to numeric model parameters.\n  Arity 1 defaults to 10 year prediction using the 10 year model.\n  Arity 2 allows you to say how many but uses the 15 year model if n > 10"]],"^Z",["^ ","^Q","^Q","^O","^O"],"~:cljs.analyzer/constants",["^ ","^S",["^D",["~:protect","~:age","~:n","~:psa","~:t-stage"]],"~:order",["^4>","~:n","^4?","^4@","^4="]],"^14",["^ ","^T",["^D",[]]],"^15",["^ "],"^16",["^R","^Q","^L","^N","^O","^P"]],"^I","^F","~:ns-specs",["^ "],"~:ns-spec-vars",["^D",[]],"~:compiler-options",["^1Q",[["^4D","~:static-fns"],true,["^4D","~:shadow-tweaks"],null,["^4D","~:source-map-inline"],null,["^4D","~:elide-asserts"],false,["^4D","~:optimize-constants"],null,["^4D","^1;"],null,["^4D","~:external-config"],null,["^4D","~:tooling-config"],null,["^4D","~:emit-constants"],null,["^4D","~:load-tests"],null,["^4D","~:form-size-threshold"],null,["^4D","~:data-readers"],null,["^4D","~:infer-externs"],"~:auto",["^4D","^1="],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^4D","~:fn-invoke-direct"],null,["^4D","~:source-map"],"/dev/null"]]]