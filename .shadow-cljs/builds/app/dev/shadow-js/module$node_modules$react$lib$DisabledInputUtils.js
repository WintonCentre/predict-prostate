["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react/lib/DisabledInputUtils.js"],"~:js","shadow$provide.module$node_modules$react$lib$DisabledInputUtils=function(global,require,module,exports){var disableableMouseListenerNames={onClick:!0,onDoubleClick:!0,onMouseDown:!0,onMouseMove:!0,onMouseUp:!0,onClickCapture:!0,onDoubleClickCapture:!0,onMouseDownCapture:!0,onMouseMoveCapture:!0,onMouseUpCapture:!0};module.exports={getHostProps:function(inst,props){if(!props.disabled)return props;inst={};for(var key in props)!disableableMouseListenerNames[key]&&props.hasOwnProperty(key)&&(inst[key]=\nprops[key]);return inst}}}","~:source","shadow$provide[\"module$node_modules$react$lib$DisabledInputUtils\"] = function(global,require,module,exports) {\n/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DisabledInputUtils\n */\n\n'use strict';\n\nvar disableableMouseListenerNames = {\n  onClick: true,\n  onDoubleClick: true,\n  onMouseDown: true,\n  onMouseMove: true,\n  onMouseUp: true,\n\n  onClickCapture: true,\n  onDoubleClickCapture: true,\n  onMouseDownCapture: true,\n  onMouseMoveCapture: true,\n  onMouseUpCapture: true\n};\n\n/**\n * Implements a host component that does not receive mouse events\n * when `disabled` is set.\n */\nvar DisabledInputUtils = {\n  getHostProps: function (inst, props) {\n    if (!props.disabled) {\n      return props;\n    }\n\n    // Copy the props, except the mouse listeners\n    var hostProps = {};\n    for (var key in props) {\n      if (!disableableMouseListenerNames[key] && props.hasOwnProperty(key)) {\n        hostProps[key] = props[key];\n      }\n    }\n\n    return hostProps;\n  }\n};\n\nmodule.exports = DisabledInputUtils;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["onDoubleClick","getHostProps","onClickCapture","onMouseUpCapture","onMouseMove","onMouseDown","onDoubleClickCapture","onMouseMoveCapture","onClick","onMouseDownCapture","onMouseUp"]],"~:compiled-at",1635250628397,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react$lib$DisabledInputUtils.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,gDAAA,CAAqE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAc7G,IAAIC,8BAAgC,CAClCC,QAAS,CAAA,CADyB,CAElCC,cAAe,CAAA,CAFmB,CAGlCC,YAAa,CAAA,CAHqB,CAIlCC,YAAa,CAAA,CAJqB,CAKlCC,UAAW,CAAA,CALuB,CAOlCC,eAAgB,CAAA,CAPkB,CAQlCC,qBAAsB,CAAA,CARY,CASlCC,mBAAoB,CAAA,CATc,CAUlCC,mBAAoB,CAAA,CAVc,CAWlCC,iBAAkB,CAAA,CAXgB,CAoCpCZ,OAAOC,CAAAA,OAAP,CAlByBY,CACvBC,aAAcA,QAAS,CAACC,IAAD,CAAOC,KAAP,CAAc,CACnC,GAAI,CAACA,KAAMC,CAAAA,QAAX,CACE,MAAOD,MAILE,KAAAA,CAAY,EAChB,KAAKC,IAAIA,GAAT,GAAgBH,MAAhB,CACM,CAACd,6BAAA,CAA8BiB,GAA9B,CAAL,EAA2CH,KAAMI,CAAAA,cAAN,CAAqBD,GAArB,CAA3C,GACED,IAAA,CAAUC,GAAV,CADF;AACmBH,KAAA,CAAMG,GAAN,CADnB,CAKF,OAAOD,KAb4B,CADdL,CAhCoF;\",\n\"sources\":[\"node_modules/react/lib/DisabledInputUtils.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react$lib$DisabledInputUtils\\\"] = function(global,require,module,exports) {\\n/**\\n * Copyright 2013-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule DisabledInputUtils\\n */\\n\\n'use strict';\\n\\nvar disableableMouseListenerNames = {\\n  onClick: true,\\n  onDoubleClick: true,\\n  onMouseDown: true,\\n  onMouseMove: true,\\n  onMouseUp: true,\\n\\n  onClickCapture: true,\\n  onDoubleClickCapture: true,\\n  onMouseDownCapture: true,\\n  onMouseMoveCapture: true,\\n  onMouseUpCapture: true\\n};\\n\\n/**\\n * Implements a host component that does not receive mouse events\\n * when `disabled` is set.\\n */\\nvar DisabledInputUtils = {\\n  getHostProps: function (inst, props) {\\n    if (!props.disabled) {\\n      return props;\\n    }\\n\\n    // Copy the props, except the mouse listeners\\n    var hostProps = {};\\n    for (var key in props) {\\n      if (!disableableMouseListenerNames[key] && props.hasOwnProperty(key)) {\\n        hostProps[key] = props[key];\\n      }\\n    }\\n\\n    return hostProps;\\n  }\\n};\\n\\nmodule.exports = DisabledInputUtils;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"disableableMouseListenerNames\",\"onClick\",\"onDoubleClick\",\"onMouseDown\",\"onMouseMove\",\"onMouseUp\",\"onClickCapture\",\"onDoubleClickCapture\",\"onMouseDownCapture\",\"onMouseMoveCapture\",\"onMouseUpCapture\",\"DisabledInputUtils\",\"getHostProps\",\"inst\",\"props\",\"disabled\",\"hostProps\",\"key\",\"hasOwnProperty\"]\n}\n"]