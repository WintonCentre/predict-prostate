["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react-dom/lib/FallbackCompositionState.js"],"~:js","shadow$provide.module$node_modules$react_dom$lib$FallbackCompositionState=function(global,process,require,module,exports,shadow$shims){function FallbackCompositionState(root){this._root=root;this._startText=this.getText();this._fallbackText=null}global=require(\"module$node_modules$object_assign$index\");process=require(\"module$node_modules$react_dom$lib$PooledClass\");var getTextContentAccessor=require(\"module$node_modules$react_dom$lib$getTextContentAccessor\");global(FallbackCompositionState.prototype,\n{destructor:function(){this._fallbackText=this._startText=this._root=null},getText:function(){return\"value\"in this._root?this._root.value:this._root[getTextContentAccessor()]},getData:function(){if(this._fallbackText)return this._fallbackText;var start,startValue=this._startText,startLength=startValue.length,end,endValue=this.getText(),endLength=endValue.length;for(start=0;start<startLength&&startValue[start]===endValue[start];start++);var minEnd=startLength-start;for(end=1;end<=minEnd&&startValue[startLength-\nend]===endValue[endLength-end];end++);return this._fallbackText=endValue.slice(start,1<end?1-end:void 0)}});process.addPoolingTo(FallbackCompositionState);module.exports=FallbackCompositionState}","~:source","shadow$provide[\"module$node_modules$react_dom$lib$FallbackCompositionState\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar PooledClass = require('./PooledClass');\n\nvar getTextContentAccessor = require('./getTextContentAccessor');\n\n/**\n * This helper class stores information about text content of a target node,\n * allowing comparison of content before and after a given event.\n *\n * Identify the node where selection currently begins, then observe\n * both its text content and its current position in the DOM. Since the\n * browser may natively replace the target node during composition, we can\n * use its position to find its replacement.\n *\n * @param {DOMEventTarget} root\n */\nfunction FallbackCompositionState(root) {\n  this._root = root;\n  this._startText = this.getText();\n  this._fallbackText = null;\n}\n\n_assign(FallbackCompositionState.prototype, {\n  destructor: function () {\n    this._root = null;\n    this._startText = null;\n    this._fallbackText = null;\n  },\n\n  /**\n   * Get current text of input.\n   *\n   * @return {string}\n   */\n  getText: function () {\n    if ('value' in this._root) {\n      return this._root.value;\n    }\n    return this._root[getTextContentAccessor()];\n  },\n\n  /**\n   * Determine the differing substring between the initially stored\n   * text content and the current content.\n   *\n   * @return {string}\n   */\n  getData: function () {\n    if (this._fallbackText) {\n      return this._fallbackText;\n    }\n\n    var start;\n    var startValue = this._startText;\n    var startLength = startValue.length;\n    var end;\n    var endValue = this.getText();\n    var endLength = endValue.length;\n\n    for (start = 0; start < startLength; start++) {\n      if (startValue[start] !== endValue[start]) {\n        break;\n      }\n    }\n\n    var minEnd = startLength - start;\n    for (end = 1; end <= minEnd; end++) {\n      if (startValue[startLength - end] !== endValue[endLength - end]) {\n        break;\n      }\n    }\n\n    var sliceTail = end > 1 ? 1 - end : undefined;\n    this._fallbackText = endValue.slice(start, sliceTail);\n    return this._fallbackText;\n  }\n});\n\nPooledClass.addPoolingTo(FallbackCompositionState);\n\nmodule.exports = FallbackCompositionState;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$object_assign$index","~$shadow.js","~$module$node_modules$react_dom$lib$PooledClass","~$module$node_modules$react_dom$lib$getTextContentAccessor"]],"~:properties",["^5",["getData","getText","_startText","_root","destructor","_fallbackText"]],"~:compiled-at",1635270336813,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react_dom$lib$FallbackCompositionState.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,2DAAA,CAA+E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CA8B5IC,QAASA,yBAAwB,CAACC,IAAD,CAAO,CACtC,IAAAC,MAAA,CAAaD,IACb,KAAAE,WAAA,CAAkB,IAAAC,QAAA,EAClB,KAAAC,cAAA,CAAqB,IAHiB,CAjBpCC,MAAAA,CAAUV,OAAA,CAAQ,yCAAR,CAEVW,QAAAA,CAAcX,OAAA,CAAQ,+CAAR,CAElB,KAAIY,uBAAyBZ,OAAA,CAAQ,0DAAR,CAmB7BU,OAAA,CAAQN,wBAAAS,UAAR;AAA4C,CAC1CC,WAAYA,QAAS,EAAG,CAGtB,IAAAL,cAAA,CADA,IAAAF,WACA,CAFA,IAAAD,MAEA,CAFa,IADS,CADkB,CAY1CE,QAASA,QAAS,EAAG,CACnB,MAAI,OAAJ,EAAe,KAAAF,MAAf,CACS,IAAAA,MAAAS,MADT,CAGO,IAAAT,MAAA,CAAWM,sBAAA,EAAX,CAJY,CAZqB,CAyB1CI,QAASA,QAAS,EAAG,CACnB,GAAI,IAAAP,cAAJ,CACE,MAAO,KAAAA,cAGT,KAAIQ,KAAJ,CACIC,WAAa,IAAAX,WADjB,CAEIY,YAAcD,UAAAE,OAFlB,CAGIC,GAHJ,CAIIC,SAAW,IAAAd,QAAA,EAJf,CAKIe,UAAYD,QAAAF,OAEhB,KAAKH,KAAL,CAAa,CAAb,CAAgBA,KAAhB,CAAwBE,WAAxB,EACMD,UAAA,CAAWD,KAAX,CADN,GAC4BK,QAAA,CAASL,KAAT,CAD5B,CAAqCA,KAAA,EAArC,EAMA,IAAIO,OAASL,WAATK,CAAuBP,KAC3B,KAAKI,GAAL,CAAW,CAAX,CAAcA,GAAd,EAAqBG,MAArB,EACMN,UAAA,CAAWC,WAAX;AAAyBE,GAAzB,CADN,GACwCC,QAAA,CAASC,SAAT,CAAqBF,GAArB,CADxC,CAA6BA,GAAA,EAA7B,EAQA,MADA,KAAAZ,cACA,CADqBa,QAAAG,MAAA,CAAeR,KAAf,CADC,CAANS,CAAAL,GAAAK,CAAU,CAAVA,CAAcL,GAAdK,CAAoBC,IAAAA,EACf,CA1BF,CAzBqB,CAA5C,CAwDAhB,QAAAiB,aAAA,CAAyBxB,wBAAzB,CAEAH,OAAAC,QAAA,CAAiBE,wBA9F2H;\",\n\"sources\":[\"node_modules/react-dom/lib/FallbackCompositionState.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react_dom$lib$FallbackCompositionState\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n/**\\n * Copyright 2013-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n */\\n\\n'use strict';\\n\\nvar _assign = require('object-assign');\\n\\nvar PooledClass = require('./PooledClass');\\n\\nvar getTextContentAccessor = require('./getTextContentAccessor');\\n\\n/**\\n * This helper class stores information about text content of a target node,\\n * allowing comparison of content before and after a given event.\\n *\\n * Identify the node where selection currently begins, then observe\\n * both its text content and its current position in the DOM. Since the\\n * browser may natively replace the target node during composition, we can\\n * use its position to find its replacement.\\n *\\n * @param {DOMEventTarget} root\\n */\\nfunction FallbackCompositionState(root) {\\n  this._root = root;\\n  this._startText = this.getText();\\n  this._fallbackText = null;\\n}\\n\\n_assign(FallbackCompositionState.prototype, {\\n  destructor: function () {\\n    this._root = null;\\n    this._startText = null;\\n    this._fallbackText = null;\\n  },\\n\\n  /**\\n   * Get current text of input.\\n   *\\n   * @return {string}\\n   */\\n  getText: function () {\\n    if ('value' in this._root) {\\n      return this._root.value;\\n    }\\n    return this._root[getTextContentAccessor()];\\n  },\\n\\n  /**\\n   * Determine the differing substring between the initially stored\\n   * text content and the current content.\\n   *\\n   * @return {string}\\n   */\\n  getData: function () {\\n    if (this._fallbackText) {\\n      return this._fallbackText;\\n    }\\n\\n    var start;\\n    var startValue = this._startText;\\n    var startLength = startValue.length;\\n    var end;\\n    var endValue = this.getText();\\n    var endLength = endValue.length;\\n\\n    for (start = 0; start < startLength; start++) {\\n      if (startValue[start] !== endValue[start]) {\\n        break;\\n      }\\n    }\\n\\n    var minEnd = startLength - start;\\n    for (end = 1; end <= minEnd; end++) {\\n      if (startValue[startLength - end] !== endValue[endLength - end]) {\\n        break;\\n      }\\n    }\\n\\n    var sliceTail = end > 1 ? 1 - end : undefined;\\n    this._fallbackText = endValue.slice(start, sliceTail);\\n    return this._fallbackText;\\n  }\\n});\\n\\nPooledClass.addPoolingTo(FallbackCompositionState);\\n\\nmodule.exports = FallbackCompositionState;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"FallbackCompositionState\",\"root\",\"_root\",\"_startText\",\"getText\",\"_fallbackText\",\"_assign\",\"PooledClass\",\"getTextContentAccessor\",\"prototype\",\"destructor\",\"value\",\"getData\",\"start\",\"startValue\",\"startLength\",\"length\",\"end\",\"endValue\",\"endLength\",\"minEnd\",\"slice\",\"sliceTail\",\"undefined\",\"addPoolingTo\"]\n}\n"]