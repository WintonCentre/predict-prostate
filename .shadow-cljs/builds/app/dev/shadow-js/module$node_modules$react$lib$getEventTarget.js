["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react/lib/getEventTarget.js"],"~:js","shadow$provide.module$node_modules$react$lib$getEventTarget=function(global,require,module,exports){module.exports=function(nativeEvent){nativeEvent=nativeEvent.target||nativeEvent.srcElement||window;nativeEvent.correspondingUseElement&&(nativeEvent=nativeEvent.correspondingUseElement);return 3===nativeEvent.nodeType?nativeEvent.parentNode:nativeEvent}}","~:source","shadow$provide[\"module$node_modules$react$lib$getEventTarget\"] = function(global,require,module,exports) {\n/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getEventTarget\n */\n\n'use strict';\n\n/**\n * Gets the target node from a native browser event by accounting for\n * inconsistencies in browser DOM APIs.\n *\n * @param {object} nativeEvent Native browser event.\n * @return {DOMEventTarget} Target node.\n */\n\nfunction getEventTarget(nativeEvent) {\n  var target = nativeEvent.target || nativeEvent.srcElement || window;\n\n  // Normalize SVG <use> element events #4963\n  if (target.correspondingUseElement) {\n    target = target.correspondingUseElement;\n  }\n\n  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).\n  // @see http://www.quirksmode.org/js/events_properties.html\n  return target.nodeType === 3 ? target.parentNode : target;\n}\n\nmodule.exports = getEventTarget;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",[]],"~:compiled-at",1635250628389,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react$lib$getEventTarget.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,4CAAA,CAAiE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAmCzGD,MAAOC,CAAAA,OAAP,CAbAC,QAAuB,CAACC,WAAD,CAAc,CAC/BC,WAAAA,CAASD,WAAYC,CAAAA,MAArBA,EAA+BD,WAAYE,CAAAA,UAA3CD,EAAyDE,MAGzDF,YAAOG,CAAAA,uBAAX,GACEH,WADF,CACWA,WAAOG,CAAAA,uBADlB,CAMA,OAA2B,EAApB,GAAAH,WAAOI,CAAAA,QAAP,CAAwBJ,WAAOK,CAAAA,UAA/B,CAA4CL,WAVhB,CAtBoE;\",\n\"sources\":[\"node_modules/react/lib/getEventTarget.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react$lib$getEventTarget\\\"] = function(global,require,module,exports) {\\n/**\\n * Copyright 2013-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule getEventTarget\\n */\\n\\n'use strict';\\n\\n/**\\n * Gets the target node from a native browser event by accounting for\\n * inconsistencies in browser DOM APIs.\\n *\\n * @param {object} nativeEvent Native browser event.\\n * @return {DOMEventTarget} Target node.\\n */\\n\\nfunction getEventTarget(nativeEvent) {\\n  var target = nativeEvent.target || nativeEvent.srcElement || window;\\n\\n  // Normalize SVG <use> element events #4963\\n  if (target.correspondingUseElement) {\\n    target = target.correspondingUseElement;\\n  }\\n\\n  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).\\n  // @see http://www.quirksmode.org/js/events_properties.html\\n  return target.nodeType === 3 ? target.parentNode : target;\\n}\\n\\nmodule.exports = getEventTarget;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"getEventTarget\",\"nativeEvent\",\"target\",\"srcElement\",\"window\",\"correspondingUseElement\",\"nodeType\",\"parentNode\"]\n}\n"]