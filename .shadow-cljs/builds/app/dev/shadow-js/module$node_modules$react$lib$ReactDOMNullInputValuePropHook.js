["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react/lib/ReactDOMNullInputValuePropHook.js"],"~:js","shadow$provide.module$node_modules$react$lib$ReactDOMNullInputValuePropHook=function(global,require,module,exports){function handleElement(debugID,element){null==element||\"input\"!==element.type&&\"textarea\"!==element.type&&\"select\"!==element.type||null==element.props||null!==element.props.value||didWarnValueNull||(warning(!1,\"`value` prop on `%s` should not be null. Consider using the empty string to clear the component or `undefined` for uncontrolled components.%s\",element.type,ReactComponentTreeHook.getStackAddendumByID(debugID)),\ndidWarnValueNull=!0)}var ReactComponentTreeHook=require(\"module$node_modules$react$lib$ReactComponentTreeHook\"),warning=require(\"module$node_modules$fbjs$lib$warning\"),didWarnValueNull=!1;module.exports={onBeforeMountComponent:function(debugID,element){handleElement(debugID,element)},onBeforeUpdateComponent:function(debugID,element){handleElement(debugID,element)}}}","~:source","shadow$provide[\"module$node_modules$react$lib$ReactDOMNullInputValuePropHook\"] = function(global,require,module,exports) {\n/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMNullInputValuePropHook\n */\n\n'use strict';\n\nvar ReactComponentTreeHook = require('./ReactComponentTreeHook');\n\nvar warning = require('fbjs/lib/warning');\n\nvar didWarnValueNull = false;\n\nfunction handleElement(debugID, element) {\n  if (element == null) {\n    return;\n  }\n  if (element.type !== 'input' && element.type !== 'textarea' && element.type !== 'select') {\n    return;\n  }\n  if (element.props != null && element.props.value === null && !didWarnValueNull) {\n    process.env.NODE_ENV !== 'production' ? warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;\n\n    didWarnValueNull = true;\n  }\n}\n\nvar ReactDOMNullInputValuePropHook = {\n  onBeforeMountComponent: function (debugID, element) {\n    handleElement(debugID, element);\n  },\n  onBeforeUpdateComponent: function (debugID, element) {\n    handleElement(debugID, element);\n  }\n};\n\nmodule.exports = ReactDOMNullInputValuePropHook;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$react$lib$ReactComponentTreeHook","~$shadow.js","~$module$node_modules$fbjs$lib$warning"]],"~:properties",["^5",["onBeforeMountComponent","onBeforeUpdateComponent"]],"~:compiled-at",1635250628424,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react$lib$ReactDOMNullInputValuePropHook.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,4DAAA,CAAiF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAoBzHC,QAASA,cAAa,CAACC,OAAD,CAAUC,OAAV,CAAmB,CACxB,IAAf,EAAIA,OAAJ,EAGqB,OAHrB,GAGIA,OAAQC,CAAAA,IAHZ,EAGiD,UAHjD,GAGgCD,OAAQC,CAAAA,IAHxC,EAGgF,QAHhF,GAG+DD,OAAQC,CAAAA,IAHvE,EAMqB,IANrB,EAMID,OAAQE,CAAAA,KANZ,EAMqD,IANrD,GAM6BF,OAAQE,CAAAA,KAAMC,CAAAA,KAN3C,EAM8DC,gBAN9D,GAO0CC,OAAA,CAAQ,CAAA,CAAR,CAAe,+IAAf,CAA0KL,OAAQC,CAAAA,IAAlL,CAAwLK,sBAAuBC,CAAAA,oBAAvB,CAA4CR,OAA5C,CAAxL,CAExC;AAAAK,gBAAA,CAAmB,CAAA,CATrB,CADuC,CANzC,IAAIE,uBAAyBX,OAAA,CAAQ,sDAAR,CAA7B,CAEIU,QAAUV,OAAA,CAAQ,sCAAR,CAFd,CAIIS,iBAAmB,CAAA,CAyBvBR,OAAOC,CAAAA,OAAP,CATqCW,CACnCC,uBAAwBA,QAAS,CAACV,OAAD,CAAUC,OAAV,CAAmB,CAClDF,aAAA,CAAcC,OAAd,CAAuBC,OAAvB,CADkD,CADjBQ,CAInCE,wBAAyBA,QAAS,CAACX,OAAD,CAAUC,OAAV,CAAmB,CACnDF,aAAA,CAAcC,OAAd,CAAuBC,OAAvB,CADmD,CAJlBQ,CAlCoF;\",\n\"sources\":[\"node_modules/react/lib/ReactDOMNullInputValuePropHook.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react$lib$ReactDOMNullInputValuePropHook\\\"] = function(global,require,module,exports) {\\n/**\\n * Copyright 2013-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactDOMNullInputValuePropHook\\n */\\n\\n'use strict';\\n\\nvar ReactComponentTreeHook = require('./ReactComponentTreeHook');\\n\\nvar warning = require('fbjs/lib/warning');\\n\\nvar didWarnValueNull = false;\\n\\nfunction handleElement(debugID, element) {\\n  if (element == null) {\\n    return;\\n  }\\n  if (element.type !== 'input' && element.type !== 'textarea' && element.type !== 'select') {\\n    return;\\n  }\\n  if (element.props != null && element.props.value === null && !didWarnValueNull) {\\n    process.env.NODE_ENV !== 'production' ? warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;\\n\\n    didWarnValueNull = true;\\n  }\\n}\\n\\nvar ReactDOMNullInputValuePropHook = {\\n  onBeforeMountComponent: function (debugID, element) {\\n    handleElement(debugID, element);\\n  },\\n  onBeforeUpdateComponent: function (debugID, element) {\\n    handleElement(debugID, element);\\n  }\\n};\\n\\nmodule.exports = ReactDOMNullInputValuePropHook;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"handleElement\",\"debugID\",\"element\",\"type\",\"props\",\"value\",\"didWarnValueNull\",\"warning\",\"ReactComponentTreeHook\",\"getStackAddendumByID\",\"ReactDOMNullInputValuePropHook\",\"onBeforeMountComponent\",\"onBeforeUpdateComponent\"]\n}\n"]