["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react/lib/ReactDOMSelection.js"],"~:js","shadow$provide.module$node_modules$react$lib$ReactDOMSelection=function(global,require,module,exports){function getIEOffsets(node){var selectedRange=document.selection.createRange(),selectedLength=selectedRange.text.length,fromStart=selectedRange.duplicate();fromStart.moveToElementText(node);fromStart.setEndPoint(\"EndToStart\",selectedRange);node=fromStart.text.length;return{start:node,end:node+selectedLength}}function getModernOffsets(node){var selection=window.getSelection&&window.getSelection();\nif(!selection||0===selection.rangeCount)return null;var anchorNode=selection.anchorNode,anchorOffset=selection.anchorOffset,focusNode=selection.focusNode,focusOffset=selection.focusOffset,currentRange=selection.getRangeAt(0);try{currentRange.startContainer.nodeType,currentRange.endContainer.nodeType}catch(e){return null}selection=selection.anchorNode===selection.focusNode&&selection.anchorOffset===selection.focusOffset?0:currentRange.toString().length;var tempRange=currentRange.cloneRange();tempRange.selectNodeContents(node);\ntempRange.setEnd(currentRange.startContainer,currentRange.startOffset);node=tempRange.startContainer===tempRange.endContainer&&tempRange.startOffset===tempRange.endOffset?0:tempRange.toString().length;currentRange=node+selection;selection=document.createRange();selection.setStart(anchorNode,anchorOffset);selection.setEnd(focusNode,focusOffset);anchorNode=selection.collapsed;return{start:anchorNode?currentRange:node,end:anchorNode?node:currentRange}}function setIEOffsets(node,offsets){var range=document.selection.createRange().duplicate(),\nstart;void 0===offsets.end?offsets=start=offsets.start:offsets.start>offsets.end?(start=offsets.end,offsets=offsets.start):(start=offsets.start,offsets=offsets.end);range.moveToElementText(node);range.moveStart(\"character\",start);range.setEndPoint(\"EndToStart\",range);range.moveEnd(\"character\",offsets-start);range.select()}function setModernOffsets(node,offsets){if(window.getSelection){var selection=window.getSelection(),length=node[getTextContentAccessor()].length,start=Math.min(offsets.start,length);\noffsets=void 0===offsets.end?start:Math.min(offsets.end,length);!selection.extend&&start>offsets&&(length=offsets,offsets=start,start=length);length=getNodeForCharacterOffset(node,start);node=getNodeForCharacterOffset(node,offsets);if(length&&node){var range=document.createRange();range.setStart(length.node,length.offset);selection.removeAllRanges();start>offsets?(selection.addRange(range),selection.extend(node.node,node.offset)):(range.setEnd(node.node,node.offset),selection.addRange(range))}}}global=\nrequire(\"module$node_modules$fbjs$lib$ExecutionEnvironment\");var getNodeForCharacterOffset=require(\"module$node_modules$react$lib$getNodeForCharacterOffset\"),getTextContentAccessor=require(\"module$node_modules$react$lib$getTextContentAccessor\");require=global.canUseDOM&&\"selection\"in document&&!(\"getSelection\"in window);module.exports={getOffsets:require?getIEOffsets:getModernOffsets,setOffsets:require?setIEOffsets:setModernOffsets}}","~:source","shadow$provide[\"module$node_modules$react$lib$ReactDOMSelection\"] = function(global,require,module,exports) {\n/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMSelection\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar getNodeForCharacterOffset = require('./getNodeForCharacterOffset');\nvar getTextContentAccessor = require('./getTextContentAccessor');\n\n/**\n * While `isCollapsed` is available on the Selection object and `collapsed`\n * is available on the Range object, IE11 sometimes gets them wrong.\n * If the anchor/focus nodes and offsets are the same, the range is collapsed.\n */\nfunction isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {\n  return anchorNode === focusNode && anchorOffset === focusOffset;\n}\n\n/**\n * Get the appropriate anchor and focus node/offset pairs for IE.\n *\n * The catch here is that IE's selection API doesn't provide information\n * about whether the selection is forward or backward, so we have to\n * behave as though it's always forward.\n *\n * IE text differs from modern selection in that it behaves as though\n * block elements end with a new line. This means character offsets will\n * differ between the two APIs.\n *\n * @param {DOMElement} node\n * @return {object}\n */\nfunction getIEOffsets(node) {\n  var selection = document.selection;\n  var selectedRange = selection.createRange();\n  var selectedLength = selectedRange.text.length;\n\n  // Duplicate selection so we can move range without breaking user selection.\n  var fromStart = selectedRange.duplicate();\n  fromStart.moveToElementText(node);\n  fromStart.setEndPoint('EndToStart', selectedRange);\n\n  var startOffset = fromStart.text.length;\n  var endOffset = startOffset + selectedLength;\n\n  return {\n    start: startOffset,\n    end: endOffset\n  };\n}\n\n/**\n * @param {DOMElement} node\n * @return {?object}\n */\nfunction getModernOffsets(node) {\n  var selection = window.getSelection && window.getSelection();\n\n  if (!selection || selection.rangeCount === 0) {\n    return null;\n  }\n\n  var anchorNode = selection.anchorNode;\n  var anchorOffset = selection.anchorOffset;\n  var focusNode = selection.focusNode;\n  var focusOffset = selection.focusOffset;\n\n  var currentRange = selection.getRangeAt(0);\n\n  // In Firefox, range.startContainer and range.endContainer can be \"anonymous\n  // divs\", e.g. the up/down buttons on an <input type=\"number\">. Anonymous\n  // divs do not seem to expose properties, triggering a \"Permission denied\n  // error\" if any of its properties are accessed. The only seemingly possible\n  // way to avoid erroring is to access a property that typically works for\n  // non-anonymous divs and catch any error that may otherwise arise. See\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427\n  try {\n    /* eslint-disable no-unused-expressions */\n    currentRange.startContainer.nodeType;\n    currentRange.endContainer.nodeType;\n    /* eslint-enable no-unused-expressions */\n  } catch (e) {\n    return null;\n  }\n\n  // If the node and offset values are the same, the selection is collapsed.\n  // `Selection.isCollapsed` is available natively, but IE sometimes gets\n  // this value wrong.\n  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);\n\n  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;\n\n  var tempRange = currentRange.cloneRange();\n  tempRange.selectNodeContents(node);\n  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);\n\n  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);\n\n  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;\n  var end = start + rangeLength;\n\n  // Detect whether the selection is backward.\n  var detectionRange = document.createRange();\n  detectionRange.setStart(anchorNode, anchorOffset);\n  detectionRange.setEnd(focusNode, focusOffset);\n  var isBackward = detectionRange.collapsed;\n\n  return {\n    start: isBackward ? end : start,\n    end: isBackward ? start : end\n  };\n}\n\n/**\n * @param {DOMElement|DOMTextNode} node\n * @param {object} offsets\n */\nfunction setIEOffsets(node, offsets) {\n  var range = document.selection.createRange().duplicate();\n  var start, end;\n\n  if (offsets.end === undefined) {\n    start = offsets.start;\n    end = start;\n  } else if (offsets.start > offsets.end) {\n    start = offsets.end;\n    end = offsets.start;\n  } else {\n    start = offsets.start;\n    end = offsets.end;\n  }\n\n  range.moveToElementText(node);\n  range.moveStart('character', start);\n  range.setEndPoint('EndToStart', range);\n  range.moveEnd('character', end - start);\n  range.select();\n}\n\n/**\n * In modern non-IE browsers, we can support both forward and backward\n * selections.\n *\n * Note: IE10+ supports the Selection object, but it does not support\n * the `extend` method, which means that even in modern IE, it's not possible\n * to programmatically create a backward selection. Thus, for all IE\n * versions, we use the old IE API to create our selections.\n *\n * @param {DOMElement|DOMTextNode} node\n * @param {object} offsets\n */\nfunction setModernOffsets(node, offsets) {\n  if (!window.getSelection) {\n    return;\n  }\n\n  var selection = window.getSelection();\n  var length = node[getTextContentAccessor()].length;\n  var start = Math.min(offsets.start, length);\n  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);\n\n  // IE 11 uses modern selection, but doesn't support the extend method.\n  // Flip backward selections, so we can set with a single range.\n  if (!selection.extend && start > end) {\n    var temp = end;\n    end = start;\n    start = temp;\n  }\n\n  var startMarker = getNodeForCharacterOffset(node, start);\n  var endMarker = getNodeForCharacterOffset(node, end);\n\n  if (startMarker && endMarker) {\n    var range = document.createRange();\n    range.setStart(startMarker.node, startMarker.offset);\n    selection.removeAllRanges();\n\n    if (start > end) {\n      selection.addRange(range);\n      selection.extend(endMarker.node, endMarker.offset);\n    } else {\n      range.setEnd(endMarker.node, endMarker.offset);\n      selection.addRange(range);\n    }\n  }\n}\n\nvar useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);\n\nvar ReactDOMSelection = {\n  /**\n   * @param {DOMElement} node\n   */\n  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,\n\n  /**\n   * @param {DOMElement|DOMTextNode} node\n   * @param {object} offsets\n   */\n  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets\n};\n\nmodule.exports = ReactDOMSelection;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$react$lib$getNodeForCharacterOffset","~$module$node_modules$react$lib$getTextContentAccessor","~$shadow.js","~$module$node_modules$fbjs$lib$ExecutionEnvironment"]],"~:properties",["^5",["setOffsets","getOffsets","start","end"]],"~:compiled-at",1635250628416,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react$lib$ReactDOMSelection.js\",\n\"lineCount\":6,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/react/lib/ReactDOMSelection.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react$lib$ReactDOMSelection\\\"] = function(global,require,module,exports) {\\n/**\\n * Copyright 2013-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactDOMSelection\\n */\\n\\n'use strict';\\n\\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\\n\\nvar getNodeForCharacterOffset = require('./getNodeForCharacterOffset');\\nvar getTextContentAccessor = require('./getTextContentAccessor');\\n\\n/**\\n * While `isCollapsed` is available on the Selection object and `collapsed`\\n * is available on the Range object, IE11 sometimes gets them wrong.\\n * If the anchor/focus nodes and offsets are the same, the range is collapsed.\\n */\\nfunction isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {\\n  return anchorNode === focusNode && anchorOffset === focusOffset;\\n}\\n\\n/**\\n * Get the appropriate anchor and focus node/offset pairs for IE.\\n *\\n * The catch here is that IE's selection API doesn't provide information\\n * about whether the selection is forward or backward, so we have to\\n * behave as though it's always forward.\\n *\\n * IE text differs from modern selection in that it behaves as though\\n * block elements end with a new line. This means character offsets will\\n * differ between the two APIs.\\n *\\n * @param {DOMElement} node\\n * @return {object}\\n */\\nfunction getIEOffsets(node) {\\n  var selection = document.selection;\\n  var selectedRange = selection.createRange();\\n  var selectedLength = selectedRange.text.length;\\n\\n  // Duplicate selection so we can move range without breaking user selection.\\n  var fromStart = selectedRange.duplicate();\\n  fromStart.moveToElementText(node);\\n  fromStart.setEndPoint('EndToStart', selectedRange);\\n\\n  var startOffset = fromStart.text.length;\\n  var endOffset = startOffset + selectedLength;\\n\\n  return {\\n    start: startOffset,\\n    end: endOffset\\n  };\\n}\\n\\n/**\\n * @param {DOMElement} node\\n * @return {?object}\\n */\\nfunction getModernOffsets(node) {\\n  var selection = window.getSelection && window.getSelection();\\n\\n  if (!selection || selection.rangeCount === 0) {\\n    return null;\\n  }\\n\\n  var anchorNode = selection.anchorNode;\\n  var anchorOffset = selection.anchorOffset;\\n  var focusNode = selection.focusNode;\\n  var focusOffset = selection.focusOffset;\\n\\n  var currentRange = selection.getRangeAt(0);\\n\\n  // In Firefox, range.startContainer and range.endContainer can be \\\"anonymous\\n  // divs\\\", e.g. the up/down buttons on an <input type=\\\"number\\\">. Anonymous\\n  // divs do not seem to expose properties, triggering a \\\"Permission denied\\n  // error\\\" if any of its properties are accessed. The only seemingly possible\\n  // way to avoid erroring is to access a property that typically works for\\n  // non-anonymous divs and catch any error that may otherwise arise. See\\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427\\n  try {\\n    /* eslint-disable no-unused-expressions */\\n    currentRange.startContainer.nodeType;\\n    currentRange.endContainer.nodeType;\\n    /* eslint-enable no-unused-expressions */\\n  } catch (e) {\\n    return null;\\n  }\\n\\n  // If the node and offset values are the same, the selection is collapsed.\\n  // `Selection.isCollapsed` is available natively, but IE sometimes gets\\n  // this value wrong.\\n  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);\\n\\n  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;\\n\\n  var tempRange = currentRange.cloneRange();\\n  tempRange.selectNodeContents(node);\\n  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);\\n\\n  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);\\n\\n  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;\\n  var end = start + rangeLength;\\n\\n  // Detect whether the selection is backward.\\n  var detectionRange = document.createRange();\\n  detectionRange.setStart(anchorNode, anchorOffset);\\n  detectionRange.setEnd(focusNode, focusOffset);\\n  var isBackward = detectionRange.collapsed;\\n\\n  return {\\n    start: isBackward ? end : start,\\n    end: isBackward ? start : end\\n  };\\n}\\n\\n/**\\n * @param {DOMElement|DOMTextNode} node\\n * @param {object} offsets\\n */\\nfunction setIEOffsets(node, offsets) {\\n  var range = document.selection.createRange().duplicate();\\n  var start, end;\\n\\n  if (offsets.end === undefined) {\\n    start = offsets.start;\\n    end = start;\\n  } else if (offsets.start > offsets.end) {\\n    start = offsets.end;\\n    end = offsets.start;\\n  } else {\\n    start = offsets.start;\\n    end = offsets.end;\\n  }\\n\\n  range.moveToElementText(node);\\n  range.moveStart('character', start);\\n  range.setEndPoint('EndToStart', range);\\n  range.moveEnd('character', end - start);\\n  range.select();\\n}\\n\\n/**\\n * In modern non-IE browsers, we can support both forward and backward\\n * selections.\\n *\\n * Note: IE10+ supports the Selection object, but it does not support\\n * the `extend` method, which means that even in modern IE, it's not possible\\n * to programmatically create a backward selection. Thus, for all IE\\n * versions, we use the old IE API to create our selections.\\n *\\n * @param {DOMElement|DOMTextNode} node\\n * @param {object} offsets\\n */\\nfunction setModernOffsets(node, offsets) {\\n  if (!window.getSelection) {\\n    return;\\n  }\\n\\n  var selection = window.getSelection();\\n  var length = node[getTextContentAccessor()].length;\\n  var start = Math.min(offsets.start, length);\\n  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);\\n\\n  // IE 11 uses modern selection, but doesn't support the extend method.\\n  // Flip backward selections, so we can set with a single range.\\n  if (!selection.extend && start > end) {\\n    var temp = end;\\n    end = start;\\n    start = temp;\\n  }\\n\\n  var startMarker = getNodeForCharacterOffset(node, start);\\n  var endMarker = getNodeForCharacterOffset(node, end);\\n\\n  if (startMarker && endMarker) {\\n    var range = document.createRange();\\n    range.setStart(startMarker.node, startMarker.offset);\\n    selection.removeAllRanges();\\n\\n    if (start > end) {\\n      selection.addRange(range);\\n      selection.extend(endMarker.node, endMarker.offset);\\n    } else {\\n      range.setEnd(endMarker.node, endMarker.offset);\\n      selection.addRange(range);\\n    }\\n  }\\n}\\n\\nvar useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);\\n\\nvar ReactDOMSelection = {\\n  /**\\n   * @param {DOMElement} node\\n   */\\n  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,\\n\\n  /**\\n   * @param {DOMElement|DOMTextNode} node\\n   * @param {object} offsets\\n   */\\n  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets\\n};\\n\\nmodule.exports = ReactDOMSelection;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"getIEOffsets\",\"node\",\"selectedRange\",\"document\",\"selection\",\"createRange\",\"selectedLength\",\"text\",\"length\",\"fromStart\",\"duplicate\",\"moveToElementText\",\"setEndPoint\",\"startOffset\",\"start\",\"end\",\"getModernOffsets\",\"window\",\"getSelection\",\"rangeCount\",\"anchorNode\",\"anchorOffset\",\"focusNode\",\"focusOffset\",\"currentRange\",\"getRangeAt\",\"startContainer\",\"nodeType\",\"endContainer\",\"e\",\"rangeLength\",\"toString\",\"tempRange\",\"cloneRange\",\"selectNodeContents\",\"setEnd\",\"endOffset\",\"detectionRange\",\"setStart\",\"isBackward\",\"collapsed\",\"setIEOffsets\",\"offsets\",\"range\",\"undefined\",\"moveStart\",\"moveEnd\",\"select\",\"setModernOffsets\",\"getTextContentAccessor\",\"Math\",\"min\",\"extend\",\"temp\",\"startMarker\",\"getNodeForCharacterOffset\",\"endMarker\",\"offset\",\"removeAllRanges\",\"addRange\",\"ExecutionEnvironment\",\"useIEOffsets\",\"canUseDOM\",\"ReactDOMSelection\",\"getOffsets\",\"setOffsets\"]\n}\n"]