["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react/lib/SyntheticMouseEvent.js"],"~:js","shadow$provide.module$node_modules$react$lib$SyntheticMouseEvent=function(global,require,module,exports){function SyntheticMouseEvent(dispatchConfig,dispatchMarker,nativeEvent,nativeEventTarget){return SyntheticUIEvent.call(this,dispatchConfig,dispatchMarker,nativeEvent,nativeEventTarget)}var SyntheticUIEvent=require(\"module$node_modules$react$lib$SyntheticUIEvent\"),ViewportMetrics=require(\"module$node_modules$react$lib$ViewportMetrics\");global={screenX:null,screenY:null,clientX:null,clientY:null,\nctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:require(\"module$node_modules$react$lib$getEventModifierState\"),button:function(event){var button=event.button;return\"which\"in event?button:2===button?2:4===button?1:0},buttons:null,relatedTarget:function(event){return event.relatedTarget||(event.fromElement===event.srcElement?event.toElement:event.fromElement)},pageX:function(event){return\"pageX\"in event?event.pageX:event.clientX+ViewportMetrics.currentScrollLeft},pageY:function(event){return\"pageY\"in\nevent?event.pageY:event.clientY+ViewportMetrics.currentScrollTop}};SyntheticUIEvent.augmentClass(SyntheticMouseEvent,global);module.exports=SyntheticMouseEvent}","~:source","shadow$provide[\"module$node_modules$react$lib$SyntheticMouseEvent\"] = function(global,require,module,exports) {\n/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticMouseEvent\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\nvar ViewportMetrics = require('./ViewportMetrics');\n\nvar getEventModifierState = require('./getEventModifierState');\n\n/**\n * @interface MouseEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar MouseEventInterface = {\n  screenX: null,\n  screenY: null,\n  clientX: null,\n  clientY: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  getModifierState: getEventModifierState,\n  button: function (event) {\n    // Webkit, Firefox, IE9+\n    // which:  1 2 3\n    // button: 0 1 2 (standard)\n    var button = event.button;\n    if ('which' in event) {\n      return button;\n    }\n    // IE<9\n    // which:  undefined\n    // button: 0 0 0\n    // button: 1 4 2 (onmouseup)\n    return button === 2 ? 2 : button === 4 ? 1 : 0;\n  },\n  buttons: null,\n  relatedTarget: function (event) {\n    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);\n  },\n  // \"Proprietary\" Interface.\n  pageX: function (event) {\n    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;\n  },\n  pageY: function (event) {\n    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);\n\nmodule.exports = SyntheticMouseEvent;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$react$lib$getEventModifierState","~$module$node_modules$react$lib$ViewportMetrics","~$shadow.js","~$module$node_modules$react$lib$SyntheticUIEvent"]],"~:properties",["^5",["metaKey","altKey","relatedTarget","pageX","screenX","clientY","clientX","ctrlKey","buttons","shiftKey","getModifierState","pageY","screenY","button"]],"~:compiled-at",1635250628391,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react$lib$SyntheticMouseEvent.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,iDAAA,CAAsE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAkE9GC,QAASA,oBAAmB,CAACC,cAAD,CAAiBC,cAAjB,CAAiCC,WAAjC,CAA8CC,iBAA9C,CAAiE,CAC3F,MAAOC,iBAAiBC,CAAAA,IAAjB,CAAsB,IAAtB,CAA4BL,cAA5B,CAA4CC,cAA5C,CAA4DC,WAA5D,CAAyEC,iBAAzE,CADoF,CApD7F,IAAIC,iBAAmBR,OAAA,CAAQ,gDAAR,CAAvB,CACIU,gBAAkBV,OAAA,CAAQ,+CAAR,CAQlBW,OAAAA,CAAsB,CACxBC,QAAS,IADe,CAExBC,QAAS,IAFe,CAGxBC,QAAS,IAHe,CAIxBC,QAAS,IAJe;AAKxBC,QAAS,IALe,CAMxBC,SAAU,IANc,CAOxBC,OAAQ,IAPgB,CAQxBC,QAAS,IARe,CASxBC,iBAf0BpB,OAAAqB,CAAQ,qDAARA,CAMF,CAUxBC,OAAQA,QAAS,CAACC,KAAD,CAAQ,CAIvB,IAAID,OAASC,KAAMD,CAAAA,MACnB,OAAI,OAAJ,EAAeC,MAAf,CACSD,MADT,CAOkB,CAAX,GAAAA,MAAA,CAAe,CAAf,CAA8B,CAAX,GAAAA,MAAA,CAAe,CAAf,CAAmB,CAZtB,CAVD,CAwBxBE,QAAS,IAxBe,CAyBxBC,cAAeA,QAAS,CAACF,KAAD,CAAQ,CAC9B,MAAOA,MAAME,CAAAA,aAAb,GAA+BF,KAAMG,CAAAA,WAAN,GAAsBH,KAAMI,CAAAA,UAA5B,CAAyCJ,KAAMK,CAAAA,SAA/C,CAA2DL,KAAMG,CAAAA,WAAhG,CAD8B,CAzBR,CA6BxBG,MAAOA,QAAS,CAACN,KAAD,CAAQ,CACtB,MAAO,OAAA,EAAWA,MAAX,CAAmBA,KAAMM,CAAAA,KAAzB,CAAiCN,KAAMT,CAAAA,OAAvC,CAAiDJ,eAAgBoB,CAAAA,iBADlD,CA7BA,CAgCxBC,MAAOA,QAAS,CAACR,KAAD,CAAQ,CACtB,MAAO,OAAA;AAAWA,KAAX,CAAmBA,KAAMQ,CAAAA,KAAzB,CAAiCR,KAAMR,CAAAA,OAAvC,CAAiDL,eAAgBsB,CAAAA,gBADlD,CAhCA,CA+C1BxB,iBAAiByB,CAAAA,YAAjB,CAA8B9B,mBAA9B,CAAmDQ,MAAnD,CAEAV,OAAOC,CAAAA,OAAP,CAAiBC,mBAxE6F;\",\n\"sources\":[\"node_modules/react/lib/SyntheticMouseEvent.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react$lib$SyntheticMouseEvent\\\"] = function(global,require,module,exports) {\\n/**\\n * Copyright 2013-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule SyntheticMouseEvent\\n */\\n\\n'use strict';\\n\\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\\nvar ViewportMetrics = require('./ViewportMetrics');\\n\\nvar getEventModifierState = require('./getEventModifierState');\\n\\n/**\\n * @interface MouseEvent\\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\\n */\\nvar MouseEventInterface = {\\n  screenX: null,\\n  screenY: null,\\n  clientX: null,\\n  clientY: null,\\n  ctrlKey: null,\\n  shiftKey: null,\\n  altKey: null,\\n  metaKey: null,\\n  getModifierState: getEventModifierState,\\n  button: function (event) {\\n    // Webkit, Firefox, IE9+\\n    // which:  1 2 3\\n    // button: 0 1 2 (standard)\\n    var button = event.button;\\n    if ('which' in event) {\\n      return button;\\n    }\\n    // IE<9\\n    // which:  undefined\\n    // button: 0 0 0\\n    // button: 1 4 2 (onmouseup)\\n    return button === 2 ? 2 : button === 4 ? 1 : 0;\\n  },\\n  buttons: null,\\n  relatedTarget: function (event) {\\n    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);\\n  },\\n  // \\\"Proprietary\\\" Interface.\\n  pageX: function (event) {\\n    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;\\n  },\\n  pageY: function (event) {\\n    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;\\n  }\\n};\\n\\n/**\\n * @param {object} dispatchConfig Configuration used to dispatch this event.\\n * @param {string} dispatchMarker Marker identifying the event target.\\n * @param {object} nativeEvent Native browser event.\\n * @extends {SyntheticUIEvent}\\n */\\nfunction SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\\n  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\\n}\\n\\nSyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);\\n\\nmodule.exports = SyntheticMouseEvent;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"SyntheticMouseEvent\",\"dispatchConfig\",\"dispatchMarker\",\"nativeEvent\",\"nativeEventTarget\",\"SyntheticUIEvent\",\"call\",\"ViewportMetrics\",\"MouseEventInterface\",\"screenX\",\"screenY\",\"clientX\",\"clientY\",\"ctrlKey\",\"shiftKey\",\"altKey\",\"metaKey\",\"getModifierState\",\"getEventModifierState\",\"button\",\"event\",\"buttons\",\"relatedTarget\",\"fromElement\",\"srcElement\",\"toElement\",\"pageX\",\"currentScrollLeft\",\"pageY\",\"currentScrollTop\",\"augmentClass\"]\n}\n"]