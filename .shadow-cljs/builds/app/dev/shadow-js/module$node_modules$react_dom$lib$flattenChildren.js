["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react-dom/lib/flattenChildren.js"],"~:js","shadow$provide.module$node_modules$react_dom$lib$flattenChildren=function(global,process,require,module,exports,shadow$shims){var KeyEscapeUtils=require(\"module$node_modules$react_dom$lib$KeyEscapeUtils\"),traverseAllChildren=require(\"module$node_modules$react_dom$lib$traverseAllChildren\"),warning=require(\"module$node_modules$fbjs$lib$warning\"),ReactComponentTreeHook;module.exports=function(children,selfDebugID){if(null==children)return children;var result={};traverseAllChildren(children,function(traverseContext,\nchild,name){if(traverseContext&&\"object\"===typeof traverseContext){var keyUnique=void 0===traverseContext[name];ReactComponentTreeHook||(ReactComponentTreeHook=require(\"module$node_modules$react$lib$ReactComponentTreeHook\"));keyUnique||warning(!1,\"flattenChildren(...): Encountered two children with the same key, `%s`. Child keys must be unique; when two children share a key, only the first child will be used.%s\",KeyEscapeUtils.unescape(name),ReactComponentTreeHook.getStackAddendumByID(selfDebugID));\nkeyUnique&&null!=child&&(traverseContext[name]=child)}},result);return result}}","~:source","shadow$provide[\"module$node_modules$react_dom$lib$flattenChildren\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar KeyEscapeUtils = require('./KeyEscapeUtils');\nvar traverseAllChildren = require('./traverseAllChildren');\nvar warning = require('fbjs/lib/warning');\n\nvar ReactComponentTreeHook;\n\nif (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {\n  // Temporary hack.\n  // Inline requires don't work well with Jest:\n  // https://github.com/facebook/react/issues/7240\n  // Remove the inline requires when we don't need them anymore:\n  // https://github.com/facebook/react/pull/7178\n  ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\n}\n\n/**\n * @param {function} traverseContext Context passed through traversal.\n * @param {?ReactComponent} child React child component.\n * @param {!string} name String name of key path to child.\n * @param {number=} selfDebugID Optional debugID of the current internal instance.\n */\nfunction flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {\n  // We found a component instance.\n  if (traverseContext && typeof traverseContext === 'object') {\n    var result = traverseContext;\n    var keyUnique = result[name] === undefined;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!ReactComponentTreeHook) {\n        ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\n      }\n      if (!keyUnique) {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;\n      }\n    }\n    if (keyUnique && child != null) {\n      result[name] = child;\n    }\n  }\n}\n\n/**\n * Flattens children that are typically specified as `props.children`. Any null\n * children will not be included in the resulting object.\n * @return {!object} flattened children keyed by name.\n */\nfunction flattenChildren(children, selfDebugID) {\n  if (children == null) {\n    return children;\n  }\n  var result = {};\n\n  if (process.env.NODE_ENV !== 'production') {\n    traverseAllChildren(children, function (traverseContext, child, name) {\n      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);\n    }, result);\n  } else {\n    traverseAllChildren(children, flattenSingleChildIntoContext, result);\n  }\n  return result;\n}\n\nmodule.exports = flattenChildren;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$react$lib$ReactComponentTreeHook","~$shadow.js","~$module$node_modules$react_dom$lib$KeyEscapeUtils","~$module$node_modules$react_dom$lib$traverseAllChildren","~$module$node_modules$fbjs$lib$warning"]],"~:properties",["^5",[]],"~:compiled-at",1635270336845,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react_dom$lib$flattenChildren.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,kDAAA,CAAsE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAcnI,IAAIC,eAAiBJ,OAAA,CAAQ,kDAAR,CAArB,CACIK,oBAAsBL,OAAA,CAAQ,uDAAR,CAD1B,CAEIM,QAAUN,OAAA,CAAQ,sCAAR,CAFd,CAIIO,sBAyDJN,OAAAC,QAAA,CAhBAM,QAAwB,CAACC,QAAD,CAAWC,WAAX,CAAwB,CAC9C,GAAgB,IAAhB,EAAID,QAAJ,CACE,MAAOA,SAET,KAAIE,OAAS,EAGXN,oBAAA,CAAoBI,QAApB,CAA8B,QAAS,CAACG,eAAD;AAAkBC,KAAlB,CAAyBC,IAAzB,CAA+B,CA7BxE,GA8ByCF,eA9BzC,EAAkD,QAAlD,GAAuB,MA8BkBA,gBA9BzC,CAA4D,CAE1D,IAAIG,UAA6BC,IAAAA,EAA7BD,GA4BmCH,eA5BvB,CA4B+CE,IA5B/C,CAETP,uBAAL,GACEA,sBADF,CAC2BP,OAAA,CAAQ,sDAAR,CAD3B,CAGKe,UAAL,EAC0CT,OAAA,CAAQ,CAAA,CAAR,CAAe,wKAAf,CAAmMF,cAAAa,SAAA,CAsBhLH,IAtBgL,CAAnM,CAAkOP,sBAAAW,qBAAA,CAsBzMR,WAtByM,CAAlO,CAGxCK;SAAJ,EAA0B,IAA1B,EAmBwDF,KAnBxD,GAmBuCD,eAlBrC,CAkB6DE,IAlB7D,CADF,CAmBwDD,KAnBxD,CAX0D,CA6BY,CAAtE,CAEGF,MAFH,CAMF,OAAOA,OAbuC,CA3DmF;\",\n\"sources\":[\"node_modules/react-dom/lib/flattenChildren.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react_dom$lib$flattenChildren\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n/**\\n * Copyright 2013-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * \\n */\\n\\n'use strict';\\n\\nvar KeyEscapeUtils = require('./KeyEscapeUtils');\\nvar traverseAllChildren = require('./traverseAllChildren');\\nvar warning = require('fbjs/lib/warning');\\n\\nvar ReactComponentTreeHook;\\n\\nif (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {\\n  // Temporary hack.\\n  // Inline requires don't work well with Jest:\\n  // https://github.com/facebook/react/issues/7240\\n  // Remove the inline requires when we don't need them anymore:\\n  // https://github.com/facebook/react/pull/7178\\n  ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\\n}\\n\\n/**\\n * @param {function} traverseContext Context passed through traversal.\\n * @param {?ReactComponent} child React child component.\\n * @param {!string} name String name of key path to child.\\n * @param {number=} selfDebugID Optional debugID of the current internal instance.\\n */\\nfunction flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {\\n  // We found a component instance.\\n  if (traverseContext && typeof traverseContext === 'object') {\\n    var result = traverseContext;\\n    var keyUnique = result[name] === undefined;\\n    if (process.env.NODE_ENV !== 'production') {\\n      if (!ReactComponentTreeHook) {\\n        ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\\n      }\\n      if (!keyUnique) {\\n        process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;\\n      }\\n    }\\n    if (keyUnique && child != null) {\\n      result[name] = child;\\n    }\\n  }\\n}\\n\\n/**\\n * Flattens children that are typically specified as `props.children`. Any null\\n * children will not be included in the resulting object.\\n * @return {!object} flattened children keyed by name.\\n */\\nfunction flattenChildren(children, selfDebugID) {\\n  if (children == null) {\\n    return children;\\n  }\\n  var result = {};\\n\\n  if (process.env.NODE_ENV !== 'production') {\\n    traverseAllChildren(children, function (traverseContext, child, name) {\\n      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);\\n    }, result);\\n  } else {\\n    traverseAllChildren(children, flattenSingleChildIntoContext, result);\\n  }\\n  return result;\\n}\\n\\nmodule.exports = flattenChildren;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"KeyEscapeUtils\",\"traverseAllChildren\",\"warning\",\"ReactComponentTreeHook\",\"flattenChildren\",\"children\",\"selfDebugID\",\"result\",\"traverseContext\",\"child\",\"name\",\"keyUnique\",\"undefined\",\"unescape\",\"getStackAddendumByID\"]\n}\n"]