["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react-dom/lib/escapeTextContentForBrowser.js"],"~:js","shadow$provide.module$node_modules$react_dom$lib$escapeTextContentForBrowser=function(global,process,require,module,exports,shadow$shims){var matchHtmlRegExp=/[\"'&<>]/;module.exports=function(text){if(\"boolean\"===typeof text||\"number\"===typeof text)return\"\"+text;text=\"\"+text;var match=matchHtmlRegExp.exec(text);if(match){var html=\"\",index,lastIndex=0;for(index=match.index;index<text.length;index++){switch(text.charCodeAt(index)){case 34:match=\"\\x26quot;\";break;case 38:match=\"\\x26amp;\";break;case 39:match=\n\"\\x26#x27;\";break;case 60:match=\"\\x26lt;\";break;case 62:match=\"\\x26gt;\";break;default:continue}lastIndex!==index&&(html+=text.substring(lastIndex,index));lastIndex=index+1;html+=match}text=lastIndex!==index?html+text.substring(lastIndex,index):html}return text}}","~:source","shadow$provide[\"module$node_modules$react_dom$lib$escapeTextContentForBrowser\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright 2016-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * Based on the escape-html library, which is used under the MIT License below:\n *\n * Copyright (c) 2012-2013 TJ Holowaychuk\n * Copyright (c) 2015 Andreas Lubbe\n * Copyright (c) 2015 Tiancheng \"Timothy\" Gu\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * 'Software'), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n */\n\n'use strict';\n\n// code copied and modified from escape-html\n/**\n * Module variables.\n * @private\n */\n\nvar matchHtmlRegExp = /[\"'&<>]/;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n * @return {string}\n * @public\n */\n\nfunction escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        // \"\n        escape = '&quot;';\n        break;\n      case 38:\n        // &\n        escape = '&amp;';\n        break;\n      case 39:\n        // '\n        escape = '&#x27;'; // modified from escape-html; used to be '&#39'\n        break;\n      case 60:\n        // <\n        escape = '&lt;';\n        break;\n      case 62:\n        // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\n}\n// end code copied and modified from escape-html\n\n\n/**\n * Escapes text to prevent scripting attacks.\n *\n * @param {*} text Text value to escape.\n * @return {string} An escaped string.\n */\nfunction escapeTextContentForBrowser(text) {\n  if (typeof text === 'boolean' || typeof text === 'number') {\n    // this shortcircuit helps perf for types that we know will never have\n    // special characters, especially given that this function is used often\n    // for numeric dom ids.\n    return '' + text;\n  }\n  return escapeHtml(text);\n}\n\nmodule.exports = escapeTextContentForBrowser;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",[]],"~:compiled-at",1635270336830,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react_dom$lib$escapeTextContentForBrowser.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,8DAAA,CAAkF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CA4C/I,IAAIC,gBAAkB,SA8EtBH,OAAAC,QAAA,CAVAG,QAAoC,CAACC,IAAD,CAAO,CACzC,GAAoB,SAApB,GAAI,MAAOA,KAAX,EAAiD,QAAjD,GAAiC,MAAOA,KAAxC,CAIE,MAAO,EAAP,CAAYA,IA9DVC,KAAAA,CAAM,EAANA,CAgEcD,IA/DlB,KAAIE,MAAQJ,eAAAK,KAAA,CAAqBF,IAArB,CAEZ,IAAKC,KAAL,CAAA,CAKA,IAAIE,KAAO,EAAX,CACIC,KADJ,CAEIC,UAAY,CAEhB,KAAKD,KAAL,CAAaH,KAAAG,MAAb,CAA0BA,KAA1B,CAAkCJ,IAAAM,OAAlC,CAA8CF,KAAA,EAA9C,CAAuD,CACrD,OAAQJ,IAAAO,WAAA,CAAeH,KAAf,CAAR,EACE,KAAK,EAAL,CAEEI,KAAA,CAAS,WACT,MACF,MAAK,EAAL,CAEEA,KAAA,CAAS,UACT,MACF,MAAK,EAAL,CAEEA,KAAA;AAAS,WACT,MACF,MAAK,EAAL,CAEEA,KAAA,CAAS,SACT,MACF,MAAK,EAAL,CAEEA,KAAA,CAAS,SACT,MACF,SACE,QAtBJ,CAyBIH,SAAJ,GAAkBD,KAAlB,GACED,IADF,EACUH,IAAAS,UAAA,CAAcJ,SAAd,CAAyBD,KAAzB,CADV,CAIAC,UAAA,CAAYD,KAAZ,CAAoB,CACpBD,KAAA,EAAQK,KA/B6C,CAkCvD,IAAA,CAAOH,SAAA,GAAcD,KAAd,CAAsBD,IAAtB,CAA6BH,IAAAS,UAAA,CAAcJ,SAAd,CAAyBD,KAAzB,CAA7B,CAA+DD,IA3CtE,CA6DA,MAAO,KAPkC,CAhHoG;\",\n\"sources\":[\"node_modules/react-dom/lib/escapeTextContentForBrowser.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react_dom$lib$escapeTextContentForBrowser\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n/**\\n * Copyright 2016-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * Based on the escape-html library, which is used under the MIT License below:\\n *\\n * Copyright (c) 2012-2013 TJ Holowaychuk\\n * Copyright (c) 2015 Andreas Lubbe\\n * Copyright (c) 2015 Tiancheng \\\"Timothy\\\" Gu\\n *\\n * Permission is hereby granted, free of charge, to any person obtaining\\n * a copy of this software and associated documentation files (the\\n * 'Software'), to deal in the Software without restriction, including\\n * without limitation the rights to use, copy, modify, merge, publish,\\n * distribute, sublicense, and/or sell copies of the Software, and to\\n * permit persons to whom the Software is furnished to do so, subject to\\n * the following conditions:\\n *\\n * The above copyright notice and this permission notice shall be\\n * included in all copies or substantial portions of the Software.\\n *\\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\\n * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\\n * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\\n * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\\n *\\n */\\n\\n'use strict';\\n\\n// code copied and modified from escape-html\\n/**\\n * Module variables.\\n * @private\\n */\\n\\nvar matchHtmlRegExp = /[\\\"'&<>]/;\\n\\n/**\\n * Escape special characters in the given string of html.\\n *\\n * @param  {string} string The string to escape for inserting into HTML\\n * @return {string}\\n * @public\\n */\\n\\nfunction escapeHtml(string) {\\n  var str = '' + string;\\n  var match = matchHtmlRegExp.exec(str);\\n\\n  if (!match) {\\n    return str;\\n  }\\n\\n  var escape;\\n  var html = '';\\n  var index = 0;\\n  var lastIndex = 0;\\n\\n  for (index = match.index; index < str.length; index++) {\\n    switch (str.charCodeAt(index)) {\\n      case 34:\\n        // \\\"\\n        escape = '&quot;';\\n        break;\\n      case 38:\\n        // &\\n        escape = '&amp;';\\n        break;\\n      case 39:\\n        // '\\n        escape = '&#x27;'; // modified from escape-html; used to be '&#39'\\n        break;\\n      case 60:\\n        // <\\n        escape = '&lt;';\\n        break;\\n      case 62:\\n        // >\\n        escape = '&gt;';\\n        break;\\n      default:\\n        continue;\\n    }\\n\\n    if (lastIndex !== index) {\\n      html += str.substring(lastIndex, index);\\n    }\\n\\n    lastIndex = index + 1;\\n    html += escape;\\n  }\\n\\n  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\\n}\\n// end code copied and modified from escape-html\\n\\n\\n/**\\n * Escapes text to prevent scripting attacks.\\n *\\n * @param {*} text Text value to escape.\\n * @return {string} An escaped string.\\n */\\nfunction escapeTextContentForBrowser(text) {\\n  if (typeof text === 'boolean' || typeof text === 'number') {\\n    // this shortcircuit helps perf for types that we know will never have\\n    // special characters, especially given that this function is used often\\n    // for numeric dom ids.\\n    return '' + text;\\n  }\\n  return escapeHtml(text);\\n}\\n\\nmodule.exports = escapeTextContentForBrowser;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"matchHtmlRegExp\",\"escapeTextContentForBrowser\",\"text\",\"str\",\"match\",\"exec\",\"html\",\"index\",\"lastIndex\",\"length\",\"charCodeAt\",\"escape\",\"substring\"]\n}\n"]