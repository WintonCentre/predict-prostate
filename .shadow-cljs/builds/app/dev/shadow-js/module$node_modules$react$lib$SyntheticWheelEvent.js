["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react/lib/SyntheticWheelEvent.js"],"~:js","shadow$provide.module$node_modules$react$lib$SyntheticWheelEvent=function(global,require,module,exports){function SyntheticWheelEvent(dispatchConfig,dispatchMarker,nativeEvent,nativeEventTarget){return SyntheticMouseEvent.call(this,dispatchConfig,dispatchMarker,nativeEvent,nativeEventTarget)}var SyntheticMouseEvent=require(\"module$node_modules$react$lib$SyntheticMouseEvent\");SyntheticMouseEvent.augmentClass(SyntheticWheelEvent,{deltaX:function(event){return\"deltaX\"in event?event.deltaX:\"wheelDeltaX\"in\nevent?-event.wheelDeltaX:0},deltaY:function(event){return\"deltaY\"in event?event.deltaY:\"wheelDeltaY\"in event?-event.wheelDeltaY:\"wheelDelta\"in event?-event.wheelDelta:0},deltaZ:null,deltaMode:null});module.exports=SyntheticWheelEvent}","~:source","shadow$provide[\"module$node_modules$react$lib$SyntheticWheelEvent\"] = function(global,require,module,exports) {\n/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticWheelEvent\n */\n\n'use strict';\n\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\n\n/**\n * @interface WheelEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar WheelEventInterface = {\n  deltaX: function (event) {\n    return 'deltaX' in event ? event.deltaX :\n    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).\n    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;\n  },\n  deltaY: function (event) {\n    return 'deltaY' in event ? event.deltaY :\n    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).\n    'wheelDeltaY' in event ? -event.wheelDeltaY :\n    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).\n    'wheelDelta' in event ? -event.wheelDelta : 0;\n  },\n  deltaZ: null,\n\n  // Browsers without \"deltaMode\" is reporting in raw wheel delta where one\n  // notch on the scroll is always +/- 120, roughly equivalent to pixels.\n  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or\n  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.\n  deltaMode: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticMouseEvent}\n */\nfunction SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);\n\nmodule.exports = SyntheticWheelEvent;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$react$lib$SyntheticMouseEvent"]],"~:properties",["^5",["deltaMode","deltaZ","deltaX","deltaY"]],"~:compiled-at",1635250628419,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react$lib$SyntheticWheelEvent.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,iDAAA,CAAsE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAgD9GC,QAASA,oBAAmB,CAACC,cAAD,CAAiBC,cAAjB,CAAiCC,WAAjC,CAA8CC,iBAA9C,CAAiE,CAC3F,MAAOC,oBAAoBC,CAAAA,IAApB,CAAyB,IAAzB,CAA+BL,cAA/B,CAA+CC,cAA/C,CAA+DC,WAA/D,CAA4EC,iBAA5E,CADoF,CAlC7F,IAAIC,oBAAsBR,OAAA,CAAQ,mDAAR,CAsC1BQ,oBAAoBE,CAAAA,YAApB,CAAiCP,mBAAjC,CAhC0BQ,CACxBC,OAAQA,QAAS,CAACC,KAAD,CAAQ,CACvB,MAAO,QAAA,EAAYA,MAAZ,CAAoBA,KAAMD,CAAAA,MAA1B,CAEP,aAAA;AAAiBC,KAAjB,CAAyB,CAACA,KAAMC,CAAAA,WAAhC,CAA8C,CAHvB,CADDH,CAMxBI,OAAQA,QAAS,CAACF,KAAD,CAAQ,CACvB,MAAO,QAAA,EAAYA,MAAZ,CAAoBA,KAAME,CAAAA,MAA1B,CAEP,aAAA,EAAiBF,MAAjB,CAAyB,CAACA,KAAMG,CAAAA,WAAhC,CAEA,YAAA,EAAgBH,MAAhB,CAAwB,CAACA,KAAMI,CAAAA,UAA/B,CAA4C,CALrB,CANDN,CAaxBO,OAAQ,IAbgBP,CAmBxBQ,UAAW,IAnBaR,CAgC1B,CAEAV,OAAOC,CAAAA,OAAP,CAAiBC,mBAtD6F;\",\n\"sources\":[\"node_modules/react/lib/SyntheticWheelEvent.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react$lib$SyntheticWheelEvent\\\"] = function(global,require,module,exports) {\\n/**\\n * Copyright 2013-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule SyntheticWheelEvent\\n */\\n\\n'use strict';\\n\\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\\n\\n/**\\n * @interface WheelEvent\\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\\n */\\nvar WheelEventInterface = {\\n  deltaX: function (event) {\\n    return 'deltaX' in event ? event.deltaX :\\n    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).\\n    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;\\n  },\\n  deltaY: function (event) {\\n    return 'deltaY' in event ? event.deltaY :\\n    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).\\n    'wheelDeltaY' in event ? -event.wheelDeltaY :\\n    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).\\n    'wheelDelta' in event ? -event.wheelDelta : 0;\\n  },\\n  deltaZ: null,\\n\\n  // Browsers without \\\"deltaMode\\\" is reporting in raw wheel delta where one\\n  // notch on the scroll is always +/- 120, roughly equivalent to pixels.\\n  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or\\n  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.\\n  deltaMode: null\\n};\\n\\n/**\\n * @param {object} dispatchConfig Configuration used to dispatch this event.\\n * @param {string} dispatchMarker Marker identifying the event target.\\n * @param {object} nativeEvent Native browser event.\\n * @extends {SyntheticMouseEvent}\\n */\\nfunction SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\\n  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\\n}\\n\\nSyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);\\n\\nmodule.exports = SyntheticWheelEvent;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"SyntheticWheelEvent\",\"dispatchConfig\",\"dispatchMarker\",\"nativeEvent\",\"nativeEventTarget\",\"SyntheticMouseEvent\",\"call\",\"augmentClass\",\"WheelEventInterface\",\"deltaX\",\"event\",\"wheelDeltaX\",\"deltaY\",\"wheelDeltaY\",\"wheelDelta\",\"deltaZ\",\"deltaMode\"]\n}\n"]