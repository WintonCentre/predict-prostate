["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/fbjs/lib/keyMirror.js"],"~:js","shadow$provide.module$node_modules$fbjs$lib$keyMirror=function(global,require,module,exports){var invariant=require(\"module$node_modules$fbjs$lib$invariant\");module.exports=function(obj){var ret={},key;obj instanceof Object&&!Array.isArray(obj)?void 0:invariant(!1,\"keyMirror(...): Argument must be an object.\");for(key in obj)obj.hasOwnProperty(key)&&(ret[key]=key);return ret}}","~:source","shadow$provide[\"module$node_modules$fbjs$lib$keyMirror\"] = function(global,require,module,exports) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks static-only\n */\n\n'use strict';\n\nvar invariant = require('./invariant');\n\n/**\n * Constructs an enumeration with keys equal to their value.\n *\n * For example:\n *\n *   var COLORS = keyMirror({blue: null, red: null});\n *   var myColor = COLORS.blue;\n *   var isColorValid = !!COLORS[myColor];\n *\n * The last line could not be performed if the values of the generated enum were\n * not equal to their keys.\n *\n *   Input:  {key1: val1, key2: val2}\n *   Output: {key1: key1, key2: key2}\n *\n * @param {object} obj\n * @return {object}\n */\nvar keyMirror = function keyMirror(obj) {\n  var ret = {};\n  var key;\n  !(obj instanceof Object && !Array.isArray(obj)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : void 0;\n  for (key in obj) {\n    if (!obj.hasOwnProperty(key)) {\n      continue;\n    }\n    ret[key] = key;\n  }\n  return ret;\n};\n\nmodule.exports = keyMirror;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$fbjs$lib$invariant"]],"~:properties",["^5",[]],"~:compiled-at",1635250628295,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$fbjs$lib$keyMirror.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,sCAAA,CAA2D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYnG,IAAIC,UAAYH,OAAA,CAAQ,wCAAR,CAiChBC,OAAOC,CAAAA,OAAP,CAbgBE,QAAkB,CAACC,GAAD,CAAM,CACtC,IAAIC,IAAM,EAAV,CACIC,GACFF,IAAF,WAAiBG,OAAjB,EAA2B,CAACC,KAAMC,CAAAA,OAAN,CAAcL,GAAd,CAA5B,CAA+K,IAAK,EAApL,CAA0FF,SAAA,CAAU,CAAA,CAAV,CAAiB,6CAAjB,CAC1F,KAAKI,GAAL,GAAYF,IAAZ,CACOA,GAAIM,CAAAA,cAAJ,CAAmBJ,GAAnB,CAAL,GAGAD,GAAA,CAAIC,GAAJ,CAHA,CAGWA,GAHX,CAKF,OAAOD,IAV+B,CAhC2D;\",\n\"sources\":[\"node_modules/fbjs/lib/keyMirror.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$fbjs$lib$keyMirror\\\"] = function(global,require,module,exports) {\\n/**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n *\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\nvar invariant = require('./invariant');\\n\\n/**\\n * Constructs an enumeration with keys equal to their value.\\n *\\n * For example:\\n *\\n *   var COLORS = keyMirror({blue: null, red: null});\\n *   var myColor = COLORS.blue;\\n *   var isColorValid = !!COLORS[myColor];\\n *\\n * The last line could not be performed if the values of the generated enum were\\n * not equal to their keys.\\n *\\n *   Input:  {key1: val1, key2: val2}\\n *   Output: {key1: key1, key2: key2}\\n *\\n * @param {object} obj\\n * @return {object}\\n */\\nvar keyMirror = function keyMirror(obj) {\\n  var ret = {};\\n  var key;\\n  !(obj instanceof Object && !Array.isArray(obj)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : void 0;\\n  for (key in obj) {\\n    if (!obj.hasOwnProperty(key)) {\\n      continue;\\n    }\\n    ret[key] = key;\\n  }\\n  return ret;\\n};\\n\\nmodule.exports = keyMirror;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"invariant\",\"keyMirror\",\"obj\",\"ret\",\"key\",\"Object\",\"Array\",\"isArray\",\"hasOwnProperty\"]\n}\n"]