["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react/lib/onlyChild.js"],"~:js","shadow$provide.module$node_modules$react$lib$onlyChild=function(global,process,require,module,exports,shadow$shims){require(\"module$node_modules$react$lib$reactProdInvariant\");var ReactElement=require(\"module$node_modules$react$lib$ReactElement\"),invariant=require(\"module$node_modules$fbjs$lib$invariant\");module.exports=function(children){ReactElement.isValidElement(children)?void 0:invariant(!1,\"React.Children.only expected to receive a single React element child.\");return children}}","~:source","shadow$provide[\"module$node_modules$react$lib$onlyChild\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactElement = require('./ReactElement');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\nfunction onlyChild(children) {\n  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;\n  return children;\n}\n\nmodule.exports = onlyChild;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$fbjs$lib$invariant","~$module$node_modules$react$lib$reactProdInvariant","~$module$node_modules$react$lib$ReactElement"]],"~:properties",["^5",[]],"~:compiled-at",1635270336799,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react$lib$onlyChild.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,wCAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAYpGH,OAAA,CAAQ,kDAAR,CAErB,KAAII,aAAeJ,OAAA,CAAQ,4CAAR,CAAnB,CAEIK,UAAYL,OAAA,CAAQ,wCAAR,CAqBhBC,OAAAC,QAAA,CALAI,QAAkB,CAACC,QAAD,CAAW,CAC1BH,YAAAI,eAAA,CAA4BD,QAA5B,CAAD,CAAqM,IAAK,EAA1M,CAAiFF,SAAA,CAAU,CAAA,CAAV,CAAiB,uEAAjB,CACjF,OAAOE,SAFoB,CAhC4F;\",\n\"sources\":[\"node_modules/react/lib/onlyChild.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react$lib$onlyChild\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n/**\\n * Copyright 2013-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n */\\n'use strict';\\n\\nvar _prodInvariant = require('./reactProdInvariant');\\n\\nvar ReactElement = require('./ReactElement');\\n\\nvar invariant = require('fbjs/lib/invariant');\\n\\n/**\\n * Returns the first child in a collection of children and verifies that there\\n * is only one child in the collection.\\n *\\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only\\n *\\n * The current implementation of this function assumes that a single child gets\\n * passed without a wrapper, but the purpose of this helper function is to\\n * abstract away the particular structure of children.\\n *\\n * @param {?object} children Child collection structure.\\n * @return {ReactElement} The first and only `ReactElement` contained in the\\n * structure.\\n */\\nfunction onlyChild(children) {\\n  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;\\n  return children;\\n}\\n\\nmodule.exports = onlyChild;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"ReactElement\",\"invariant\",\"onlyChild\",\"children\",\"isValidElement\"]\n}\n"]