["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react-dom/lib/ReactDOMSelect.js"],"~:js","shadow$provide.module$node_modules$react_dom$lib$ReactDOMSelect=function(global,process,require,module,exports,shadow$shims){function updateOptionsIfPendingUpdateAndMounted(){if(this._rootNodeID&&this._wrapperState.pendingUpdate){this._wrapperState.pendingUpdate=!1;var props=this._currentElement.props,value=LinkedValueUtils.getValue(props);null!=value&&updateOptions(this,!!props.multiple,value)}}function getDeclarationErrorAddendum(owner){return owner&&(owner=owner.getName())?\" Check the render method of `\"+\nowner+\"`.\":\"\"}function updateOptions(inst,multiple,propValue){var i;inst=ReactDOMComponentTree.getNodeFromInstance(inst).options;if(multiple){multiple={};for(i=0;i<propValue.length;i++)multiple[\"\"+propValue[i]]=!0;for(i=0;i<inst.length;i++)propValue=multiple.hasOwnProperty(inst[i].value),inst[i].selected!==propValue&&(inst[i].selected=propValue)}else{multiple=\"\"+propValue;for(i=0;i<inst.length;i++)if(inst[i].value===multiple){inst[i].selected=!0;return}inst.length&&(inst[0].selected=!0)}}function _handleChange(event){event=\nLinkedValueUtils.executeOnChange(this._currentElement.props,event);this._rootNodeID&&(this._wrapperState.pendingUpdate=!0);ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted,this);return event}var _assign=require(\"module$node_modules$object_assign$index\"),LinkedValueUtils=require(\"module$node_modules$react_dom$lib$LinkedValueUtils\"),ReactDOMComponentTree=require(\"module$node_modules$react_dom$lib$ReactDOMComponentTree\"),ReactUpdates=require(\"module$node_modules$react_dom$lib$ReactUpdates\"),\nwarning=require(\"module$node_modules$fbjs$lib$warning\"),didWarnValueLink=!1,didWarnValueDefaultValue=!1,valuePropNames=[\"value\",\"defaultValue\"];module.exports={getHostProps:function(inst,props){return _assign({},props,{onChange:inst._wrapperState.onChange,value:void 0})},mountWrapper:function(inst,props){var owner=inst._currentElement._owner;LinkedValueUtils.checkPropTypes(\"select\",props,owner);void 0===props.valueLink||didWarnValueLink||(warning(!1,\"`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.\"),\ndidWarnValueLink=!0);for(var i=0;i<valuePropNames.length;i++){var propName=valuePropNames[i];if(null!=props[propName]){var isArray=Array.isArray(props[propName]);props.multiple&&!isArray?warning(!1,\"The `%s` prop supplied to \\x3cselect\\x3e must be an array if `multiple` is true.%s\",propName,getDeclarationErrorAddendum(owner)):!props.multiple&&isArray&&warning(!1,\"The `%s` prop supplied to \\x3cselect\\x3e must be a scalar value if `multiple` is false.%s\",propName,getDeclarationErrorAddendum(owner))}}owner=\nLinkedValueUtils.getValue(props);inst._wrapperState={pendingUpdate:!1,initialValue:null!=owner?owner:props.defaultValue,listeners:null,onChange:_handleChange.bind(inst),wasMultiple:!!props.multiple};void 0===props.value||void 0===props.defaultValue||didWarnValueDefaultValue||(warning(!1,\"Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://fb.me/react-controlled-components\"),\ndidWarnValueDefaultValue=!0)},getSelectValueContext:function(inst){return inst._wrapperState.initialValue},postUpdateWrapper:function(inst){var props=inst._currentElement.props;inst._wrapperState.initialValue=void 0;var wasMultiple=inst._wrapperState.wasMultiple;inst._wrapperState.wasMultiple=!!props.multiple;var value=LinkedValueUtils.getValue(props);null!=value?(inst._wrapperState.pendingUpdate=!1,updateOptions(inst,!!props.multiple,value)):wasMultiple!==!!props.multiple&&(null!=props.defaultValue?\nupdateOptions(inst,!!props.multiple,props.defaultValue):updateOptions(inst,!!props.multiple,props.multiple?[]:\"\"))}}}","~:source","shadow$provide[\"module$node_modules$react_dom$lib$ReactDOMSelect\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar LinkedValueUtils = require('./LinkedValueUtils');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar warning = require('fbjs/lib/warning');\n\nvar didWarnValueLink = false;\nvar didWarnValueDefaultValue = false;\n\nfunction updateOptionsIfPendingUpdateAndMounted() {\n  if (this._rootNodeID && this._wrapperState.pendingUpdate) {\n    this._wrapperState.pendingUpdate = false;\n\n    var props = this._currentElement.props;\n    var value = LinkedValueUtils.getValue(props);\n\n    if (value != null) {\n      updateOptions(this, Boolean(props.multiple), value);\n    }\n  }\n}\n\nfunction getDeclarationErrorAddendum(owner) {\n  if (owner) {\n    var name = owner.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\nvar valuePropNames = ['value', 'defaultValue'];\n\n/**\n * Validation function for `value` and `defaultValue`.\n * @private\n */\nfunction checkSelectPropTypes(inst, props) {\n  var owner = inst._currentElement._owner;\n  LinkedValueUtils.checkPropTypes('select', props, owner);\n\n  if (props.valueLink !== undefined && !didWarnValueLink) {\n    process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;\n    didWarnValueLink = true;\n  }\n\n  for (var i = 0; i < valuePropNames.length; i++) {\n    var propName = valuePropNames[i];\n    if (props[propName] == null) {\n      continue;\n    }\n    var isArray = Array.isArray(props[propName]);\n    if (props.multiple && !isArray) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;\n    } else if (!props.multiple && isArray) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;\n    }\n  }\n}\n\n/**\n * @param {ReactDOMComponent} inst\n * @param {boolean} multiple\n * @param {*} propValue A stringable (with `multiple`, a list of stringables).\n * @private\n */\nfunction updateOptions(inst, multiple, propValue) {\n  var selectedValue, i;\n  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;\n\n  if (multiple) {\n    selectedValue = {};\n    for (i = 0; i < propValue.length; i++) {\n      selectedValue['' + propValue[i]] = true;\n    }\n    for (i = 0; i < options.length; i++) {\n      var selected = selectedValue.hasOwnProperty(options[i].value);\n      if (options[i].selected !== selected) {\n        options[i].selected = selected;\n      }\n    }\n  } else {\n    // Do not set `select.value` as exact behavior isn't consistent across all\n    // browsers for all cases.\n    selectedValue = '' + propValue;\n    for (i = 0; i < options.length; i++) {\n      if (options[i].value === selectedValue) {\n        options[i].selected = true;\n        return;\n      }\n    }\n    if (options.length) {\n      options[0].selected = true;\n    }\n  }\n}\n\n/**\n * Implements a <select> host component that allows optionally setting the\n * props `value` and `defaultValue`. If `multiple` is false, the prop must be a\n * stringable. If `multiple` is true, the prop must be an array of stringables.\n *\n * If `value` is not supplied (or null/undefined), user actions that change the\n * selected option will trigger updates to the rendered options.\n *\n * If it is supplied (and not null/undefined), the rendered options will not\n * update in response to user actions. Instead, the `value` prop must change in\n * order for the rendered options to update.\n *\n * If `defaultValue` is provided, any options with the supplied values will be\n * selected.\n */\nvar ReactDOMSelect = {\n  getHostProps: function (inst, props) {\n    return _assign({}, props, {\n      onChange: inst._wrapperState.onChange,\n      value: undefined\n    });\n  },\n\n  mountWrapper: function (inst, props) {\n    if (process.env.NODE_ENV !== 'production') {\n      checkSelectPropTypes(inst, props);\n    }\n\n    var value = LinkedValueUtils.getValue(props);\n    inst._wrapperState = {\n      pendingUpdate: false,\n      initialValue: value != null ? value : props.defaultValue,\n      listeners: null,\n      onChange: _handleChange.bind(inst),\n      wasMultiple: Boolean(props.multiple)\n    };\n\n    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;\n      didWarnValueDefaultValue = true;\n    }\n  },\n\n  getSelectValueContext: function (inst) {\n    // ReactDOMOption looks at this initial value so the initial generated\n    // markup has correct `selected` attributes\n    return inst._wrapperState.initialValue;\n  },\n\n  postUpdateWrapper: function (inst) {\n    var props = inst._currentElement.props;\n\n    // After the initial mount, we control selected-ness manually so don't pass\n    // this value down\n    inst._wrapperState.initialValue = undefined;\n\n    var wasMultiple = inst._wrapperState.wasMultiple;\n    inst._wrapperState.wasMultiple = Boolean(props.multiple);\n\n    var value = LinkedValueUtils.getValue(props);\n    if (value != null) {\n      inst._wrapperState.pendingUpdate = false;\n      updateOptions(inst, Boolean(props.multiple), value);\n    } else if (wasMultiple !== Boolean(props.multiple)) {\n      // For simplicity, reapply `defaultValue` if `multiple` is toggled.\n      if (props.defaultValue != null) {\n        updateOptions(inst, Boolean(props.multiple), props.defaultValue);\n      } else {\n        // Revert the select back to its default unselected state.\n        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');\n      }\n    }\n  }\n};\n\nfunction _handleChange(event) {\n  var props = this._currentElement.props;\n  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n\n  if (this._rootNodeID) {\n    this._wrapperState.pendingUpdate = true;\n  }\n  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);\n  return returnValue;\n}\n\nmodule.exports = ReactDOMSelect;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$react_dom$lib$ReactUpdates","~$module$node_modules$object_assign$index","~$shadow.js","~$module$node_modules$react_dom$lib$ReactDOMComponentTree","~$module$node_modules$fbjs$lib$warning","~$module$node_modules$react_dom$lib$LinkedValueUtils"]],"~:properties",["^5",["selected","getHostProps","onChange","initialValue","postUpdateWrapper","_wrapperState","getSelectValueContext","value","pendingUpdate","wasMultiple","listeners","mountWrapper"]],"~:compiled-at",1635270336840,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react_dom$lib$ReactDOMSelect.js\",\n\"lineCount\":8,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/react-dom/lib/ReactDOMSelect.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react_dom$lib$ReactDOMSelect\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n/**\\n * Copyright 2013-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n */\\n\\n'use strict';\\n\\nvar _assign = require('object-assign');\\n\\nvar LinkedValueUtils = require('./LinkedValueUtils');\\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\\nvar ReactUpdates = require('./ReactUpdates');\\n\\nvar warning = require('fbjs/lib/warning');\\n\\nvar didWarnValueLink = false;\\nvar didWarnValueDefaultValue = false;\\n\\nfunction updateOptionsIfPendingUpdateAndMounted() {\\n  if (this._rootNodeID && this._wrapperState.pendingUpdate) {\\n    this._wrapperState.pendingUpdate = false;\\n\\n    var props = this._currentElement.props;\\n    var value = LinkedValueUtils.getValue(props);\\n\\n    if (value != null) {\\n      updateOptions(this, Boolean(props.multiple), value);\\n    }\\n  }\\n}\\n\\nfunction getDeclarationErrorAddendum(owner) {\\n  if (owner) {\\n    var name = owner.getName();\\n    if (name) {\\n      return ' Check the render method of `' + name + '`.';\\n    }\\n  }\\n  return '';\\n}\\n\\nvar valuePropNames = ['value', 'defaultValue'];\\n\\n/**\\n * Validation function for `value` and `defaultValue`.\\n * @private\\n */\\nfunction checkSelectPropTypes(inst, props) {\\n  var owner = inst._currentElement._owner;\\n  LinkedValueUtils.checkPropTypes('select', props, owner);\\n\\n  if (props.valueLink !== undefined && !didWarnValueLink) {\\n    process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;\\n    didWarnValueLink = true;\\n  }\\n\\n  for (var i = 0; i < valuePropNames.length; i++) {\\n    var propName = valuePropNames[i];\\n    if (props[propName] == null) {\\n      continue;\\n    }\\n    var isArray = Array.isArray(props[propName]);\\n    if (props.multiple && !isArray) {\\n      process.env.NODE_ENV !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;\\n    } else if (!props.multiple && isArray) {\\n      process.env.NODE_ENV !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;\\n    }\\n  }\\n}\\n\\n/**\\n * @param {ReactDOMComponent} inst\\n * @param {boolean} multiple\\n * @param {*} propValue A stringable (with `multiple`, a list of stringables).\\n * @private\\n */\\nfunction updateOptions(inst, multiple, propValue) {\\n  var selectedValue, i;\\n  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;\\n\\n  if (multiple) {\\n    selectedValue = {};\\n    for (i = 0; i < propValue.length; i++) {\\n      selectedValue['' + propValue[i]] = true;\\n    }\\n    for (i = 0; i < options.length; i++) {\\n      var selected = selectedValue.hasOwnProperty(options[i].value);\\n      if (options[i].selected !== selected) {\\n        options[i].selected = selected;\\n      }\\n    }\\n  } else {\\n    // Do not set `select.value` as exact behavior isn't consistent across all\\n    // browsers for all cases.\\n    selectedValue = '' + propValue;\\n    for (i = 0; i < options.length; i++) {\\n      if (options[i].value === selectedValue) {\\n        options[i].selected = true;\\n        return;\\n      }\\n    }\\n    if (options.length) {\\n      options[0].selected = true;\\n    }\\n  }\\n}\\n\\n/**\\n * Implements a <select> host component that allows optionally setting the\\n * props `value` and `defaultValue`. If `multiple` is false, the prop must be a\\n * stringable. If `multiple` is true, the prop must be an array of stringables.\\n *\\n * If `value` is not supplied (or null/undefined), user actions that change the\\n * selected option will trigger updates to the rendered options.\\n *\\n * If it is supplied (and not null/undefined), the rendered options will not\\n * update in response to user actions. Instead, the `value` prop must change in\\n * order for the rendered options to update.\\n *\\n * If `defaultValue` is provided, any options with the supplied values will be\\n * selected.\\n */\\nvar ReactDOMSelect = {\\n  getHostProps: function (inst, props) {\\n    return _assign({}, props, {\\n      onChange: inst._wrapperState.onChange,\\n      value: undefined\\n    });\\n  },\\n\\n  mountWrapper: function (inst, props) {\\n    if (process.env.NODE_ENV !== 'production') {\\n      checkSelectPropTypes(inst, props);\\n    }\\n\\n    var value = LinkedValueUtils.getValue(props);\\n    inst._wrapperState = {\\n      pendingUpdate: false,\\n      initialValue: value != null ? value : props.defaultValue,\\n      listeners: null,\\n      onChange: _handleChange.bind(inst),\\n      wasMultiple: Boolean(props.multiple)\\n    };\\n\\n    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {\\n      process.env.NODE_ENV !== 'production' ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;\\n      didWarnValueDefaultValue = true;\\n    }\\n  },\\n\\n  getSelectValueContext: function (inst) {\\n    // ReactDOMOption looks at this initial value so the initial generated\\n    // markup has correct `selected` attributes\\n    return inst._wrapperState.initialValue;\\n  },\\n\\n  postUpdateWrapper: function (inst) {\\n    var props = inst._currentElement.props;\\n\\n    // After the initial mount, we control selected-ness manually so don't pass\\n    // this value down\\n    inst._wrapperState.initialValue = undefined;\\n\\n    var wasMultiple = inst._wrapperState.wasMultiple;\\n    inst._wrapperState.wasMultiple = Boolean(props.multiple);\\n\\n    var value = LinkedValueUtils.getValue(props);\\n    if (value != null) {\\n      inst._wrapperState.pendingUpdate = false;\\n      updateOptions(inst, Boolean(props.multiple), value);\\n    } else if (wasMultiple !== Boolean(props.multiple)) {\\n      // For simplicity, reapply `defaultValue` if `multiple` is toggled.\\n      if (props.defaultValue != null) {\\n        updateOptions(inst, Boolean(props.multiple), props.defaultValue);\\n      } else {\\n        // Revert the select back to its default unselected state.\\n        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');\\n      }\\n    }\\n  }\\n};\\n\\nfunction _handleChange(event) {\\n  var props = this._currentElement.props;\\n  var returnValue = LinkedValueUtils.executeOnChange(props, event);\\n\\n  if (this._rootNodeID) {\\n    this._wrapperState.pendingUpdate = true;\\n  }\\n  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);\\n  return returnValue;\\n}\\n\\nmodule.exports = ReactDOMSelect;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"updateOptionsIfPendingUpdateAndMounted\",\"_rootNodeID\",\"_wrapperState\",\"pendingUpdate\",\"props\",\"_currentElement\",\"value\",\"LinkedValueUtils\",\"getValue\",\"updateOptions\",\"multiple\",\"getDeclarationErrorAddendum\",\"owner\",\"name\",\"getName\",\"inst\",\"propValue\",\"i\",\"options\",\"ReactDOMComponentTree\",\"getNodeFromInstance\",\"selectedValue\",\"length\",\"selected\",\"hasOwnProperty\",\"_handleChange\",\"event\",\"returnValue\",\"executeOnChange\",\"ReactUpdates\",\"asap\",\"_assign\",\"warning\",\"didWarnValueLink\",\"didWarnValueDefaultValue\",\"valuePropNames\",\"ReactDOMSelect\",\"getHostProps\",\"onChange\",\"undefined\",\"mountWrapper\",\"_owner\",\"checkPropTypes\",\"valueLink\",\"propName\",\"isArray\",\"Array\",\"initialValue\",\"defaultValue\",\"listeners\",\"bind\",\"wasMultiple\",\"getSelectValueContext\",\"postUpdateWrapper\"]\n}\n"]