["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react-dom/lib/ReactInstanceMap.js"],"~:js","shadow$provide.module$node_modules$react_dom$lib$ReactInstanceMap=function(global,process,require,module,exports,shadow$shims){module.exports={remove:function(key){key._reactInternalInstance=void 0},get:function(key){return key._reactInternalInstance},has:function(key){return void 0!==key._reactInternalInstance},set:function(key,value){key._reactInternalInstance=value}}}","~:source","shadow$provide[\"module$node_modules$react_dom$lib$ReactInstanceMap\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\n * instance (key) and the internal representation (value). This allows public\n * methods to accept the user facing instance as an argument and map them back\n * to internal methods.\n */\n\n// TODO: Replace this with ES6: var ReactInstanceMap = new Map();\n\nvar ReactInstanceMap = {\n\n  /**\n   * This API should be called `delete` but we'd have to make sure to always\n   * transform these to strings for IE support. When this transform is fully\n   * supported we can rename it.\n   */\n  remove: function (key) {\n    key._reactInternalInstance = undefined;\n  },\n\n  get: function (key) {\n    return key._reactInternalInstance;\n  },\n\n  has: function (key) {\n    return key._reactInternalInstance !== undefined;\n  },\n\n  set: function (key, value) {\n    key._reactInternalInstance = value;\n  }\n\n};\n\nmodule.exports = ReactInstanceMap;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["remove","_reactInternalInstance","set","has","get"]],"~:compiled-at",1635270336841,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react_dom$lib$ReactInstanceMap.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,mDAAA,CAAuE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CA+CpIF,MAAAC,QAAA,CAzBuBE,CAOrBC,OAAQA,QAAS,CAACC,GAAD,CAAM,CACrBA,GAAAC,uBAAA,CAA6BC,IAAAA,EADR,CAPFJ,CAWrBK,IAAKA,QAAS,CAACH,GAAD,CAAM,CAClB,MAAOA,IAAAC,uBADW,CAXCH,CAerBM,IAAKA,QAAS,CAACJ,GAAD,CAAM,CAClB,MAAsCE,KAAAA,EAAtC,GAAOF,GAAAC,uBADW,CAfCH,CAmBrBO,IAAKA,QAAS,CAACL,GAAD,CAAMM,KAAN,CAAa,CACzBN,GAAAC,uBAAA,CAA6BK,KADJ,CAnBNR,CAtB6G;\",\n\"sources\":[\"node_modules/react-dom/lib/ReactInstanceMap.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react_dom$lib$ReactInstanceMap\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n/**\\n * Copyright 2013-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n */\\n\\n'use strict';\\n\\n/**\\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\\n * instance (key) and the internal representation (value). This allows public\\n * methods to accept the user facing instance as an argument and map them back\\n * to internal methods.\\n */\\n\\n// TODO: Replace this with ES6: var ReactInstanceMap = new Map();\\n\\nvar ReactInstanceMap = {\\n\\n  /**\\n   * This API should be called `delete` but we'd have to make sure to always\\n   * transform these to strings for IE support. When this transform is fully\\n   * supported we can rename it.\\n   */\\n  remove: function (key) {\\n    key._reactInternalInstance = undefined;\\n  },\\n\\n  get: function (key) {\\n    return key._reactInternalInstance;\\n  },\\n\\n  has: function (key) {\\n    return key._reactInternalInstance !== undefined;\\n  },\\n\\n  set: function (key, value) {\\n    key._reactInternalInstance = value;\\n  }\\n\\n};\\n\\nmodule.exports = ReactInstanceMap;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"ReactInstanceMap\",\"remove\",\"key\",\"_reactInternalInstance\",\"undefined\",\"get\",\"has\",\"set\",\"value\"]\n}\n"]