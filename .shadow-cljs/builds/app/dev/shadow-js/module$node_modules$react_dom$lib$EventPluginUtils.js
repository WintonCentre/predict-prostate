["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react-dom/lib/EventPluginUtils.js"],"~:js","shadow$provide.module$node_modules$react_dom$lib$EventPluginUtils=function(global,process,require,module,exports,shadow$shims){function executeDispatch(event,simulated,listener,inst){var type=event.type||\"unknown-event\";event.currentTarget=EventPluginUtils.getNodeFromInstance(inst);simulated?ReactErrorUtils.invokeGuardedCallbackWithCatch(type,listener,event):ReactErrorUtils.invokeGuardedCallback(type,listener,event);event.currentTarget=null}require(\"module$node_modules$react_dom$lib$reactProdInvariant\");\nvar ReactErrorUtils=require(\"module$node_modules$react_dom$lib$ReactErrorUtils\"),invariant=require(\"module$node_modules$fbjs$lib$invariant\"),warning=require(\"module$node_modules$fbjs$lib$warning\"),ComponentTree,TreeTraversal;var validateEventDispatches=function(event){var dispatchListeners=event._dispatchListeners,dispatchInstances=event._dispatchInstances;dispatchListeners=(event=Array.isArray(dispatchListeners))?dispatchListeners.length:dispatchListeners?1:0;var instancesIsArr=Array.isArray(dispatchInstances);\ndispatchInstances=instancesIsArr?dispatchInstances.length:dispatchInstances?1:0;warning(instancesIsArr===event&&dispatchInstances===dispatchListeners,\"EventPluginUtils: Invalid `event`.\")};var EventPluginUtils={isEndish:function(topLevelType){return\"topMouseUp\"===topLevelType||\"topTouchEnd\"===topLevelType||\"topTouchCancel\"===topLevelType},isMoveish:function(topLevelType){return\"topMouseMove\"===topLevelType||\"topTouchMove\"===topLevelType},isStartish:function(topLevelType){return\"topMouseDown\"===topLevelType||\n\"topTouchStart\"===topLevelType},executeDirectDispatch:function(event){validateEventDispatches(event);var dispatchListener=event._dispatchListeners,dispatchInstance=event._dispatchInstances;Array.isArray(dispatchListener)?invariant(!1,\"executeDirectDispatch(...): Invalid `event`.\"):void 0;event.currentTarget=dispatchListener?EventPluginUtils.getNodeFromInstance(dispatchInstance):null;dispatchListener=dispatchListener?dispatchListener(event):null;event.currentTarget=null;event._dispatchListeners=null;\nevent._dispatchInstances=null;return dispatchListener},executeDispatchesInOrder:function(event,simulated){var dispatchListeners=event._dispatchListeners,dispatchInstances=event._dispatchInstances;validateEventDispatches(event);if(Array.isArray(dispatchListeners))for(var i=0;i<dispatchListeners.length&&!event.isPropagationStopped();i++)executeDispatch(event,simulated,dispatchListeners[i],dispatchInstances[i]);else dispatchListeners&&executeDispatch(event,simulated,dispatchListeners,dispatchInstances);\nevent._dispatchListeners=null;event._dispatchInstances=null},executeDispatchesInOrderStopAtTrue:function(event){a:{var ret=event._dispatchListeners;var dispatchInstances=event._dispatchInstances;validateEventDispatches(event);if(Array.isArray(ret))for(var i=0;i<ret.length&&!event.isPropagationStopped();i++){if(ret[i](event,dispatchInstances[i])){ret=dispatchInstances[i];break a}}else if(ret&&ret(event,dispatchInstances)){ret=dispatchInstances;break a}ret=null}event._dispatchInstances=null;event._dispatchListeners=\nnull;return ret},hasDispatches:function(event){return!!event._dispatchListeners},getInstanceFromNode:function(node){return ComponentTree.getInstanceFromNode(node)},getNodeFromInstance:function(node){return ComponentTree.getNodeFromInstance(node)},isAncestor:function(a,b){return TreeTraversal.isAncestor(a,b)},getLowestCommonAncestor:function(a,b){return TreeTraversal.getLowestCommonAncestor(a,b)},getParentInstance:function(inst){return TreeTraversal.getParentInstance(inst)},traverseTwoPhase:function(target,\nfn,arg){return TreeTraversal.traverseTwoPhase(target,fn,arg)},traverseEnterLeave:function(from,to,fn,argFrom,argTo){return TreeTraversal.traverseEnterLeave(from,to,fn,argFrom,argTo)},injection:{injectComponentTree:function(Injected){ComponentTree=Injected;warning(Injected&&Injected.getNodeFromInstance&&Injected.getInstanceFromNode,\"EventPluginUtils.injection.injectComponentTree(...): Injected module is missing getNodeFromInstance or getInstanceFromNode.\")},injectTreeTraversal:function(Injected){TreeTraversal=\nInjected;warning(Injected&&Injected.isAncestor&&Injected.getLowestCommonAncestor,\"EventPluginUtils.injection.injectTreeTraversal(...): Injected module is missing isAncestor or getLowestCommonAncestor.\")}}};module.exports=EventPluginUtils}","~:source","shadow$provide[\"module$node_modules$react_dom$lib$EventPluginUtils\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactErrorUtils = require('./ReactErrorUtils');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\n/**\n * Injected dependencies:\n */\n\n/**\n * - `ComponentTree`: [required] Module that can convert between React instances\n *   and actual node references.\n */\nvar ComponentTree;\nvar TreeTraversal;\nvar injection = {\n  injectComponentTree: function (Injected) {\n    ComponentTree = Injected;\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;\n    }\n  },\n  injectTreeTraversal: function (Injected) {\n    TreeTraversal = Injected;\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;\n    }\n  }\n};\n\nfunction isEndish(topLevelType) {\n  return topLevelType === 'topMouseUp' || topLevelType === 'topTouchEnd' || topLevelType === 'topTouchCancel';\n}\n\nfunction isMoveish(topLevelType) {\n  return topLevelType === 'topMouseMove' || topLevelType === 'topTouchMove';\n}\nfunction isStartish(topLevelType) {\n  return topLevelType === 'topMouseDown' || topLevelType === 'topTouchStart';\n}\n\nvar validateEventDispatches;\nif (process.env.NODE_ENV !== 'production') {\n  validateEventDispatches = function (event) {\n    var dispatchListeners = event._dispatchListeners;\n    var dispatchInstances = event._dispatchInstances;\n\n    var listenersIsArr = Array.isArray(dispatchListeners);\n    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;\n\n    var instancesIsArr = Array.isArray(dispatchInstances);\n    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;\n\n    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;\n  };\n}\n\n/**\n * Dispatch the event to the listener.\n * @param {SyntheticEvent} event SyntheticEvent to handle\n * @param {boolean} simulated If the event is simulated (changes exn behavior)\n * @param {function} listener Application-level callback\n * @param {*} inst Internal component instance\n */\nfunction executeDispatch(event, simulated, listener, inst) {\n  var type = event.type || 'unknown-event';\n  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);\n  if (simulated) {\n    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);\n  } else {\n    ReactErrorUtils.invokeGuardedCallback(type, listener, event);\n  }\n  event.currentTarget = null;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches.\n */\nfunction executeDispatchesInOrder(event, simulated) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchInstances = event._dispatchInstances;\n  if (process.env.NODE_ENV !== 'production') {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and Instances are two parallel arrays that are always in sync.\n      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);\n    }\n  } else if (dispatchListeners) {\n    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);\n  }\n  event._dispatchListeners = null;\n  event._dispatchInstances = null;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches, but stops\n * at the first dispatch execution returning true, and returns that id.\n *\n * @return {?string} id of the first dispatch execution who's listener returns\n * true, or null if no listener returned true.\n */\nfunction executeDispatchesInOrderStopAtTrueImpl(event) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchInstances = event._dispatchInstances;\n  if (process.env.NODE_ENV !== 'production') {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and Instances are two parallel arrays that are always in sync.\n      if (dispatchListeners[i](event, dispatchInstances[i])) {\n        return dispatchInstances[i];\n      }\n    }\n  } else if (dispatchListeners) {\n    if (dispatchListeners(event, dispatchInstances)) {\n      return dispatchInstances;\n    }\n  }\n  return null;\n}\n\n/**\n * @see executeDispatchesInOrderStopAtTrueImpl\n */\nfunction executeDispatchesInOrderStopAtTrue(event) {\n  var ret = executeDispatchesInOrderStopAtTrueImpl(event);\n  event._dispatchInstances = null;\n  event._dispatchListeners = null;\n  return ret;\n}\n\n/**\n * Execution of a \"direct\" dispatch - there must be at most one dispatch\n * accumulated on the event or it is considered an error. It doesn't really make\n * sense for an event with multiple dispatches (bubbled) to keep track of the\n * return values at each dispatch execution, but it does tend to make sense when\n * dealing with \"direct\" dispatches.\n *\n * @return {*} The return value of executing the single dispatch.\n */\nfunction executeDirectDispatch(event) {\n  if (process.env.NODE_ENV !== 'production') {\n    validateEventDispatches(event);\n  }\n  var dispatchListener = event._dispatchListeners;\n  var dispatchInstance = event._dispatchInstances;\n  !!Array.isArray(dispatchListener) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;\n  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;\n  var res = dispatchListener ? dispatchListener(event) : null;\n  event.currentTarget = null;\n  event._dispatchListeners = null;\n  event._dispatchInstances = null;\n  return res;\n}\n\n/**\n * @param {SyntheticEvent} event\n * @return {boolean} True iff number of dispatches accumulated is greater than 0.\n */\nfunction hasDispatches(event) {\n  return !!event._dispatchListeners;\n}\n\n/**\n * General utilities that are useful in creating custom Event Plugins.\n */\nvar EventPluginUtils = {\n  isEndish: isEndish,\n  isMoveish: isMoveish,\n  isStartish: isStartish,\n\n  executeDirectDispatch: executeDirectDispatch,\n  executeDispatchesInOrder: executeDispatchesInOrder,\n  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,\n  hasDispatches: hasDispatches,\n\n  getInstanceFromNode: function (node) {\n    return ComponentTree.getInstanceFromNode(node);\n  },\n  getNodeFromInstance: function (node) {\n    return ComponentTree.getNodeFromInstance(node);\n  },\n  isAncestor: function (a, b) {\n    return TreeTraversal.isAncestor(a, b);\n  },\n  getLowestCommonAncestor: function (a, b) {\n    return TreeTraversal.getLowestCommonAncestor(a, b);\n  },\n  getParentInstance: function (inst) {\n    return TreeTraversal.getParentInstance(inst);\n  },\n  traverseTwoPhase: function (target, fn, arg) {\n    return TreeTraversal.traverseTwoPhase(target, fn, arg);\n  },\n  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {\n    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);\n  },\n\n  injection: injection\n};\n\nmodule.exports = EventPluginUtils;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$react_dom$lib$ReactErrorUtils","~$shadow.js","~$module$node_modules$fbjs$lib$invariant","~$module$node_modules$react_dom$lib$reactProdInvariant","~$module$node_modules$fbjs$lib$warning"]],"~:properties",["^5",["getLowestCommonAncestor","currentTarget","traverseTwoPhase","isEndish","injection","executeDispatchesInOrder","_dispatchListeners","getInstanceFromNode","executeDirectDispatch","traverseEnterLeave","injectTreeTraversal","isMoveish","injectComponentTree","executeDispatchesInOrderStopAtTrue","getParentInstance","isStartish","getNodeFromInstance","hasDispatches","isAncestor","_dispatchInstances"]],"~:compiled-at",1635270336806,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react_dom$lib$EventPluginUtils.js\",\n\"lineCount\":9,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/react-dom/lib/EventPluginUtils.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react_dom$lib$EventPluginUtils\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n/**\\n * Copyright 2013-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n */\\n\\n'use strict';\\n\\nvar _prodInvariant = require('./reactProdInvariant');\\n\\nvar ReactErrorUtils = require('./ReactErrorUtils');\\n\\nvar invariant = require('fbjs/lib/invariant');\\nvar warning = require('fbjs/lib/warning');\\n\\n/**\\n * Injected dependencies:\\n */\\n\\n/**\\n * - `ComponentTree`: [required] Module that can convert between React instances\\n *   and actual node references.\\n */\\nvar ComponentTree;\\nvar TreeTraversal;\\nvar injection = {\\n  injectComponentTree: function (Injected) {\\n    ComponentTree = Injected;\\n    if (process.env.NODE_ENV !== 'production') {\\n      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;\\n    }\\n  },\\n  injectTreeTraversal: function (Injected) {\\n    TreeTraversal = Injected;\\n    if (process.env.NODE_ENV !== 'production') {\\n      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;\\n    }\\n  }\\n};\\n\\nfunction isEndish(topLevelType) {\\n  return topLevelType === 'topMouseUp' || topLevelType === 'topTouchEnd' || topLevelType === 'topTouchCancel';\\n}\\n\\nfunction isMoveish(topLevelType) {\\n  return topLevelType === 'topMouseMove' || topLevelType === 'topTouchMove';\\n}\\nfunction isStartish(topLevelType) {\\n  return topLevelType === 'topMouseDown' || topLevelType === 'topTouchStart';\\n}\\n\\nvar validateEventDispatches;\\nif (process.env.NODE_ENV !== 'production') {\\n  validateEventDispatches = function (event) {\\n    var dispatchListeners = event._dispatchListeners;\\n    var dispatchInstances = event._dispatchInstances;\\n\\n    var listenersIsArr = Array.isArray(dispatchListeners);\\n    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;\\n\\n    var instancesIsArr = Array.isArray(dispatchInstances);\\n    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;\\n\\n    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;\\n  };\\n}\\n\\n/**\\n * Dispatch the event to the listener.\\n * @param {SyntheticEvent} event SyntheticEvent to handle\\n * @param {boolean} simulated If the event is simulated (changes exn behavior)\\n * @param {function} listener Application-level callback\\n * @param {*} inst Internal component instance\\n */\\nfunction executeDispatch(event, simulated, listener, inst) {\\n  var type = event.type || 'unknown-event';\\n  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);\\n  if (simulated) {\\n    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);\\n  } else {\\n    ReactErrorUtils.invokeGuardedCallback(type, listener, event);\\n  }\\n  event.currentTarget = null;\\n}\\n\\n/**\\n * Standard/simple iteration through an event's collected dispatches.\\n */\\nfunction executeDispatchesInOrder(event, simulated) {\\n  var dispatchListeners = event._dispatchListeners;\\n  var dispatchInstances = event._dispatchInstances;\\n  if (process.env.NODE_ENV !== 'production') {\\n    validateEventDispatches(event);\\n  }\\n  if (Array.isArray(dispatchListeners)) {\\n    for (var i = 0; i < dispatchListeners.length; i++) {\\n      if (event.isPropagationStopped()) {\\n        break;\\n      }\\n      // Listeners and Instances are two parallel arrays that are always in sync.\\n      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);\\n    }\\n  } else if (dispatchListeners) {\\n    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);\\n  }\\n  event._dispatchListeners = null;\\n  event._dispatchInstances = null;\\n}\\n\\n/**\\n * Standard/simple iteration through an event's collected dispatches, but stops\\n * at the first dispatch execution returning true, and returns that id.\\n *\\n * @return {?string} id of the first dispatch execution who's listener returns\\n * true, or null if no listener returned true.\\n */\\nfunction executeDispatchesInOrderStopAtTrueImpl(event) {\\n  var dispatchListeners = event._dispatchListeners;\\n  var dispatchInstances = event._dispatchInstances;\\n  if (process.env.NODE_ENV !== 'production') {\\n    validateEventDispatches(event);\\n  }\\n  if (Array.isArray(dispatchListeners)) {\\n    for (var i = 0; i < dispatchListeners.length; i++) {\\n      if (event.isPropagationStopped()) {\\n        break;\\n      }\\n      // Listeners and Instances are two parallel arrays that are always in sync.\\n      if (dispatchListeners[i](event, dispatchInstances[i])) {\\n        return dispatchInstances[i];\\n      }\\n    }\\n  } else if (dispatchListeners) {\\n    if (dispatchListeners(event, dispatchInstances)) {\\n      return dispatchInstances;\\n    }\\n  }\\n  return null;\\n}\\n\\n/**\\n * @see executeDispatchesInOrderStopAtTrueImpl\\n */\\nfunction executeDispatchesInOrderStopAtTrue(event) {\\n  var ret = executeDispatchesInOrderStopAtTrueImpl(event);\\n  event._dispatchInstances = null;\\n  event._dispatchListeners = null;\\n  return ret;\\n}\\n\\n/**\\n * Execution of a \\\"direct\\\" dispatch - there must be at most one dispatch\\n * accumulated on the event or it is considered an error. It doesn't really make\\n * sense for an event with multiple dispatches (bubbled) to keep track of the\\n * return values at each dispatch execution, but it does tend to make sense when\\n * dealing with \\\"direct\\\" dispatches.\\n *\\n * @return {*} The return value of executing the single dispatch.\\n */\\nfunction executeDirectDispatch(event) {\\n  if (process.env.NODE_ENV !== 'production') {\\n    validateEventDispatches(event);\\n  }\\n  var dispatchListener = event._dispatchListeners;\\n  var dispatchInstance = event._dispatchInstances;\\n  !!Array.isArray(dispatchListener) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;\\n  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;\\n  var res = dispatchListener ? dispatchListener(event) : null;\\n  event.currentTarget = null;\\n  event._dispatchListeners = null;\\n  event._dispatchInstances = null;\\n  return res;\\n}\\n\\n/**\\n * @param {SyntheticEvent} event\\n * @return {boolean} True iff number of dispatches accumulated is greater than 0.\\n */\\nfunction hasDispatches(event) {\\n  return !!event._dispatchListeners;\\n}\\n\\n/**\\n * General utilities that are useful in creating custom Event Plugins.\\n */\\nvar EventPluginUtils = {\\n  isEndish: isEndish,\\n  isMoveish: isMoveish,\\n  isStartish: isStartish,\\n\\n  executeDirectDispatch: executeDirectDispatch,\\n  executeDispatchesInOrder: executeDispatchesInOrder,\\n  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,\\n  hasDispatches: hasDispatches,\\n\\n  getInstanceFromNode: function (node) {\\n    return ComponentTree.getInstanceFromNode(node);\\n  },\\n  getNodeFromInstance: function (node) {\\n    return ComponentTree.getNodeFromInstance(node);\\n  },\\n  isAncestor: function (a, b) {\\n    return TreeTraversal.isAncestor(a, b);\\n  },\\n  getLowestCommonAncestor: function (a, b) {\\n    return TreeTraversal.getLowestCommonAncestor(a, b);\\n  },\\n  getParentInstance: function (inst) {\\n    return TreeTraversal.getParentInstance(inst);\\n  },\\n  traverseTwoPhase: function (target, fn, arg) {\\n    return TreeTraversal.traverseTwoPhase(target, fn, arg);\\n  },\\n  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {\\n    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);\\n  },\\n\\n  injection: injection\\n};\\n\\nmodule.exports = EventPluginUtils;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"executeDispatch\",\"event\",\"simulated\",\"listener\",\"inst\",\"type\",\"currentTarget\",\"EventPluginUtils\",\"getNodeFromInstance\",\"ReactErrorUtils\",\"invokeGuardedCallbackWithCatch\",\"invokeGuardedCallback\",\"invariant\",\"warning\",\"ComponentTree\",\"TreeTraversal\",\"validateEventDispatches\",\"dispatchListeners\",\"_dispatchListeners\",\"dispatchInstances\",\"_dispatchInstances\",\"listenersLen\",\"listenersIsArr\",\"Array\",\"isArray\",\"length\",\"instancesIsArr\",\"instancesLen\",\"isEndish\",\"topLevelType\",\"isMoveish\",\"isStartish\",\"executeDirectDispatch\",\"dispatchListener\",\"dispatchInstance\",\"res\",\"executeDispatchesInOrder\",\"i\",\"isPropagationStopped\",\"executeDispatchesInOrderStopAtTrue\",\"ret\",\"hasDispatches\",\"getInstanceFromNode\",\"node\",\"isAncestor\",\"a\",\"b\",\"getLowestCommonAncestor\",\"getParentInstance\",\"traverseTwoPhase\",\"target\",\"fn\",\"arg\",\"traverseEnterLeave\",\"from\",\"to\",\"argFrom\",\"argTo\",\"injection\",\"injectComponentTree\",\"Injected\",\"injectTreeTraversal\"]\n}\n"]