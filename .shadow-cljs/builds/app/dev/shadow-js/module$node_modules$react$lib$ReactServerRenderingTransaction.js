["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react/lib/ReactServerRenderingTransaction.js"],"~:js","shadow$provide.module$node_modules$react$lib$ReactServerRenderingTransaction=function(global,require,module,exports){function ReactServerRenderingTransaction(renderToStaticMarkup){this.reinitializeTransaction();this.renderToStaticMarkup=renderToStaticMarkup;this.useCreateElement=!1;this.updateQueue=new ReactServerUpdateQueue(this)}global=require(\"module$node_modules$object_assign$index\");exports=require(\"module$node_modules$react$lib$PooledClass\");var Transaction=require(\"module$node_modules$react$lib$Transaction\"),\nReactInstrumentation=require(\"module$node_modules$react$lib$ReactInstrumentation\"),ReactServerUpdateQueue=require(\"module$node_modules$react$lib$ReactServerUpdateQueue\"),TRANSACTION_WRAPPERS=[];TRANSACTION_WRAPPERS.push({initialize:ReactInstrumentation.debugTool.onBeginFlush,close:ReactInstrumentation.debugTool.onEndFlush});var noopCallbackQueue={enqueue:function(){}};global(ReactServerRenderingTransaction.prototype,Transaction.Mixin,{getTransactionWrappers:function(){return TRANSACTION_WRAPPERS},\ngetReactMountReady:function(){return noopCallbackQueue},getUpdateQueue:function(){return this.updateQueue},destructor:function(){},checkpoint:function(){},rollback:function(){}});exports.addPoolingTo(ReactServerRenderingTransaction);module.exports=ReactServerRenderingTransaction}","~:source","shadow$provide[\"module$node_modules$react$lib$ReactServerRenderingTransaction\"] = function(global,require,module,exports) {\n/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactServerRenderingTransaction\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar PooledClass = require('./PooledClass');\nvar Transaction = require('./Transaction');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar ReactServerUpdateQueue = require('./ReactServerUpdateQueue');\n\n/**\n * Executed within the scope of the `Transaction` instance. Consider these as\n * being member methods, but with an implied ordering while being isolated from\n * each other.\n */\nvar TRANSACTION_WRAPPERS = [];\n\nif (process.env.NODE_ENV !== 'production') {\n  TRANSACTION_WRAPPERS.push({\n    initialize: ReactInstrumentation.debugTool.onBeginFlush,\n    close: ReactInstrumentation.debugTool.onEndFlush\n  });\n}\n\nvar noopCallbackQueue = {\n  enqueue: function () {}\n};\n\n/**\n * @class ReactServerRenderingTransaction\n * @param {boolean} renderToStaticMarkup\n */\nfunction ReactServerRenderingTransaction(renderToStaticMarkup) {\n  this.reinitializeTransaction();\n  this.renderToStaticMarkup = renderToStaticMarkup;\n  this.useCreateElement = false;\n  this.updateQueue = new ReactServerUpdateQueue(this);\n}\n\nvar Mixin = {\n  /**\n   * @see Transaction\n   * @abstract\n   * @final\n   * @return {array} Empty list of operation wrap procedures.\n   */\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  /**\n   * @return {object} The queue to collect `onDOMReady` callbacks with.\n   */\n  getReactMountReady: function () {\n    return noopCallbackQueue;\n  },\n\n  /**\n   * @return {object} The queue to collect React async events.\n   */\n  getUpdateQueue: function () {\n    return this.updateQueue;\n  },\n\n  /**\n   * `PooledClass` looks for this, and will invoke this before allowing this\n   * instance to be reused.\n   */\n  destructor: function () {},\n\n  checkpoint: function () {},\n\n  rollback: function () {}\n};\n\n_assign(ReactServerRenderingTransaction.prototype, Transaction.Mixin, Mixin);\n\nPooledClass.addPoolingTo(ReactServerRenderingTransaction);\n\nmodule.exports = ReactServerRenderingTransaction;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$react$lib$ReactServerUpdateQueue","~$module$node_modules$object_assign$index","~$shadow.js","~$module$node_modules$react$lib$ReactInstrumentation","~$module$node_modules$react$lib$PooledClass","~$module$node_modules$react$lib$Transaction"]],"~:properties",["^5",["getReactMountReady","updateQueue","getUpdateQueue","enqueue","getTransactionWrappers","renderToStaticMarkup","close","checkpoint","initialize","useCreateElement","destructor","rollback"]],"~:compiled-at",1635250628409,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react$lib$ReactServerRenderingTransaction.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,6DAAA,CAAkF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA2C1HC,QAASA,gCAA+B,CAACC,oBAAD,CAAuB,CAC7D,IAAKC,CAAAA,uBAAL,EACA,KAAKD,CAAAA,oBAAL,CAA4BA,oBAC5B,KAAKE,CAAAA,gBAAL,CAAwB,CAAA,CACxB,KAAKC,CAAAA,WAAL,CAAmB,IAAIC,sBAAJ,CAA2B,IAA3B,CAJ0C,CA7B3DC,MAAAA,CAAUT,OAAA,CAAQ,yCAAR,CAEVU,QAAAA,CAAcV,OAAA,CAAQ,2CAAR,CAClB,KAAIW,YAAcX,OAAA,CAAQ,2CAAR,CAAlB;AACIY,qBAAuBZ,OAAA,CAAQ,oDAAR,CAD3B,CAEIQ,uBAAyBR,OAAA,CAAQ,sDAAR,CAF7B,CASIa,qBAAuB,EAGzBA,qBAAqBC,CAAAA,IAArB,CAA0B,CACxBC,WAAYH,oBAAqBI,CAAAA,SAAUC,CAAAA,YADnB,CAExBC,MAAON,oBAAqBI,CAAAA,SAAUG,CAAAA,UAFd,CAA1B,CAMF,KAAIC,kBAAoB,CACtBC,QAASA,QAAS,EAAG,EADC,CAmDxBZ,OAAA,CAAQN,+BAAgCmB,CAAAA,SAAxC,CAAmDX,WAAYY,CAAAA,KAA/D,CApCYA,CAOVC,uBAAwBA,QAAS,EAAG,CAClC,MAAOX,qBAD2B,CAP1BU;AAcVE,mBAAoBA,QAAS,EAAG,CAC9B,MAAOL,kBADuB,CAdtBG,CAqBVG,eAAgBA,QAAS,EAAG,CAC1B,MAAO,KAAKnB,CAAAA,WADc,CArBlBgB,CA6BVI,WAAYA,QAAS,EAAG,EA7BdJ,CA+BVK,WAAYA,QAAS,EAAG,EA/BdL,CAiCVM,SAAUA,QAAS,EAAG,EAjCZN,CAoCZ,CAEAb,QAAYoB,CAAAA,YAAZ,CAAyB3B,+BAAzB,CAEAF,OAAOC,CAAAA,OAAP,CAAiBC,+BA1FyG;\",\n\"sources\":[\"node_modules/react/lib/ReactServerRenderingTransaction.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react$lib$ReactServerRenderingTransaction\\\"] = function(global,require,module,exports) {\\n/**\\n * Copyright 2014-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactServerRenderingTransaction\\n */\\n\\n'use strict';\\n\\nvar _assign = require('object-assign');\\n\\nvar PooledClass = require('./PooledClass');\\nvar Transaction = require('./Transaction');\\nvar ReactInstrumentation = require('./ReactInstrumentation');\\nvar ReactServerUpdateQueue = require('./ReactServerUpdateQueue');\\n\\n/**\\n * Executed within the scope of the `Transaction` instance. Consider these as\\n * being member methods, but with an implied ordering while being isolated from\\n * each other.\\n */\\nvar TRANSACTION_WRAPPERS = [];\\n\\nif (process.env.NODE_ENV !== 'production') {\\n  TRANSACTION_WRAPPERS.push({\\n    initialize: ReactInstrumentation.debugTool.onBeginFlush,\\n    close: ReactInstrumentation.debugTool.onEndFlush\\n  });\\n}\\n\\nvar noopCallbackQueue = {\\n  enqueue: function () {}\\n};\\n\\n/**\\n * @class ReactServerRenderingTransaction\\n * @param {boolean} renderToStaticMarkup\\n */\\nfunction ReactServerRenderingTransaction(renderToStaticMarkup) {\\n  this.reinitializeTransaction();\\n  this.renderToStaticMarkup = renderToStaticMarkup;\\n  this.useCreateElement = false;\\n  this.updateQueue = new ReactServerUpdateQueue(this);\\n}\\n\\nvar Mixin = {\\n  /**\\n   * @see Transaction\\n   * @abstract\\n   * @final\\n   * @return {array} Empty list of operation wrap procedures.\\n   */\\n  getTransactionWrappers: function () {\\n    return TRANSACTION_WRAPPERS;\\n  },\\n\\n  /**\\n   * @return {object} The queue to collect `onDOMReady` callbacks with.\\n   */\\n  getReactMountReady: function () {\\n    return noopCallbackQueue;\\n  },\\n\\n  /**\\n   * @return {object} The queue to collect React async events.\\n   */\\n  getUpdateQueue: function () {\\n    return this.updateQueue;\\n  },\\n\\n  /**\\n   * `PooledClass` looks for this, and will invoke this before allowing this\\n   * instance to be reused.\\n   */\\n  destructor: function () {},\\n\\n  checkpoint: function () {},\\n\\n  rollback: function () {}\\n};\\n\\n_assign(ReactServerRenderingTransaction.prototype, Transaction.Mixin, Mixin);\\n\\nPooledClass.addPoolingTo(ReactServerRenderingTransaction);\\n\\nmodule.exports = ReactServerRenderingTransaction;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"ReactServerRenderingTransaction\",\"renderToStaticMarkup\",\"reinitializeTransaction\",\"useCreateElement\",\"updateQueue\",\"ReactServerUpdateQueue\",\"_assign\",\"PooledClass\",\"Transaction\",\"ReactInstrumentation\",\"TRANSACTION_WRAPPERS\",\"push\",\"initialize\",\"debugTool\",\"onBeginFlush\",\"close\",\"onEndFlush\",\"noopCallbackQueue\",\"enqueue\",\"prototype\",\"Mixin\",\"getTransactionWrappers\",\"getReactMountReady\",\"getUpdateQueue\",\"destructor\",\"checkpoint\",\"rollback\",\"addPoolingTo\"]\n}\n"]