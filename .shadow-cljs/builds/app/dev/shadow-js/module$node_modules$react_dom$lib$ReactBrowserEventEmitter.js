["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react-dom/lib/ReactBrowserEventEmitter.js"],"~:js","shadow$provide.module$node_modules$react_dom$lib$ReactBrowserEventEmitter=function(global,process,require,module,exports,shadow$shims){global=require(\"module$node_modules$object_assign$index\");var EventPluginRegistry=require(\"module$node_modules$react_dom$lib$EventPluginRegistry\");process=require(\"module$node_modules$react_dom$lib$ReactEventEmitterMixin\");var ViewportMetrics=require(\"module$node_modules$react_dom$lib$ViewportMetrics\");exports=require(\"module$node_modules$react_dom$lib$getVendorPrefixedEventName\");\nvar isEventSupported=require(\"module$node_modules$react_dom$lib$isEventSupported\"),hasEventPageXY,alreadyListeningTo={},isMonitoringScrollValue=!1,reactTopListenersCounter=0,topEventMapping={topAbort:\"abort\",topAnimationEnd:exports(\"animationend\")||\"animationend\",topAnimationIteration:exports(\"animationiteration\")||\"animationiteration\",topAnimationStart:exports(\"animationstart\")||\"animationstart\",topBlur:\"blur\",topCanPlay:\"canplay\",topCanPlayThrough:\"canplaythrough\",topChange:\"change\",topClick:\"click\",\ntopCompositionEnd:\"compositionend\",topCompositionStart:\"compositionstart\",topCompositionUpdate:\"compositionupdate\",topContextMenu:\"contextmenu\",topCopy:\"copy\",topCut:\"cut\",topDoubleClick:\"dblclick\",topDrag:\"drag\",topDragEnd:\"dragend\",topDragEnter:\"dragenter\",topDragExit:\"dragexit\",topDragLeave:\"dragleave\",topDragOver:\"dragover\",topDragStart:\"dragstart\",topDrop:\"drop\",topDurationChange:\"durationchange\",topEmptied:\"emptied\",topEncrypted:\"encrypted\",topEnded:\"ended\",topError:\"error\",topFocus:\"focus\",\ntopInput:\"input\",topKeyDown:\"keydown\",topKeyPress:\"keypress\",topKeyUp:\"keyup\",topLoadedData:\"loadeddata\",topLoadedMetadata:\"loadedmetadata\",topLoadStart:\"loadstart\",topMouseDown:\"mousedown\",topMouseMove:\"mousemove\",topMouseOut:\"mouseout\",topMouseOver:\"mouseover\",topMouseUp:\"mouseup\",topPaste:\"paste\",topPause:\"pause\",topPlay:\"play\",topPlaying:\"playing\",topProgress:\"progress\",topRateChange:\"ratechange\",topScroll:\"scroll\",topSeeked:\"seeked\",topSeeking:\"seeking\",topSelectionChange:\"selectionchange\",topStalled:\"stalled\",\ntopSuspend:\"suspend\",topTextInput:\"textInput\",topTimeUpdate:\"timeupdate\",topTouchCancel:\"touchcancel\",topTouchEnd:\"touchend\",topTouchMove:\"touchmove\",topTouchStart:\"touchstart\",topTransitionEnd:exports(\"transitionend\")||\"transitionend\",topVolumeChange:\"volumechange\",topWaiting:\"waiting\",topWheel:\"wheel\"},topListenersIDKey=\"_reactListenersID\"+String(Math.random()).slice(2),ReactBrowserEventEmitter=global({},process,{ReactEventListener:null,injection:{injectReactEventListener:function(ReactEventListener){ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);\nReactBrowserEventEmitter.ReactEventListener=ReactEventListener}},setEnabled:function(enabled){ReactBrowserEventEmitter.ReactEventListener&&ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled)},isEnabled:function(){return!(!ReactBrowserEventEmitter.ReactEventListener||!ReactBrowserEventEmitter.ReactEventListener.isEnabled())},listenTo:function(registrationName,contentDocumentHandle){Object.prototype.hasOwnProperty.call(contentDocumentHandle,topListenersIDKey)||(contentDocumentHandle[topListenersIDKey]=\nreactTopListenersCounter++,alreadyListeningTo[contentDocumentHandle[topListenersIDKey]]={});var isListening=alreadyListeningTo[contentDocumentHandle[topListenersIDKey]];registrationName=EventPluginRegistry.registrationNameDependencies[registrationName];for(var i=0;i<registrationName.length;i++){var dependency=registrationName[i];isListening.hasOwnProperty(dependency)&&isListening[dependency]||(\"topWheel\"===dependency?isEventSupported(\"wheel\")?ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\"topWheel\",\n\"wheel\",contentDocumentHandle):isEventSupported(\"mousewheel\")?ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\"topWheel\",\"mousewheel\",contentDocumentHandle):ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\"topWheel\",\"DOMMouseScroll\",contentDocumentHandle):\"topScroll\"===dependency?isEventSupported(\"scroll\",!0)?ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(\"topScroll\",\"scroll\",contentDocumentHandle):ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\"topScroll\",\n\"scroll\",ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE):\"topFocus\"===dependency||\"topBlur\"===dependency?(isEventSupported(\"focus\",!0)?(ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(\"topFocus\",\"focus\",contentDocumentHandle),ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(\"topBlur\",\"blur\",contentDocumentHandle)):isEventSupported(\"focusin\")&&(ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\"topFocus\",\"focusin\",contentDocumentHandle),ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\"topBlur\",\n\"focusout\",contentDocumentHandle)),isListening.topBlur=!0,isListening.topFocus=!0):topEventMapping.hasOwnProperty(dependency)&&ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency,topEventMapping[dependency],contentDocumentHandle),isListening[dependency]=!0)}},trapBubbledEvent:function(topLevelType,handlerBaseName,handle){return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType,handlerBaseName,handle)},trapCapturedEvent:function(topLevelType,handlerBaseName,\nhandle){return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType,handlerBaseName,handle)},supportsEventPageXY:function(){if(!document.createEvent)return!1;var ev=document.createEvent(\"MouseEvent\");return null!=ev&&\"pageX\"in ev},ensureScrollValueMonitoring:function(){void 0===hasEventPageXY&&(hasEventPageXY=ReactBrowserEventEmitter.supportsEventPageXY());hasEventPageXY||isMonitoringScrollValue||(ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(ViewportMetrics.refreshScrollValues),\nisMonitoringScrollValue=!0)}});module.exports=ReactBrowserEventEmitter}","~:source","shadow$provide[\"module$node_modules$react_dom$lib$ReactBrowserEventEmitter\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar EventPluginRegistry = require('./EventPluginRegistry');\nvar ReactEventEmitterMixin = require('./ReactEventEmitterMixin');\nvar ViewportMetrics = require('./ViewportMetrics');\n\nvar getVendorPrefixedEventName = require('./getVendorPrefixedEventName');\nvar isEventSupported = require('./isEventSupported');\n\n/**\n * Summary of `ReactBrowserEventEmitter` event handling:\n *\n *  - Top-level delegation is used to trap most native browser events. This\n *    may only occur in the main thread and is the responsibility of\n *    ReactEventListener, which is injected and can therefore support pluggable\n *    event sources. This is the only work that occurs in the main thread.\n *\n *  - We normalize and de-duplicate events to account for browser quirks. This\n *    may be done in the worker thread.\n *\n *  - Forward these native events (with the associated top-level type used to\n *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want\n *    to extract any synthetic events.\n *\n *  - The `EventPluginHub` will then process each event by annotating them with\n *    \"dispatches\", a sequence of listeners and IDs that care about that event.\n *\n *  - The `EventPluginHub` then dispatches the events.\n *\n * Overview of React and the event system:\n *\n * +------------+    .\n * |    DOM     |    .\n * +------------+    .\n *       |           .\n *       v           .\n * +------------+    .\n * | ReactEvent |    .\n * |  Listener  |    .\n * +------------+    .                         +-----------+\n *       |           .               +--------+|SimpleEvent|\n *       |           .               |         |Plugin     |\n * +-----|------+    .               v         +-----------+\n * |     |      |    .    +--------------+                    +------------+\n * |     +-----------.--->|EventPluginHub|                    |    Event   |\n * |            |    .    |              |     +-----------+  | Propagators|\n * | ReactEvent |    .    |              |     |TapEvent   |  |------------|\n * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|\n * |            |    .    |              |     +-----------+  |  utilities |\n * |     +-----------.--->|              |                    +------------+\n * |     |      |    .    +--------------+\n * +-----|------+    .                ^        +-----------+\n *       |           .                |        |Enter/Leave|\n *       +           .                +-------+|Plugin     |\n * +-------------+   .                         +-----------+\n * | application |   .\n * |-------------|   .\n * |             |   .\n * |             |   .\n * +-------------+   .\n *                   .\n *    React Core     .  General Purpose Event Plugin System\n */\n\nvar hasEventPageXY;\nvar alreadyListeningTo = {};\nvar isMonitoringScrollValue = false;\nvar reactTopListenersCounter = 0;\n\n// For events like 'submit' which don't consistently bubble (which we trap at a\n// lower node than `document`), binding at `document` would cause duplicate\n// events so we don't include them here\nvar topEventMapping = {\n  topAbort: 'abort',\n  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',\n  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',\n  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',\n  topBlur: 'blur',\n  topCanPlay: 'canplay',\n  topCanPlayThrough: 'canplaythrough',\n  topChange: 'change',\n  topClick: 'click',\n  topCompositionEnd: 'compositionend',\n  topCompositionStart: 'compositionstart',\n  topCompositionUpdate: 'compositionupdate',\n  topContextMenu: 'contextmenu',\n  topCopy: 'copy',\n  topCut: 'cut',\n  topDoubleClick: 'dblclick',\n  topDrag: 'drag',\n  topDragEnd: 'dragend',\n  topDragEnter: 'dragenter',\n  topDragExit: 'dragexit',\n  topDragLeave: 'dragleave',\n  topDragOver: 'dragover',\n  topDragStart: 'dragstart',\n  topDrop: 'drop',\n  topDurationChange: 'durationchange',\n  topEmptied: 'emptied',\n  topEncrypted: 'encrypted',\n  topEnded: 'ended',\n  topError: 'error',\n  topFocus: 'focus',\n  topInput: 'input',\n  topKeyDown: 'keydown',\n  topKeyPress: 'keypress',\n  topKeyUp: 'keyup',\n  topLoadedData: 'loadeddata',\n  topLoadedMetadata: 'loadedmetadata',\n  topLoadStart: 'loadstart',\n  topMouseDown: 'mousedown',\n  topMouseMove: 'mousemove',\n  topMouseOut: 'mouseout',\n  topMouseOver: 'mouseover',\n  topMouseUp: 'mouseup',\n  topPaste: 'paste',\n  topPause: 'pause',\n  topPlay: 'play',\n  topPlaying: 'playing',\n  topProgress: 'progress',\n  topRateChange: 'ratechange',\n  topScroll: 'scroll',\n  topSeeked: 'seeked',\n  topSeeking: 'seeking',\n  topSelectionChange: 'selectionchange',\n  topStalled: 'stalled',\n  topSuspend: 'suspend',\n  topTextInput: 'textInput',\n  topTimeUpdate: 'timeupdate',\n  topTouchCancel: 'touchcancel',\n  topTouchEnd: 'touchend',\n  topTouchMove: 'touchmove',\n  topTouchStart: 'touchstart',\n  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',\n  topVolumeChange: 'volumechange',\n  topWaiting: 'waiting',\n  topWheel: 'wheel'\n};\n\n/**\n * To ensure no conflicts with other potential React instances on the page\n */\nvar topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);\n\nfunction getListeningForDocument(mountAt) {\n  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`\n  // directly.\n  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {\n    mountAt[topListenersIDKey] = reactTopListenersCounter++;\n    alreadyListeningTo[mountAt[topListenersIDKey]] = {};\n  }\n  return alreadyListeningTo[mountAt[topListenersIDKey]];\n}\n\n/**\n * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For\n * example:\n *\n *   EventPluginHub.putListener('myID', 'onClick', myFunction);\n *\n * This would allocate a \"registration\" of `('onClick', myFunction)` on 'myID'.\n *\n * @internal\n */\nvar ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {\n\n  /**\n   * Injectable event backend\n   */\n  ReactEventListener: null,\n\n  injection: {\n    /**\n     * @param {object} ReactEventListener\n     */\n    injectReactEventListener: function (ReactEventListener) {\n      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);\n      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;\n    }\n  },\n\n  /**\n   * Sets whether or not any created callbacks should be enabled.\n   *\n   * @param {boolean} enabled True if callbacks should be enabled.\n   */\n  setEnabled: function (enabled) {\n    if (ReactBrowserEventEmitter.ReactEventListener) {\n      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);\n    }\n  },\n\n  /**\n   * @return {boolean} True if callbacks are enabled.\n   */\n  isEnabled: function () {\n    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());\n  },\n\n  /**\n   * We listen for bubbled touch events on the document object.\n   *\n   * Firefox v8.01 (and possibly others) exhibited strange behavior when\n   * mounting `onmousemove` events at some node that was not the document\n   * element. The symptoms were that if your mouse is not moving over something\n   * contained within that mount point (for example on the background) the\n   * top-level listeners for `onmousemove` won't be called. However, if you\n   * register the `mousemove` on the document object, then it will of course\n   * catch all `mousemove`s. This along with iOS quirks, justifies restricting\n   * top-level listeners to the document object only, at least for these\n   * movement types of events and possibly all events.\n   *\n   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n   *\n   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but\n   * they bubble to document.\n   *\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @param {object} contentDocumentHandle Document which owns the container\n   */\n  listenTo: function (registrationName, contentDocumentHandle) {\n    var mountAt = contentDocumentHandle;\n    var isListening = getListeningForDocument(mountAt);\n    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];\n\n    for (var i = 0; i < dependencies.length; i++) {\n      var dependency = dependencies[i];\n      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {\n        if (dependency === 'topWheel') {\n          if (isEventSupported('wheel')) {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'wheel', mountAt);\n          } else if (isEventSupported('mousewheel')) {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'mousewheel', mountAt);\n          } else {\n            // Firefox needs to capture a different mouse scroll event.\n            // @see http://www.quirksmode.org/dom/events/tests/scroll.html\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'DOMMouseScroll', mountAt);\n          }\n        } else if (dependency === 'topScroll') {\n\n          if (isEventSupported('scroll', true)) {\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topScroll', 'scroll', mountAt);\n          } else {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topScroll', 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);\n          }\n        } else if (dependency === 'topFocus' || dependency === 'topBlur') {\n\n          if (isEventSupported('focus', true)) {\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topFocus', 'focus', mountAt);\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topBlur', 'blur', mountAt);\n          } else if (isEventSupported('focusin')) {\n            // IE has `focusin` and `focusout` events which bubble.\n            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topFocus', 'focusin', mountAt);\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topBlur', 'focusout', mountAt);\n          }\n\n          // to make sure blur and focus event listeners are only attached once\n          isListening.topBlur = true;\n          isListening.topFocus = true;\n        } else if (topEventMapping.hasOwnProperty(dependency)) {\n          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);\n        }\n\n        isListening[dependency] = true;\n      }\n    }\n  },\n\n  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {\n    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);\n  },\n\n  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {\n    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);\n  },\n\n  /**\n   * Protect against document.createEvent() returning null\n   * Some popup blocker extensions appear to do this:\n   * https://github.com/facebook/react/issues/6887\n   */\n  supportsEventPageXY: function () {\n    if (!document.createEvent) {\n      return false;\n    }\n    var ev = document.createEvent('MouseEvent');\n    return ev != null && 'pageX' in ev;\n  },\n\n  /**\n   * Listens to window scroll and resize events. We cache scroll values so that\n   * application code can access them without triggering reflows.\n   *\n   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when\n   * pageX/pageY isn't supported (legacy browsers).\n   *\n   * NOTE: Scroll events do not bubble.\n   *\n   * @see http://www.quirksmode.org/dom/events/scroll.html\n   */\n  ensureScrollValueMonitoring: function () {\n    if (hasEventPageXY === undefined) {\n      hasEventPageXY = ReactBrowserEventEmitter.supportsEventPageXY();\n    }\n    if (!hasEventPageXY && !isMonitoringScrollValue) {\n      var refresh = ViewportMetrics.refreshScrollValues;\n      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);\n      isMonitoringScrollValue = true;\n    }\n  }\n\n});\n\nmodule.exports = ReactBrowserEventEmitter;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$react_dom$lib$ViewportMetrics","~$module$node_modules$react_dom$lib$ReactEventEmitterMixin","~$module$node_modules$object_assign$index","~$module$node_modules$react_dom$lib$EventPluginRegistry","~$shadow.js","~$module$node_modules$react_dom$lib$getVendorPrefixedEventName","~$module$node_modules$react_dom$lib$isEventSupported"]],"~:properties",["^5",["topCompositionStart","topSeeked","listenTo","supportsEventPageXY","topPause","topRateChange","topScroll","topDragEnter","topTouchEnd","topCanPlay","topMouseMove","topInput","topCompositionUpdate","topTouchCancel","topCompositionEnd","topKeyDown","topKeyUp","topMouseOut","topSelectionChange","injection","topCut","topDragOver","trapBubbledEvent","topCanPlayThrough","topPlay","topDrag","topMouseDown","topKeyPress","topWaiting","topClick","topMouseUp","topDragLeave","topChange","topDragStart","topCopy","topTimeUpdate","topPaste","topError","topLoadedMetadata","topDrop","topDurationChange","topContextMenu","topTouchMove","topTouchStart","topDragExit","topLoadedData","topTextInput","topAnimationStart","topVolumeChange","topSeeking","topAnimationIteration","topMouseOver","topWheel","setEnabled","topBlur","topDragEnd","topEmptied","topStalled","ensureScrollValueMonitoring","topTransitionEnd","topDoubleClick","topSuspend","topProgress","topPlaying","topEncrypted","injectReactEventListener","topAnimationEnd","topLoadStart","ReactEventListener","trapCapturedEvent","topFocus","topAbort","isEnabled","topEnded"]],"~:compiled-at",1635270336839,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react_dom$lib$ReactBrowserEventEmitter.js\",\n\"lineCount\":12,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/react-dom/lib/ReactBrowserEventEmitter.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react_dom$lib$ReactBrowserEventEmitter\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n/**\\n * Copyright 2013-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n */\\n\\n'use strict';\\n\\nvar _assign = require('object-assign');\\n\\nvar EventPluginRegistry = require('./EventPluginRegistry');\\nvar ReactEventEmitterMixin = require('./ReactEventEmitterMixin');\\nvar ViewportMetrics = require('./ViewportMetrics');\\n\\nvar getVendorPrefixedEventName = require('./getVendorPrefixedEventName');\\nvar isEventSupported = require('./isEventSupported');\\n\\n/**\\n * Summary of `ReactBrowserEventEmitter` event handling:\\n *\\n *  - Top-level delegation is used to trap most native browser events. This\\n *    may only occur in the main thread and is the responsibility of\\n *    ReactEventListener, which is injected and can therefore support pluggable\\n *    event sources. This is the only work that occurs in the main thread.\\n *\\n *  - We normalize and de-duplicate events to account for browser quirks. This\\n *    may be done in the worker thread.\\n *\\n *  - Forward these native events (with the associated top-level type used to\\n *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want\\n *    to extract any synthetic events.\\n *\\n *  - The `EventPluginHub` will then process each event by annotating them with\\n *    \\\"dispatches\\\", a sequence of listeners and IDs that care about that event.\\n *\\n *  - The `EventPluginHub` then dispatches the events.\\n *\\n * Overview of React and the event system:\\n *\\n * +------------+    .\\n * |    DOM     |    .\\n * +------------+    .\\n *       |           .\\n *       v           .\\n * +------------+    .\\n * | ReactEvent |    .\\n * |  Listener  |    .\\n * +------------+    .                         +-----------+\\n *       |           .               +--------+|SimpleEvent|\\n *       |           .               |         |Plugin     |\\n * +-----|------+    .               v         +-----------+\\n * |     |      |    .    +--------------+                    +------------+\\n * |     +-----------.---\\u003e|EventPluginHub|                    |    Event   |\\n * |            |    .    |              |     +-----------+  | Propagators|\\n * | ReactEvent |    .    |              |     |TapEvent   |  |------------|\\n * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|\\n * |            |    .    |              |     +-----------+  |  utilities |\\n * |     +-----------.---\\u003e|              |                    +------------+\\n * |     |      |    .    +--------------+\\n * +-----|------+    .                ^        +-----------+\\n *       |           .                |        |Enter/Leave|\\n *       +           .                +-------+|Plugin     |\\n * +-------------+   .                         +-----------+\\n * | application |   .\\n * |-------------|   .\\n * |             |   .\\n * |             |   .\\n * +-------------+   .\\n *                   .\\n *    React Core     .  General Purpose Event Plugin System\\n */\\n\\nvar hasEventPageXY;\\nvar alreadyListeningTo = {};\\nvar isMonitoringScrollValue = false;\\nvar reactTopListenersCounter = 0;\\n\\n// For events like 'submit' which don't consistently bubble (which we trap at a\\n// lower node than `document`), binding at `document` would cause duplicate\\n// events so we don't include them here\\nvar topEventMapping = {\\n  topAbort: 'abort',\\n  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',\\n  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',\\n  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',\\n  topBlur: 'blur',\\n  topCanPlay: 'canplay',\\n  topCanPlayThrough: 'canplaythrough',\\n  topChange: 'change',\\n  topClick: 'click',\\n  topCompositionEnd: 'compositionend',\\n  topCompositionStart: 'compositionstart',\\n  topCompositionUpdate: 'compositionupdate',\\n  topContextMenu: 'contextmenu',\\n  topCopy: 'copy',\\n  topCut: 'cut',\\n  topDoubleClick: 'dblclick',\\n  topDrag: 'drag',\\n  topDragEnd: 'dragend',\\n  topDragEnter: 'dragenter',\\n  topDragExit: 'dragexit',\\n  topDragLeave: 'dragleave',\\n  topDragOver: 'dragover',\\n  topDragStart: 'dragstart',\\n  topDrop: 'drop',\\n  topDurationChange: 'durationchange',\\n  topEmptied: 'emptied',\\n  topEncrypted: 'encrypted',\\n  topEnded: 'ended',\\n  topError: 'error',\\n  topFocus: 'focus',\\n  topInput: 'input',\\n  topKeyDown: 'keydown',\\n  topKeyPress: 'keypress',\\n  topKeyUp: 'keyup',\\n  topLoadedData: 'loadeddata',\\n  topLoadedMetadata: 'loadedmetadata',\\n  topLoadStart: 'loadstart',\\n  topMouseDown: 'mousedown',\\n  topMouseMove: 'mousemove',\\n  topMouseOut: 'mouseout',\\n  topMouseOver: 'mouseover',\\n  topMouseUp: 'mouseup',\\n  topPaste: 'paste',\\n  topPause: 'pause',\\n  topPlay: 'play',\\n  topPlaying: 'playing',\\n  topProgress: 'progress',\\n  topRateChange: 'ratechange',\\n  topScroll: 'scroll',\\n  topSeeked: 'seeked',\\n  topSeeking: 'seeking',\\n  topSelectionChange: 'selectionchange',\\n  topStalled: 'stalled',\\n  topSuspend: 'suspend',\\n  topTextInput: 'textInput',\\n  topTimeUpdate: 'timeupdate',\\n  topTouchCancel: 'touchcancel',\\n  topTouchEnd: 'touchend',\\n  topTouchMove: 'touchmove',\\n  topTouchStart: 'touchstart',\\n  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',\\n  topVolumeChange: 'volumechange',\\n  topWaiting: 'waiting',\\n  topWheel: 'wheel'\\n};\\n\\n/**\\n * To ensure no conflicts with other potential React instances on the page\\n */\\nvar topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);\\n\\nfunction getListeningForDocument(mountAt) {\\n  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`\\n  // directly.\\n  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {\\n    mountAt[topListenersIDKey] = reactTopListenersCounter++;\\n    alreadyListeningTo[mountAt[topListenersIDKey]] = {};\\n  }\\n  return alreadyListeningTo[mountAt[topListenersIDKey]];\\n}\\n\\n/**\\n * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For\\n * example:\\n *\\n *   EventPluginHub.putListener('myID', 'onClick', myFunction);\\n *\\n * This would allocate a \\\"registration\\\" of `('onClick', myFunction)` on 'myID'.\\n *\\n * @internal\\n */\\nvar ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {\\n\\n  /**\\n   * Injectable event backend\\n   */\\n  ReactEventListener: null,\\n\\n  injection: {\\n    /**\\n     * @param {object} ReactEventListener\\n     */\\n    injectReactEventListener: function (ReactEventListener) {\\n      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);\\n      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;\\n    }\\n  },\\n\\n  /**\\n   * Sets whether or not any created callbacks should be enabled.\\n   *\\n   * @param {boolean} enabled True if callbacks should be enabled.\\n   */\\n  setEnabled: function (enabled) {\\n    if (ReactBrowserEventEmitter.ReactEventListener) {\\n      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);\\n    }\\n  },\\n\\n  /**\\n   * @return {boolean} True if callbacks are enabled.\\n   */\\n  isEnabled: function () {\\n    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());\\n  },\\n\\n  /**\\n   * We listen for bubbled touch events on the document object.\\n   *\\n   * Firefox v8.01 (and possibly others) exhibited strange behavior when\\n   * mounting `onmousemove` events at some node that was not the document\\n   * element. The symptoms were that if your mouse is not moving over something\\n   * contained within that mount point (for example on the background) the\\n   * top-level listeners for `onmousemove` won't be called. However, if you\\n   * register the `mousemove` on the document object, then it will of course\\n   * catch all `mousemove`s. This along with iOS quirks, justifies restricting\\n   * top-level listeners to the document object only, at least for these\\n   * movement types of events and possibly all events.\\n   *\\n   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\\n   *\\n   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but\\n   * they bubble to document.\\n   *\\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\\n   * @param {object} contentDocumentHandle Document which owns the container\\n   */\\n  listenTo: function (registrationName, contentDocumentHandle) {\\n    var mountAt = contentDocumentHandle;\\n    var isListening = getListeningForDocument(mountAt);\\n    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];\\n\\n    for (var i = 0; i < dependencies.length; i++) {\\n      var dependency = dependencies[i];\\n      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {\\n        if (dependency === 'topWheel') {\\n          if (isEventSupported('wheel')) {\\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'wheel', mountAt);\\n          } else if (isEventSupported('mousewheel')) {\\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'mousewheel', mountAt);\\n          } else {\\n            // Firefox needs to capture a different mouse scroll event.\\n            // @see http://www.quirksmode.org/dom/events/tests/scroll.html\\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'DOMMouseScroll', mountAt);\\n          }\\n        } else if (dependency === 'topScroll') {\\n\\n          if (isEventSupported('scroll', true)) {\\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topScroll', 'scroll', mountAt);\\n          } else {\\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topScroll', 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);\\n          }\\n        } else if (dependency === 'topFocus' || dependency === 'topBlur') {\\n\\n          if (isEventSupported('focus', true)) {\\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topFocus', 'focus', mountAt);\\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topBlur', 'blur', mountAt);\\n          } else if (isEventSupported('focusin')) {\\n            // IE has `focusin` and `focusout` events which bubble.\\n            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html\\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topFocus', 'focusin', mountAt);\\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topBlur', 'focusout', mountAt);\\n          }\\n\\n          // to make sure blur and focus event listeners are only attached once\\n          isListening.topBlur = true;\\n          isListening.topFocus = true;\\n        } else if (topEventMapping.hasOwnProperty(dependency)) {\\n          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);\\n        }\\n\\n        isListening[dependency] = true;\\n      }\\n    }\\n  },\\n\\n  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {\\n    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);\\n  },\\n\\n  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {\\n    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);\\n  },\\n\\n  /**\\n   * Protect against document.createEvent() returning null\\n   * Some popup blocker extensions appear to do this:\\n   * https://github.com/facebook/react/issues/6887\\n   */\\n  supportsEventPageXY: function () {\\n    if (!document.createEvent) {\\n      return false;\\n    }\\n    var ev = document.createEvent('MouseEvent');\\n    return ev != null && 'pageX' in ev;\\n  },\\n\\n  /**\\n   * Listens to window scroll and resize events. We cache scroll values so that\\n   * application code can access them without triggering reflows.\\n   *\\n   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when\\n   * pageX/pageY isn't supported (legacy browsers).\\n   *\\n   * NOTE: Scroll events do not bubble.\\n   *\\n   * @see http://www.quirksmode.org/dom/events/scroll.html\\n   */\\n  ensureScrollValueMonitoring: function () {\\n    if (hasEventPageXY === undefined) {\\n      hasEventPageXY = ReactBrowserEventEmitter.supportsEventPageXY();\\n    }\\n    if (!hasEventPageXY && !isMonitoringScrollValue) {\\n      var refresh = ViewportMetrics.refreshScrollValues;\\n      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);\\n      isMonitoringScrollValue = true;\\n    }\\n  }\\n\\n});\\n\\nmodule.exports = ReactBrowserEventEmitter;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"_assign\",\"EventPluginRegistry\",\"ReactEventEmitterMixin\",\"ViewportMetrics\",\"getVendorPrefixedEventName\",\"isEventSupported\",\"hasEventPageXY\",\"alreadyListeningTo\",\"isMonitoringScrollValue\",\"reactTopListenersCounter\",\"topEventMapping\",\"topAbort\",\"topAnimationEnd\",\"topAnimationIteration\",\"topAnimationStart\",\"topBlur\",\"topCanPlay\",\"topCanPlayThrough\",\"topChange\",\"topClick\",\"topCompositionEnd\",\"topCompositionStart\",\"topCompositionUpdate\",\"topContextMenu\",\"topCopy\",\"topCut\",\"topDoubleClick\",\"topDrag\",\"topDragEnd\",\"topDragEnter\",\"topDragExit\",\"topDragLeave\",\"topDragOver\",\"topDragStart\",\"topDrop\",\"topDurationChange\",\"topEmptied\",\"topEncrypted\",\"topEnded\",\"topError\",\"topFocus\",\"topInput\",\"topKeyDown\",\"topKeyPress\",\"topKeyUp\",\"topLoadedData\",\"topLoadedMetadata\",\"topLoadStart\",\"topMouseDown\",\"topMouseMove\",\"topMouseOut\",\"topMouseOver\",\"topMouseUp\",\"topPaste\",\"topPause\",\"topPlay\",\"topPlaying\",\"topProgress\",\"topRateChange\",\"topScroll\",\"topSeeked\",\"topSeeking\",\"topSelectionChange\",\"topStalled\",\"topSuspend\",\"topTextInput\",\"topTimeUpdate\",\"topTouchCancel\",\"topTouchEnd\",\"topTouchMove\",\"topTouchStart\",\"topTransitionEnd\",\"topVolumeChange\",\"topWaiting\",\"topWheel\",\"topListenersIDKey\",\"String\",\"Math\",\"random\",\"slice\",\"ReactBrowserEventEmitter\",\"ReactEventListener\",\"injection\",\"injectReactEventListener\",\"setHandleTopLevel\",\"handleTopLevel\",\"setEnabled\",\"enabled\",\"isEnabled\",\"listenTo\",\"registrationName\",\"contentDocumentHandle\",\"Object\",\"prototype\",\"hasOwnProperty\",\"call\",\"dependencies\",\"registrationNameDependencies\",\"i\",\"length\",\"dependency\",\"isListening\",\"trapBubbledEvent\",\"trapCapturedEvent\",\"WINDOW_HANDLE\",\"topLevelType\",\"handlerBaseName\",\"handle\",\"supportsEventPageXY\",\"document\",\"createEvent\",\"ev\",\"ensureScrollValueMonitoring\",\"undefined\",\"monitorScrollValue\",\"refreshScrollValues\"]\n}\n"]