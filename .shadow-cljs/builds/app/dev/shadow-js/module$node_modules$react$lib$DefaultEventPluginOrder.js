["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react/lib/DefaultEventPluginOrder.js"],"~:js","shadow$provide.module$node_modules$react$lib$DefaultEventPluginOrder=function(global,require,module,exports){global=require(\"module$node_modules$fbjs$lib$keyOf\");global=[global({ResponderEventPlugin:null}),global({SimpleEventPlugin:null}),global({TapEventPlugin:null}),global({EnterLeaveEventPlugin:null}),global({ChangeEventPlugin:null}),global({SelectEventPlugin:null}),global({BeforeInputEventPlugin:null})];module.exports=global}","~:source","shadow$provide[\"module$node_modules$react$lib$DefaultEventPluginOrder\"] = function(global,require,module,exports) {\n/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DefaultEventPluginOrder\n */\n\n'use strict';\n\nvar keyOf = require('fbjs/lib/keyOf');\n\n/**\n * Module that is injectable into `EventPluginHub`, that specifies a\n * deterministic ordering of `EventPlugin`s. A convenient way to reason about\n * plugins, without having to package every one of them. This is better than\n * having plugins be ordered in the same order that they are injected because\n * that ordering would be influenced by the packaging order.\n * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that\n * preventing default on events is convenient in `SimpleEventPlugin` handlers.\n */\nvar DefaultEventPluginOrder = [keyOf({ ResponderEventPlugin: null }), keyOf({ SimpleEventPlugin: null }), keyOf({ TapEventPlugin: null }), keyOf({ EnterLeaveEventPlugin: null }), keyOf({ ChangeEventPlugin: null }), keyOf({ SelectEventPlugin: null }), keyOf({ BeforeInputEventPlugin: null })];\n\nmodule.exports = DefaultEventPluginOrder;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$fbjs$lib$keyOf"]],"~:properties",["^5",["EnterLeaveEventPlugin","ResponderEventPlugin","SelectEventPlugin","TapEventPlugin","ChangeEventPlugin","SimpleEventPlugin","BeforeInputEventPlugin"]],"~:compiled-at",1635250628390,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react$lib$DefaultEventPluginOrder.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,qDAAA,CAA0E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAc9GC,MAAAA,CAAQH,OAAA,CAAQ,oCAAR,CAWRI,OAAAA,CAA0B,CAACD,MAAA,CAAM,CAAEE,qBAAsB,IAAxB,CAAN,CAAD,CAAwCF,MAAA,CAAM,CAAEG,kBAAmB,IAArB,CAAN,CAAxC,CAA4EH,MAAA,CAAM,CAAEI,eAAgB,IAAlB,CAAN,CAA5E,CAA6GJ,MAAA,CAAM,CAAEK,sBAAuB,IAAzB,CAAN,CAA7G,CAAqJL,MAAA,CAAM,CAAEM,kBAAmB,IAArB,CAAN,CAArJ,CAAyLN,MAAA,CAAM,CAAEO,kBAAmB,IAArB,CAAN,CAAzL,CAA6NP,MAAA,CAAM,CAAEQ,uBAAwB,IAA1B,CAAN,CAA7N,CAE9BV,OAAOC,CAAAA,OAAP,CAAiBE,MA3BiG;\",\n\"sources\":[\"node_modules/react/lib/DefaultEventPluginOrder.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react$lib$DefaultEventPluginOrder\\\"] = function(global,require,module,exports) {\\n/**\\n * Copyright 2013-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule DefaultEventPluginOrder\\n */\\n\\n'use strict';\\n\\nvar keyOf = require('fbjs/lib/keyOf');\\n\\n/**\\n * Module that is injectable into `EventPluginHub`, that specifies a\\n * deterministic ordering of `EventPlugin`s. A convenient way to reason about\\n * plugins, without having to package every one of them. This is better than\\n * having plugins be ordered in the same order that they are injected because\\n * that ordering would be influenced by the packaging order.\\n * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that\\n * preventing default on events is convenient in `SimpleEventPlugin` handlers.\\n */\\nvar DefaultEventPluginOrder = [keyOf({ ResponderEventPlugin: null }), keyOf({ SimpleEventPlugin: null }), keyOf({ TapEventPlugin: null }), keyOf({ EnterLeaveEventPlugin: null }), keyOf({ ChangeEventPlugin: null }), keyOf({ SelectEventPlugin: null }), keyOf({ BeforeInputEventPlugin: null })];\\n\\nmodule.exports = DefaultEventPluginOrder;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"keyOf\",\"DefaultEventPluginOrder\",\"ResponderEventPlugin\",\"SimpleEventPlugin\",\"TapEventPlugin\",\"EnterLeaveEventPlugin\",\"ChangeEventPlugin\",\"SelectEventPlugin\",\"BeforeInputEventPlugin\"]\n}\n"]