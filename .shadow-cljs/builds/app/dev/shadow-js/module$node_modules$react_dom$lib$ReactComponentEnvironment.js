["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react-dom/lib/ReactComponentEnvironment.js"],"~:js","shadow$provide.module$node_modules$react_dom$lib$ReactComponentEnvironment=function(global,process,require,module,exports,shadow$shims){require(\"module$node_modules$react_dom$lib$reactProdInvariant\");var invariant=require(\"module$node_modules$fbjs$lib$invariant\"),injected=!1,ReactComponentEnvironment={replaceNodeWithMarkup:null,processChildrenUpdates:null,injection:{injectEnvironment:function(environment){injected?invariant(!1,\"ReactCompositeComponent: injectEnvironment() can only be called once.\"):\nvoid 0;ReactComponentEnvironment.replaceNodeWithMarkup=environment.replaceNodeWithMarkup;ReactComponentEnvironment.processChildrenUpdates=environment.processChildrenUpdates;injected=!0}}};module.exports=ReactComponentEnvironment}","~:source","shadow$provide[\"module$node_modules$react_dom$lib$ReactComponentEnvironment\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar injected = false;\n\nvar ReactComponentEnvironment = {\n\n  /**\n   * Optionally injectable hook for swapping out mount images in the middle of\n   * the tree.\n   */\n  replaceNodeWithMarkup: null,\n\n  /**\n   * Optionally injectable hook for processing a queue of child updates. Will\n   * later move into MultiChildComponents.\n   */\n  processChildrenUpdates: null,\n\n  injection: {\n    injectEnvironment: function (environment) {\n      !!injected ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;\n      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;\n      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;\n      injected = true;\n    }\n  }\n\n};\n\nmodule.exports = ReactComponentEnvironment;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$fbjs$lib$invariant","~$module$node_modules$react_dom$lib$reactProdInvariant"]],"~:properties",["^5",["injection","replaceNodeWithMarkup","processChildrenUpdates","injectEnvironment"]],"~:compiled-at",1635270336841,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react_dom$lib$ReactComponentEnvironment.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,4DAAA,CAAgF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAcxHH,OAAA,CAAQ,sDAAR,CAErB,KAAII,UAAYJ,OAAA,CAAQ,wCAAR,CAAhB,CAEIK,SAAW,CAAA,CAFf,CAIIC,0BAA4B,CAM9BC,sBAAuB,IANO,CAY9BC,uBAAwB,IAZM,CAc9BC,UAAW,CACTC,kBAAmBA,QAAS,CAACC,WAAD,CAAc,CACtCN,QAAF,CAAqDD,SAAA,CAAU,CAAA,CAAV,CAAiB,uEAAjB,CAArD;AAAyK,IAAK,EAC9KE,0BAAAC,sBAAA,CAAkDI,WAAAJ,sBAClDD,0BAAAE,uBAAA,CAAmDG,WAAAH,uBACnDH,SAAA,CAAW,CAAA,CAJ6B,CADjC,CAdmB,CAyBhCJ,OAAAC,QAAA,CAAiBI,yBA7C4H;\",\n\"sources\":[\"node_modules/react-dom/lib/ReactComponentEnvironment.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react_dom$lib$ReactComponentEnvironment\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n/**\\n * Copyright 2014-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * \\n */\\n\\n'use strict';\\n\\nvar _prodInvariant = require('./reactProdInvariant');\\n\\nvar invariant = require('fbjs/lib/invariant');\\n\\nvar injected = false;\\n\\nvar ReactComponentEnvironment = {\\n\\n  /**\\n   * Optionally injectable hook for swapping out mount images in the middle of\\n   * the tree.\\n   */\\n  replaceNodeWithMarkup: null,\\n\\n  /**\\n   * Optionally injectable hook for processing a queue of child updates. Will\\n   * later move into MultiChildComponents.\\n   */\\n  processChildrenUpdates: null,\\n\\n  injection: {\\n    injectEnvironment: function (environment) {\\n      !!injected ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;\\n      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;\\n      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;\\n      injected = true;\\n    }\\n  }\\n\\n};\\n\\nmodule.exports = ReactComponentEnvironment;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"invariant\",\"injected\",\"ReactComponentEnvironment\",\"replaceNodeWithMarkup\",\"processChildrenUpdates\",\"injection\",\"injectEnvironment\",\"environment\"]\n}\n"]