["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react-dom/lib/SyntheticClipboardEvent.js"],"~:js","shadow$provide.module$node_modules$react_dom$lib$SyntheticClipboardEvent=function(global,process,require,module,exports,shadow$shims){function SyntheticClipboardEvent(dispatchConfig,dispatchMarker,nativeEvent,nativeEventTarget){return SyntheticEvent.call(this,dispatchConfig,dispatchMarker,nativeEvent,nativeEventTarget)}var SyntheticEvent=require(\"module$node_modules$react_dom$lib$SyntheticEvent\");SyntheticEvent.augmentClass(SyntheticClipboardEvent,{clipboardData:function(event){return\"clipboardData\"in\nevent?event.clipboardData:window.clipboardData}});module.exports=SyntheticClipboardEvent}","~:source","shadow$provide[\"module$node_modules$react_dom$lib$SyntheticClipboardEvent\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/clipboard-apis/\n */\nvar ClipboardEventInterface = {\n  clipboardData: function (event) {\n    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);\n\nmodule.exports = SyntheticClipboardEvent;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$react_dom$lib$SyntheticEvent"]],"~:properties",["^5",["clipboardData"]],"~:compiled-at",1635270336853,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react_dom$lib$SyntheticClipboardEvent.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,0DAAA,CAA8E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CA+B3IC,QAASA,wBAAuB,CAACC,cAAD,CAAiBC,cAAjB,CAAiCC,WAAjC,CAA8CC,iBAA9C,CAAiE,CAC/F,MAAOC,eAAAC,KAAA,CAAoB,IAApB,CAA0BL,cAA1B,CAA0CC,cAA1C,CAA0DC,WAA1D,CAAuEC,iBAAvE,CADwF,CAlBjG,IAAIC,eAAiBT,OAAA,CAAQ,kDAAR,CAsBrBS,eAAAE,aAAA,CAA4BP,uBAA5B,CAhB8BQ,CAC5BC,cAAeA,QAAS,CAACC,KAAD,CAAQ,CAC9B,MAAO,eAAA;AAAmBA,KAAnB,CAA2BA,KAAAD,cAA3B,CAAiDE,MAAAF,cAD1B,CADJD,CAgB9B,CAEAX,OAAAC,QAAA,CAAiBE,uBArC0H;\",\n\"sources\":[\"node_modules/react-dom/lib/SyntheticClipboardEvent.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react_dom$lib$SyntheticClipboardEvent\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n/**\\n * Copyright 2013-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n */\\n\\n'use strict';\\n\\nvar SyntheticEvent = require('./SyntheticEvent');\\n\\n/**\\n * @interface Event\\n * @see http://www.w3.org/TR/clipboard-apis/\\n */\\nvar ClipboardEventInterface = {\\n  clipboardData: function (event) {\\n    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;\\n  }\\n};\\n\\n/**\\n * @param {object} dispatchConfig Configuration used to dispatch this event.\\n * @param {string} dispatchMarker Marker identifying the event target.\\n * @param {object} nativeEvent Native browser event.\\n * @extends {SyntheticUIEvent}\\n */\\nfunction SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\\n  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\\n}\\n\\nSyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);\\n\\nmodule.exports = SyntheticClipboardEvent;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"SyntheticClipboardEvent\",\"dispatchConfig\",\"dispatchMarker\",\"nativeEvent\",\"nativeEventTarget\",\"SyntheticEvent\",\"call\",\"augmentClass\",\"ClipboardEventInterface\",\"clipboardData\",\"event\",\"window\"]\n}\n"]