["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react-dom/lib/ReactHostComponent.js"],"~:js","shadow$provide.module$node_modules$react_dom$lib$ReactHostComponent=function(global,process,require,module,exports,shadow$shims){require(\"module$node_modules$react_dom$lib$reactProdInvariant\");var invariant=require(\"module$node_modules$fbjs$lib$invariant\"),genericComponentClass=null,textComponentClass=null;module.exports={createInternalComponent:function(element){genericComponentClass?void 0:invariant(!1,\"There is no registered component for the tag %s\",element.type);return new genericComponentClass(element)},\ncreateInstanceForText:function(text){return new textComponentClass(text)},isTextComponent:function(component){return component instanceof textComponentClass},injection:{injectGenericComponentClass:function(componentClass){genericComponentClass=componentClass},injectTextComponentClass:function(componentClass){textComponentClass=componentClass}}}}","~:source","shadow$provide[\"module$node_modules$react_dom$lib$ReactHostComponent\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar genericComponentClass = null;\nvar textComponentClass = null;\n\nvar ReactHostComponentInjection = {\n  // This accepts a class that receives the tag string. This is a catch all\n  // that can render any kind of tag.\n  injectGenericComponentClass: function (componentClass) {\n    genericComponentClass = componentClass;\n  },\n  // This accepts a text component class that takes the text string to be\n  // rendered as props.\n  injectTextComponentClass: function (componentClass) {\n    textComponentClass = componentClass;\n  }\n};\n\n/**\n * Get a host internal component class for a specific tag.\n *\n * @param {ReactElement} element The element to create.\n * @return {function} The internal class constructor function.\n */\nfunction createInternalComponent(element) {\n  !genericComponentClass ? process.env.NODE_ENV !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;\n  return new genericComponentClass(element);\n}\n\n/**\n * @param {ReactText} text\n * @return {ReactComponent}\n */\nfunction createInstanceForText(text) {\n  return new textComponentClass(text);\n}\n\n/**\n * @param {ReactComponent} component\n * @return {boolean}\n */\nfunction isTextComponent(component) {\n  return component instanceof textComponentClass;\n}\n\nvar ReactHostComponent = {\n  createInternalComponent: createInternalComponent,\n  createInstanceForText: createInstanceForText,\n  isTextComponent: isTextComponent,\n  injection: ReactHostComponentInjection\n};\n\nmodule.exports = ReactHostComponent;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$fbjs$lib$invariant","~$module$node_modules$react_dom$lib$reactProdInvariant"]],"~:properties",["^5",["injection","injectTextComponentClass","createInstanceForText","isTextComponent","injectGenericComponentClass","createInternalComponent"]],"~:compiled-at",1635270336844,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react_dom$lib$ReactHostComponent.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,qDAAA,CAAyE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAajHH,OAAA,CAAQ,sDAAR,CAErB,KAAII,UAAYJ,OAAA,CAAQ,wCAAR,CAAhB,CAEIK,sBAAwB,IAF5B,CAGIC,mBAAqB,IAiDzBL,OAAAC,QAAA,CAPyBK,CACvBC,wBAtBFA,QAAgC,CAACC,OAAD,CAAU,CACvCJ,qBAAD,CAA2L,IAAK,EAAhM,CAAiED,SAAA,CAAU,CAAA,CAAV,CAAiB,iDAAjB,CAAoEK,OAAAC,KAApE,CACjE,OAAO,KAAIL,qBAAJ,CAA0BI,OAA1B,CAFiC,CAqBjBF;AAEvBI,sBAdFA,QAA8B,CAACC,IAAD,CAAO,CACnC,MAAO,KAAIN,kBAAJ,CAAuBM,IAAvB,CAD4B,CAYZL,CAGvBM,gBAPFA,QAAwB,CAACC,SAAD,CAAY,CAClC,MAAOA,UAAP,WAA4BR,mBADM,CAIXC,CAIvBQ,UA5CgCC,CAGhCC,4BAA6BA,QAAS,CAACC,cAAD,CAAiB,CACrDb,qBAAA,CAAwBa,cAD6B,CAHvBF,CAQhCG,yBAA0BA,QAAS,CAACD,cAAD,CAAiB,CAClDZ,kBAAA,CAAqBY,cAD6B,CARpBF,CAwCTT,CA5D6G;\",\n\"sources\":[\"node_modules/react-dom/lib/ReactHostComponent.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react_dom$lib$ReactHostComponent\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n/**\\n * Copyright 2014-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n */\\n\\n'use strict';\\n\\nvar _prodInvariant = require('./reactProdInvariant');\\n\\nvar invariant = require('fbjs/lib/invariant');\\n\\nvar genericComponentClass = null;\\nvar textComponentClass = null;\\n\\nvar ReactHostComponentInjection = {\\n  // This accepts a class that receives the tag string. This is a catch all\\n  // that can render any kind of tag.\\n  injectGenericComponentClass: function (componentClass) {\\n    genericComponentClass = componentClass;\\n  },\\n  // This accepts a text component class that takes the text string to be\\n  // rendered as props.\\n  injectTextComponentClass: function (componentClass) {\\n    textComponentClass = componentClass;\\n  }\\n};\\n\\n/**\\n * Get a host internal component class for a specific tag.\\n *\\n * @param {ReactElement} element The element to create.\\n * @return {function} The internal class constructor function.\\n */\\nfunction createInternalComponent(element) {\\n  !genericComponentClass ? process.env.NODE_ENV !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;\\n  return new genericComponentClass(element);\\n}\\n\\n/**\\n * @param {ReactText} text\\n * @return {ReactComponent}\\n */\\nfunction createInstanceForText(text) {\\n  return new textComponentClass(text);\\n}\\n\\n/**\\n * @param {ReactComponent} component\\n * @return {boolean}\\n */\\nfunction isTextComponent(component) {\\n  return component instanceof textComponentClass;\\n}\\n\\nvar ReactHostComponent = {\\n  createInternalComponent: createInternalComponent,\\n  createInstanceForText: createInstanceForText,\\n  isTextComponent: isTextComponent,\\n  injection: ReactHostComponentInjection\\n};\\n\\nmodule.exports = ReactHostComponent;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"invariant\",\"genericComponentClass\",\"textComponentClass\",\"ReactHostComponent\",\"createInternalComponent\",\"element\",\"type\",\"createInstanceForText\",\"text\",\"isTextComponent\",\"component\",\"injection\",\"ReactHostComponentInjection\",\"injectGenericComponentClass\",\"componentClass\",\"injectTextComponentClass\"]\n}\n"]