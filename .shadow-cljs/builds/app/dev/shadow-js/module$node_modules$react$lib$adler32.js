["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react/lib/adler32.js"],"~:js","shadow$provide.module$node_modules$react$lib$adler32=function(global,require,module,exports){module.exports=function(data){for(var a=1,b=0,i=0,l=data.length,m=l&-4;i<m;){for(var n=Math.min(i+4096,m);i<n;i+=4)b+=(a+=data.charCodeAt(i))+(a+=data.charCodeAt(i+1))+(a+=data.charCodeAt(i+2))+(a+=data.charCodeAt(i+3));a%=65521;b%=65521}for(;i<l;i++)b+=a+=data.charCodeAt(i);return a%65521|b%65521<<16}}","~:source","shadow$provide[\"module$node_modules$react$lib$adler32\"] = function(global,require,module,exports) {\n/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule adler32\n * \n */\n\n'use strict';\n\nvar MOD = 65521;\n\n// adler32 is not cryptographically strong, and is only used to sanity check that\n// markup generated on the server matches the markup generated on the client.\n// This implementation (a modified version of the SheetJS version) has been optimized\n// for our use case, at the expense of conforming to the adler32 specification\n// for non-ascii inputs.\nfunction adler32(data) {\n  var a = 1;\n  var b = 0;\n  var i = 0;\n  var l = data.length;\n  var m = l & ~0x3;\n  while (i < m) {\n    var n = Math.min(i + 4096, m);\n    for (; i < n; i += 4) {\n      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));\n    }\n    a %= MOD;\n    b %= MOD;\n  }\n  for (; i < l; i++) {\n    b += a += data.charCodeAt(i);\n  }\n  a %= MOD;\n  b %= MOD;\n  return a | b << 16;\n}\n\nmodule.exports = adler32;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",[]],"~:compiled-at",1635250628421,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react$lib$adler32.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,qCAAA,CAA0D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA4ClGD,MAAOC,CAAAA,OAAP,CAtBAC,QAAgB,CAACC,IAAD,CAAO,CAMrB,IALA,IAAIC,EAAI,CAAR,CACIC,EAAI,CADR,CAEIC,EAAI,CAFR,CAGIC,EAAIJ,IAAKK,CAAAA,MAHb,CAIIC,EAAIF,CAAJE,CAAQ,EACZ,CAAOH,CAAP,CAAWG,CAAX,CAAA,CAAc,CAEZ,IADA,IAAIC,EAAIC,IAAKC,CAAAA,GAAL,CAASN,CAAT,CAAa,IAAb,CAAmBG,CAAnB,CACR,CAAOH,CAAP,CAAWI,CAAX,CAAcJ,CAAd,EAAmB,CAAnB,CACED,CAAA,GAAMD,CAAN,EAAWD,IAAKU,CAAAA,UAAL,CAAgBP,CAAhB,CAAX,GAAkCF,CAAlC,EAAuCD,IAAKU,CAAAA,UAAL,CAAgBP,CAAhB,CAAoB,CAApB,CAAvC,GAAkEF,CAAlE,EAAuED,IAAKU,CAAAA,UAAL,CAAgBP,CAAhB,CAAoB,CAApB,CAAvE,GAAkGF,CAAlG,EAAuGD,IAAKU,CAAAA,UAAL,CAAgBP,CAAhB,CAAoB,CAApB,CAAvG,CAEFF,EAAA,EAlBMU,KAmBNT,EAAA,EAnBMS,KAaM,CAQd,IAAA,CAAOR,CAAP,CAAWC,CAAX,CAAcD,CAAA,EAAd,CACED,CAAA,EAAKD,CAAL,EAAUD,IAAKU,CAAAA,UAAL,CAAgBP,CAAhB,CAIZ,OAFAF,EAEA,CA1BQU,KA0BR,CADAT,CACA,CA1BQS,KA0BR,EAAgB,EAnBK,CAtB2E;\",\n\"sources\":[\"node_modules/react/lib/adler32.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react$lib$adler32\\\"] = function(global,require,module,exports) {\\n/**\\n * Copyright 2013-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule adler32\\n * \\n */\\n\\n'use strict';\\n\\nvar MOD = 65521;\\n\\n// adler32 is not cryptographically strong, and is only used to sanity check that\\n// markup generated on the server matches the markup generated on the client.\\n// This implementation (a modified version of the SheetJS version) has been optimized\\n// for our use case, at the expense of conforming to the adler32 specification\\n// for non-ascii inputs.\\nfunction adler32(data) {\\n  var a = 1;\\n  var b = 0;\\n  var i = 0;\\n  var l = data.length;\\n  var m = l & ~0x3;\\n  while (i < m) {\\n    var n = Math.min(i + 4096, m);\\n    for (; i < n; i += 4) {\\n      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));\\n    }\\n    a %= MOD;\\n    b %= MOD;\\n  }\\n  for (; i < l; i++) {\\n    b += a += data.charCodeAt(i);\\n  }\\n  a %= MOD;\\n  b %= MOD;\\n  return a | b << 16;\\n}\\n\\nmodule.exports = adler32;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"adler32\",\"data\",\"a\",\"b\",\"i\",\"l\",\"length\",\"m\",\"n\",\"Math\",\"min\",\"charCodeAt\",\"MOD\"]\n}\n"]