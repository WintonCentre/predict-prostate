["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react/lib/CSSPropertyOperations.js"],"~:js","shadow$provide.module$node_modules$react$lib$CSSPropertyOperations=function(global,require,module,exports){var CSSProperty=require(\"module$node_modules$react$lib$CSSProperty\");global=require(\"module$node_modules$fbjs$lib$ExecutionEnvironment\");var ReactInstrumentation=require(\"module$node_modules$react$lib$ReactInstrumentation\"),camelizeStyleName=require(\"module$node_modules$fbjs$lib$camelizeStyleName\"),dangerousStyleValue=require(\"module$node_modules$react$lib$dangerousStyleValue\"),hyphenateStyleName=\nrequire(\"module$node_modules$fbjs$lib$hyphenateStyleName\");exports=require(\"module$node_modules$fbjs$lib$memoizeStringOnly\");var warning=require(\"module$node_modules$fbjs$lib$warning\"),processStyleName=exports(function(styleName){return hyphenateStyleName(styleName)}),hasShorthandPropertyBug=!1,styleFloatAccessor=\"cssFloat\";if(global.canUseDOM){require=document.createElement(\"div\").style;try{require.font=\"\"}catch(e){hasShorthandPropertyBug=!0}void 0===document.documentElement.style.cssFloat&&(styleFloatAccessor=\n\"styleFloat\")}var badVendoredStyleNamePattern=/^(?:webkit|moz|o)[A-Z]/,badStyleValueWithSemicolonPattern=/;\\s*$/,warnedStyleNames={},warnedStyleValues={},warnedForNaNValue=!1,checkRenderMessage=function(owner){return owner&&(owner=owner.getName())?\" Check the render method of `\"+owner+\"`.\":\"\"},warnValidStyle=function(name,value,component){if(component)var owner=component._currentElement._owner;-1<name.indexOf(\"-\")?(component=owner,warnedStyleNames.hasOwnProperty(name)&&warnedStyleNames[name]||(warnedStyleNames[name]=\n!0,warning(!1,\"Unsupported style property %s. Did you mean %s?%s\",name,camelizeStyleName(name),checkRenderMessage(component)))):badVendoredStyleNamePattern.test(name)?(component=owner,warnedStyleNames.hasOwnProperty(name)&&warnedStyleNames[name]||(warnedStyleNames[name]=!0,warning(!1,\"Unsupported vendor-prefixed style property %s. Did you mean %s?%s\",name,name.charAt(0).toUpperCase()+name.slice(1),checkRenderMessage(component)))):badStyleValueWithSemicolonPattern.test(value)&&(component=owner,warnedStyleValues.hasOwnProperty(value)&&\nwarnedStyleValues[value]||(warnedStyleValues[value]=!0,warning(!1,'Style property values shouldn\\'t contain a semicolon.%s Try \"%s: %s\" instead.',checkRenderMessage(component),name,value.replace(badStyleValueWithSemicolonPattern,\"\"))));\"number\"===typeof value&&isNaN(value)&&(warnedForNaNValue||(warnedForNaNValue=!0,warning(!1,\"`NaN` is an invalid value for the `%s` css style property.%s\",name,checkRenderMessage(owner))))};module.exports={createMarkupForStyles:function(styles,component){var serialized=\n\"\",styleName;for(styleName in styles)if(styles.hasOwnProperty(styleName)){var styleValue=styles[styleName];warnValidStyle(styleName,styleValue,component);null!=styleValue&&(serialized+=processStyleName(styleName)+\":\",serialized+=dangerousStyleValue(styleName,styleValue,component)+\";\")}return serialized||null},setValueForStyles:function(node,styles,component){ReactInstrumentation.debugTool.onHostOperation(component._debugID,\"update styles\",styles);node=node.style;for(var styleName in styles)if(styles.hasOwnProperty(styleName)){warnValidStyle(styleName,\nstyles[styleName],component);var styleValue=dangerousStyleValue(styleName,styles[styleName],component);if(\"float\"===styleName||\"cssFloat\"===styleName)styleName=styleFloatAccessor;if(styleValue)node[styleName]=styleValue;else if(styleValue=hasShorthandPropertyBug&&CSSProperty.shorthandPropertyExpansions[styleName])for(var individualStyleName in styleValue)node[individualStyleName]=\"\";else node[styleName]=\"\"}}}}","~:source","shadow$provide[\"module$node_modules$react$lib$CSSPropertyOperations\"] = function(global,require,module,exports) {\n/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule CSSPropertyOperations\n */\n\n'use strict';\n\nvar CSSProperty = require('./CSSProperty');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar ReactInstrumentation = require('./ReactInstrumentation');\n\nvar camelizeStyleName = require('fbjs/lib/camelizeStyleName');\nvar dangerousStyleValue = require('./dangerousStyleValue');\nvar hyphenateStyleName = require('fbjs/lib/hyphenateStyleName');\nvar memoizeStringOnly = require('fbjs/lib/memoizeStringOnly');\nvar warning = require('fbjs/lib/warning');\n\nvar processStyleName = memoizeStringOnly(function (styleName) {\n  return hyphenateStyleName(styleName);\n});\n\nvar hasShorthandPropertyBug = false;\nvar styleFloatAccessor = 'cssFloat';\nif (ExecutionEnvironment.canUseDOM) {\n  var tempStyle = document.createElement('div').style;\n  try {\n    // IE8 throws \"Invalid argument.\" if resetting shorthand style properties.\n    tempStyle.font = '';\n  } catch (e) {\n    hasShorthandPropertyBug = true;\n  }\n  // IE8 only supports accessing cssFloat (standard) as styleFloat\n  if (document.documentElement.style.cssFloat === undefined) {\n    styleFloatAccessor = 'styleFloat';\n  }\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  // 'msTransform' is correct, but the other prefixes should be capitalized\n  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;\n\n  // style values shouldn't contain a semicolon\n  var badStyleValueWithSemicolonPattern = /;\\s*$/;\n\n  var warnedStyleNames = {};\n  var warnedStyleValues = {};\n  var warnedForNaNValue = false;\n\n  var warnHyphenatedStyleName = function (name, owner) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;\n  };\n\n  var warnBadVendoredStyleName = function (name, owner) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;\n  };\n\n  var warnStyleValueWithSemicolon = function (name, value, owner) {\n    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {\n      return;\n    }\n\n    warnedStyleValues[value] = true;\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\\'t contain a semicolon.%s ' + 'Try \"%s: %s\" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;\n  };\n\n  var warnStyleValueIsNaN = function (name, value, owner) {\n    if (warnedForNaNValue) {\n      return;\n    }\n\n    warnedForNaNValue = true;\n    process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;\n  };\n\n  var checkRenderMessage = function (owner) {\n    if (owner) {\n      var name = owner.getName();\n      if (name) {\n        return ' Check the render method of `' + name + '`.';\n      }\n    }\n    return '';\n  };\n\n  /**\n   * @param {string} name\n   * @param {*} value\n   * @param {ReactDOMComponent} component\n   */\n  var warnValidStyle = function (name, value, component) {\n    var owner;\n    if (component) {\n      owner = component._currentElement._owner;\n    }\n    if (name.indexOf('-') > -1) {\n      warnHyphenatedStyleName(name, owner);\n    } else if (badVendoredStyleNamePattern.test(name)) {\n      warnBadVendoredStyleName(name, owner);\n    } else if (badStyleValueWithSemicolonPattern.test(value)) {\n      warnStyleValueWithSemicolon(name, value, owner);\n    }\n\n    if (typeof value === 'number' && isNaN(value)) {\n      warnStyleValueIsNaN(name, value, owner);\n    }\n  };\n}\n\n/**\n * Operations for dealing with CSS properties.\n */\nvar CSSPropertyOperations = {\n\n  /**\n   * Serializes a mapping of style properties for use as inline styles:\n   *\n   *   > createMarkupForStyles({width: '200px', height: 0})\n   *   \"width:200px;height:0;\"\n   *\n   * Undefined values are ignored so that declarative programming is easier.\n   * The result should be HTML-escaped before insertion into the DOM.\n   *\n   * @param {object} styles\n   * @param {ReactDOMComponent} component\n   * @return {?string}\n   */\n  createMarkupForStyles: function (styles, component) {\n    var serialized = '';\n    for (var styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) {\n        continue;\n      }\n      var styleValue = styles[styleName];\n      if (process.env.NODE_ENV !== 'production') {\n        warnValidStyle(styleName, styleValue, component);\n      }\n      if (styleValue != null) {\n        serialized += processStyleName(styleName) + ':';\n        serialized += dangerousStyleValue(styleName, styleValue, component) + ';';\n      }\n    }\n    return serialized || null;\n  },\n\n  /**\n   * Sets the value for multiple styles on a node.  If a value is specified as\n   * '' (empty string), the corresponding style property will be unset.\n   *\n   * @param {DOMElement} node\n   * @param {object} styles\n   * @param {ReactDOMComponent} component\n   */\n  setValueForStyles: function (node, styles, component) {\n    if (process.env.NODE_ENV !== 'production') {\n      ReactInstrumentation.debugTool.onHostOperation(component._debugID, 'update styles', styles);\n    }\n\n    var style = node.style;\n    for (var styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) {\n        continue;\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        warnValidStyle(styleName, styles[styleName], component);\n      }\n      var styleValue = dangerousStyleValue(styleName, styles[styleName], component);\n      if (styleName === 'float' || styleName === 'cssFloat') {\n        styleName = styleFloatAccessor;\n      }\n      if (styleValue) {\n        style[styleName] = styleValue;\n      } else {\n        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];\n        if (expansion) {\n          // Shorthand property that IE8 won't like unsetting, so unset each\n          // component to placate it\n          for (var individualStyleName in expansion) {\n            style[individualStyleName] = '';\n          }\n        } else {\n          style[styleName] = '';\n        }\n      }\n    }\n  }\n\n};\n\nmodule.exports = CSSPropertyOperations;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$fbjs$lib$hyphenateStyleName","~$module$node_modules$react$lib$dangerousStyleValue","~$shadow.js","~$module$node_modules$fbjs$lib$memoizeStringOnly","~$module$node_modules$react$lib$CSSProperty","~$module$node_modules$fbjs$lib$camelizeStyleName","~$module$node_modules$react$lib$ReactInstrumentation","~$module$node_modules$fbjs$lib$ExecutionEnvironment","~$module$node_modules$fbjs$lib$warning"]],"~:properties",["^5",["createMarkupForStyles","font","setValueForStyles"]],"~:compiled-at",1635250628395,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react$lib$CSSPropertyOperations.js\",\n\"lineCount\":7,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/react/lib/CSSPropertyOperations.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react$lib$CSSPropertyOperations\\\"] = function(global,require,module,exports) {\\n/**\\n * Copyright 2013-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule CSSPropertyOperations\\n */\\n\\n'use strict';\\n\\nvar CSSProperty = require('./CSSProperty');\\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\\nvar ReactInstrumentation = require('./ReactInstrumentation');\\n\\nvar camelizeStyleName = require('fbjs/lib/camelizeStyleName');\\nvar dangerousStyleValue = require('./dangerousStyleValue');\\nvar hyphenateStyleName = require('fbjs/lib/hyphenateStyleName');\\nvar memoizeStringOnly = require('fbjs/lib/memoizeStringOnly');\\nvar warning = require('fbjs/lib/warning');\\n\\nvar processStyleName = memoizeStringOnly(function (styleName) {\\n  return hyphenateStyleName(styleName);\\n});\\n\\nvar hasShorthandPropertyBug = false;\\nvar styleFloatAccessor = 'cssFloat';\\nif (ExecutionEnvironment.canUseDOM) {\\n  var tempStyle = document.createElement('div').style;\\n  try {\\n    // IE8 throws \\\"Invalid argument.\\\" if resetting shorthand style properties.\\n    tempStyle.font = '';\\n  } catch (e) {\\n    hasShorthandPropertyBug = true;\\n  }\\n  // IE8 only supports accessing cssFloat (standard) as styleFloat\\n  if (document.documentElement.style.cssFloat === undefined) {\\n    styleFloatAccessor = 'styleFloat';\\n  }\\n}\\n\\nif (process.env.NODE_ENV !== 'production') {\\n  // 'msTransform' is correct, but the other prefixes should be capitalized\\n  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;\\n\\n  // style values shouldn't contain a semicolon\\n  var badStyleValueWithSemicolonPattern = /;\\\\s*$/;\\n\\n  var warnedStyleNames = {};\\n  var warnedStyleValues = {};\\n  var warnedForNaNValue = false;\\n\\n  var warnHyphenatedStyleName = function (name, owner) {\\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\\n      return;\\n    }\\n\\n    warnedStyleNames[name] = true;\\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;\\n  };\\n\\n  var warnBadVendoredStyleName = function (name, owner) {\\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\\n      return;\\n    }\\n\\n    warnedStyleNames[name] = true;\\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;\\n  };\\n\\n  var warnStyleValueWithSemicolon = function (name, value, owner) {\\n    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {\\n      return;\\n    }\\n\\n    warnedStyleValues[value] = true;\\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\\\\'t contain a semicolon.%s ' + 'Try \\\"%s: %s\\\" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;\\n  };\\n\\n  var warnStyleValueIsNaN = function (name, value, owner) {\\n    if (warnedForNaNValue) {\\n      return;\\n    }\\n\\n    warnedForNaNValue = true;\\n    process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;\\n  };\\n\\n  var checkRenderMessage = function (owner) {\\n    if (owner) {\\n      var name = owner.getName();\\n      if (name) {\\n        return ' Check the render method of `' + name + '`.';\\n      }\\n    }\\n    return '';\\n  };\\n\\n  /**\\n   * @param {string} name\\n   * @param {*} value\\n   * @param {ReactDOMComponent} component\\n   */\\n  var warnValidStyle = function (name, value, component) {\\n    var owner;\\n    if (component) {\\n      owner = component._currentElement._owner;\\n    }\\n    if (name.indexOf('-') > -1) {\\n      warnHyphenatedStyleName(name, owner);\\n    } else if (badVendoredStyleNamePattern.test(name)) {\\n      warnBadVendoredStyleName(name, owner);\\n    } else if (badStyleValueWithSemicolonPattern.test(value)) {\\n      warnStyleValueWithSemicolon(name, value, owner);\\n    }\\n\\n    if (typeof value === 'number' && isNaN(value)) {\\n      warnStyleValueIsNaN(name, value, owner);\\n    }\\n  };\\n}\\n\\n/**\\n * Operations for dealing with CSS properties.\\n */\\nvar CSSPropertyOperations = {\\n\\n  /**\\n   * Serializes a mapping of style properties for use as inline styles:\\n   *\\n   *   > createMarkupForStyles({width: '200px', height: 0})\\n   *   \\\"width:200px;height:0;\\\"\\n   *\\n   * Undefined values are ignored so that declarative programming is easier.\\n   * The result should be HTML-escaped before insertion into the DOM.\\n   *\\n   * @param {object} styles\\n   * @param {ReactDOMComponent} component\\n   * @return {?string}\\n   */\\n  createMarkupForStyles: function (styles, component) {\\n    var serialized = '';\\n    for (var styleName in styles) {\\n      if (!styles.hasOwnProperty(styleName)) {\\n        continue;\\n      }\\n      var styleValue = styles[styleName];\\n      if (process.env.NODE_ENV !== 'production') {\\n        warnValidStyle(styleName, styleValue, component);\\n      }\\n      if (styleValue != null) {\\n        serialized += processStyleName(styleName) + ':';\\n        serialized += dangerousStyleValue(styleName, styleValue, component) + ';';\\n      }\\n    }\\n    return serialized || null;\\n  },\\n\\n  /**\\n   * Sets the value for multiple styles on a node.  If a value is specified as\\n   * '' (empty string), the corresponding style property will be unset.\\n   *\\n   * @param {DOMElement} node\\n   * @param {object} styles\\n   * @param {ReactDOMComponent} component\\n   */\\n  setValueForStyles: function (node, styles, component) {\\n    if (process.env.NODE_ENV !== 'production') {\\n      ReactInstrumentation.debugTool.onHostOperation(component._debugID, 'update styles', styles);\\n    }\\n\\n    var style = node.style;\\n    for (var styleName in styles) {\\n      if (!styles.hasOwnProperty(styleName)) {\\n        continue;\\n      }\\n      if (process.env.NODE_ENV !== 'production') {\\n        warnValidStyle(styleName, styles[styleName], component);\\n      }\\n      var styleValue = dangerousStyleValue(styleName, styles[styleName], component);\\n      if (styleName === 'float' || styleName === 'cssFloat') {\\n        styleName = styleFloatAccessor;\\n      }\\n      if (styleValue) {\\n        style[styleName] = styleValue;\\n      } else {\\n        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];\\n        if (expansion) {\\n          // Shorthand property that IE8 won't like unsetting, so unset each\\n          // component to placate it\\n          for (var individualStyleName in expansion) {\\n            style[individualStyleName] = '';\\n          }\\n        } else {\\n          style[styleName] = '';\\n        }\\n      }\\n    }\\n  }\\n\\n};\\n\\nmodule.exports = CSSPropertyOperations;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"CSSProperty\",\"ExecutionEnvironment\",\"ReactInstrumentation\",\"camelizeStyleName\",\"dangerousStyleValue\",\"hyphenateStyleName\",\"memoizeStringOnly\",\"warning\",\"processStyleName\",\"styleName\",\"hasShorthandPropertyBug\",\"styleFloatAccessor\",\"canUseDOM\",\"tempStyle\",\"document\",\"createElement\",\"style\",\"font\",\"e\",\"undefined\",\"documentElement\",\"cssFloat\",\"badVendoredStyleNamePattern\",\"badStyleValueWithSemicolonPattern\",\"warnedStyleNames\",\"warnedStyleValues\",\"warnedForNaNValue\",\"checkRenderMessage\",\"owner\",\"name\",\"getName\",\"warnValidStyle\",\"value\",\"component\",\"_currentElement\",\"_owner\",\"indexOf\",\"hasOwnProperty\",\"test\",\"charAt\",\"toUpperCase\",\"slice\",\"replace\",\"isNaN\",\"CSSPropertyOperations\",\"createMarkupForStyles\",\"styles\",\"serialized\",\"styleValue\",\"setValueForStyles\",\"node\",\"debugTool\",\"onHostOperation\",\"_debugID\",\"expansion\",\"shorthandPropertyExpansions\",\"individualStyleName\"]\n}\n"]