["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react/lib/ReactMarkupChecksum.js"],"~:js","shadow$provide.module$node_modules$react$lib$ReactMarkupChecksum=function(global,require,module,exports){var adler32=require(\"module$node_modules$react$lib$adler32\"),TAG_END=/\\/?>/,COMMENT_START=/^<!\\-\\-/,ReactMarkupChecksum={CHECKSUM_ATTR_NAME:\"data-react-checksum\",addChecksumToMarkup:function(markup){var checksum=adler32(markup);return COMMENT_START.test(markup)?markup:markup.replace(TAG_END,\" \"+ReactMarkupChecksum.CHECKSUM_ATTR_NAME+'\\x3d\"'+checksum+'\"$\\x26')},canReuseMarkup:function(markup,element){element=\n(element=element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME))&&parseInt(element,10);return adler32(markup)===element}};module.exports=ReactMarkupChecksum}","~:source","shadow$provide[\"module$node_modules$react$lib$ReactMarkupChecksum\"] = function(global,require,module,exports) {\n/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactMarkupChecksum\n */\n\n'use strict';\n\nvar adler32 = require('./adler32');\n\nvar TAG_END = /\\/?>/;\nvar COMMENT_START = /^<\\!\\-\\-/;\n\nvar ReactMarkupChecksum = {\n  CHECKSUM_ATTR_NAME: 'data-react-checksum',\n\n  /**\n   * @param {string} markup Markup string\n   * @return {string} Markup string with checksum attribute attached\n   */\n  addChecksumToMarkup: function (markup) {\n    var checksum = adler32(markup);\n\n    // Add checksum (handle both parent tags, comments and self-closing tags)\n    if (COMMENT_START.test(markup)) {\n      return markup;\n    } else {\n      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '=\"' + checksum + '\"$&');\n    }\n  },\n\n  /**\n   * @param {string} markup to use\n   * @param {DOMElement} element root React element\n   * @returns {boolean} whether or not the markup is the same\n   */\n  canReuseMarkup: function (markup, element) {\n    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);\n    var markupChecksum = adler32(markup);\n    return markupChecksum === existingChecksum;\n  }\n};\n\nmodule.exports = ReactMarkupChecksum;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$react$lib$adler32"]],"~:properties",["^5",["CHECKSUM_ATTR_NAME","addChecksumToMarkup","canReuseMarkup"]],"~:compiled-at",1635250628421,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react$lib$ReactMarkupChecksum.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,iDAAA,CAAsE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAc9G,IAAIC,QAAUH,OAAA,CAAQ,uCAAR,CAAd,CAEII,QAAU,MAFd,CAGIC,cAAgB,SAHpB,CAKIC,oBAAsB,CACxBC,mBAAoB,qBADI,CAOxBC,oBAAqBA,QAAS,CAACC,MAAD,CAAS,CACrC,IAAIC,SAAWP,OAAA,CAAQM,MAAR,CAGf,OAAIJ,cAAcM,CAAAA,IAAd,CAAmBF,MAAnB,CAAJ,CACSA,MADT,CAGSA,MAAOG,CAAAA,OAAP,CAAeR,OAAf,CAAwB,GAAxB,CAA8BE,mBAAoBC,CAAAA,kBAAlD,CAAuE,OAAvE,CAA8EG,QAA9E,CAAyF,QAAzF,CAP4B,CAPf,CAuBxBG,eAAgBA,QAAS,CAACJ,MAAD,CAASK,OAAT,CAAkB,CAEzCC,OAAA;CADIA,OACJ,CADuBD,OAAQE,CAAAA,YAAR,CAAqBV,mBAAoBC,CAAAA,kBAAzC,CACvB,GAAuCU,QAAA,CAASF,OAAT,CAA2B,EAA3B,CAEvC,OADqBZ,QAAAe,CAAQT,MAARS,CACrB,GAA0BH,OAJe,CAvBnB,CA+B1Bd,OAAOC,CAAAA,OAAP,CAAiBI,mBAlD6F;\",\n\"sources\":[\"node_modules/react/lib/ReactMarkupChecksum.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react$lib$ReactMarkupChecksum\\\"] = function(global,require,module,exports) {\\n/**\\n * Copyright 2013-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactMarkupChecksum\\n */\\n\\n'use strict';\\n\\nvar adler32 = require('./adler32');\\n\\nvar TAG_END = /\\\\/?>/;\\nvar COMMENT_START = /^<\\\\!\\\\-\\\\-/;\\n\\nvar ReactMarkupChecksum = {\\n  CHECKSUM_ATTR_NAME: 'data-react-checksum',\\n\\n  /**\\n   * @param {string} markup Markup string\\n   * @return {string} Markup string with checksum attribute attached\\n   */\\n  addChecksumToMarkup: function (markup) {\\n    var checksum = adler32(markup);\\n\\n    // Add checksum (handle both parent tags, comments and self-closing tags)\\n    if (COMMENT_START.test(markup)) {\\n      return markup;\\n    } else {\\n      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '=\\\"' + checksum + '\\\"$&');\\n    }\\n  },\\n\\n  /**\\n   * @param {string} markup to use\\n   * @param {DOMElement} element root React element\\n   * @returns {boolean} whether or not the markup is the same\\n   */\\n  canReuseMarkup: function (markup, element) {\\n    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\\n    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);\\n    var markupChecksum = adler32(markup);\\n    return markupChecksum === existingChecksum;\\n  }\\n};\\n\\nmodule.exports = ReactMarkupChecksum;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"adler32\",\"TAG_END\",\"COMMENT_START\",\"ReactMarkupChecksum\",\"CHECKSUM_ATTR_NAME\",\"addChecksumToMarkup\",\"markup\",\"checksum\",\"test\",\"replace\",\"canReuseMarkup\",\"element\",\"existingChecksum\",\"getAttribute\",\"parseInt\",\"markupChecksum\"]\n}\n"]