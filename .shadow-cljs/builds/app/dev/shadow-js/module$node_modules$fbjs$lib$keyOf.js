["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/fbjs/lib/keyOf.js"],"~:js","shadow$provide.module$node_modules$fbjs$lib$keyOf=function(global,require,module,exports){module.exports=function(oneKeyObj){for(var key in oneKeyObj)if(oneKeyObj.hasOwnProperty(key))return key;return null}}","~:source","shadow$provide[\"module$node_modules$fbjs$lib$keyOf\"] = function(global,require,module,exports) {\n\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/**\n * Allows extraction of a minified key. Let's the build system minify keys\n * without losing the ability to dynamically use key strings as values\n * themselves. Pass in an object with a single key/val pair and it will return\n * you the string key of that single record. Suppose you want to grab the\n * value for a key 'className' inside of an object. Key/val minification may\n * have aliased that key to be 'xa12'. keyOf({className: null}) will return\n * 'xa12' in that case. Resolve keys you want to use once at startup time, then\n * reuse those resolutions.\n */\nvar keyOf = function keyOf(oneKeyObj) {\n  var key;\n  for (key in oneKeyObj) {\n    if (!oneKeyObj.hasOwnProperty(key)) {\n      continue;\n    }\n    return key;\n  }\n  return null;\n};\n\nmodule.exports = keyOf;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",[]],"~:compiled-at",1635250628297,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$fbjs$lib$keyOf.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,kCAAA,CAAuD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAgC/FD,MAAOC,CAAAA,OAAP,CAXYC,QAAc,CAACC,SAAD,CAAY,CAEpC,IADAC,IAAIA,GACJ,GAAYD,UAAZ,CACE,GAAKA,SAAUE,CAAAA,cAAV,CAAyBD,GAAzB,CAAL,CAGA,MAAOA,IAET,OAAO,KAR6B,CArByD;\",\n\"sources\":[\"node_modules/fbjs/lib/keyOf.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$fbjs$lib$keyOf\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\n/**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n *\\n */\\n\\n/**\\n * Allows extraction of a minified key. Let's the build system minify keys\\n * without losing the ability to dynamically use key strings as values\\n * themselves. Pass in an object with a single key/val pair and it will return\\n * you the string key of that single record. Suppose you want to grab the\\n * value for a key 'className' inside of an object. Key/val minification may\\n * have aliased that key to be 'xa12'. keyOf({className: null}) will return\\n * 'xa12' in that case. Resolve keys you want to use once at startup time, then\\n * reuse those resolutions.\\n */\\nvar keyOf = function keyOf(oneKeyObj) {\\n  var key;\\n  for (key in oneKeyObj) {\\n    if (!oneKeyObj.hasOwnProperty(key)) {\\n      continue;\\n    }\\n    return key;\\n  }\\n  return null;\\n};\\n\\nmodule.exports = keyOf;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"keyOf\",\"oneKeyObj\",\"key\",\"hasOwnProperty\"]\n}\n"]