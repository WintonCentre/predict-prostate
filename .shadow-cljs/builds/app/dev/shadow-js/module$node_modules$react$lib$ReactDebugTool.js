["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react/lib/ReactDebugTool.js"],"~:js","shadow$provide.module$node_modules$react$lib$ReactDebugTool=function(global,require,module,exports){function emitEvent(event$jscomp$0,arg1,arg2,arg3,arg4,arg5){for(var i=0;i<hooks.length;i++){var hook=hooks[i],fn=hook[event$jscomp$0];if(fn){var event=event$jscomp$0;try{fn.call(hook,arg1,arg2,arg3,arg4,arg5)}catch(e){warning(didHookThrowForEvent[event],\"Exception thrown by hook while handling %s: %s\",event,e+\"\\n\"+e.stack),didHookThrowForEvent[event]=!0}}}}function getTreeSnapshot(registeredIDs){return registeredIDs.reduce(function(tree,\nid){var ownerID=ReactComponentTreeHook.getOwnerID(id),parentID=ReactComponentTreeHook.getParentID(id);tree[id]={displayName:ReactComponentTreeHook.getDisplayName(id),text:ReactComponentTreeHook.getText(id),updateCount:ReactComponentTreeHook.getUpdateCount(id),childIDs:ReactComponentTreeHook.getChildIDs(id),ownerID:ownerID||ReactComponentTreeHook.getOwnerID(parentID),parentID};return tree},{})}function resetMeasurements(){var previousStartTime=currentFlushStartTime,previousMeasurements=currentFlushMeasurements||\n[],previousOperations=ReactHostOperationHistoryHook.getHistory();if(0===currentFlushNesting)currentFlushMeasurements=currentFlushStartTime=null,ReactComponentTreeHook.purgeUnmountedComponents(),ReactHostOperationHistoryHook.clearHistory();else{if(previousMeasurements.length||previousOperations.length){var registeredIDs=ReactComponentTreeHook.getRegisteredIDs();flushHistory.push({duration:performanceNow()-previousStartTime,measurements:previousMeasurements||[],operations:previousOperations||[],treeSnapshot:getTreeSnapshot(registeredIDs)})}ReactComponentTreeHook.purgeUnmountedComponents();\nReactHostOperationHistoryHook.clearHistory();currentFlushStartTime=performanceNow();currentFlushMeasurements=[]}}function checkDebugID(debugID){(1>=arguments.length||void 0===arguments[1]?0:arguments[1])&&0===debugID||debugID||warning(!1,\"ReactDebugTool: debugID may not be empty.\")}function endLifeCycleTimer(debugID,timerType){0!==currentFlushNesting&&(currentTimerType===timerType||lifeCycleTimerHasWarned||(warning(!1,\"There is an internal error in the React performance measurement code. We did not expect %s timer to stop while %s timer is still in progress for %s instance. Please report this as a bug in React.\",\ntimerType,currentTimerType||\"no\",debugID===currentTimerDebugID?\"the same\":\"another\"),lifeCycleTimerHasWarned=!0),isProfiling&&currentFlushMeasurements.push({timerType,instanceID:debugID,duration:performanceNow()-currentTimerStartTime-currentTimerNestedFlushDuration}),currentTimerType=currentTimerDebugID=currentTimerNestedFlushDuration=currentTimerStartTime=null)}global=require(\"module$node_modules$react$lib$ReactInvalidSetStateWarningHook\");var ReactHostOperationHistoryHook=require(\"module$node_modules$react$lib$ReactHostOperationHistoryHook\"),\nReactComponentTreeHook=require(\"module$node_modules$react$lib$ReactComponentTreeHook\");exports=require(\"module$node_modules$react$lib$ReactChildrenMutationWarningHook\");var ExecutionEnvironment=require(\"module$node_modules$fbjs$lib$ExecutionEnvironment\"),performanceNow=require(\"module$node_modules$fbjs$lib$performanceNow\"),warning=require(\"module$node_modules$fbjs$lib$warning\"),hooks=[],didHookThrowForEvent={},isProfiling=!1,flushHistory=[],lifeCycleTimerStack=[],currentFlushNesting=0,currentFlushMeasurements=\nnull,currentFlushStartTime=null,currentTimerDebugID=null,currentTimerStartTime=null,currentTimerNestedFlushDuration=null,currentTimerType=null,lifeCycleTimerHasWarned=!1,ReactDebugTool={addHook:function(hook){hooks.push(hook)},removeHook:function(hook){for(var i=0;i<hooks.length;i++)hooks[i]===hook&&(hooks.splice(i,1),i--)},isProfiling:function(){return isProfiling},beginProfiling:function(){isProfiling||(isProfiling=!0,flushHistory.length=0,resetMeasurements(),ReactDebugTool.addHook(ReactHostOperationHistoryHook))},\nendProfiling:function(){isProfiling&&(isProfiling=!1,resetMeasurements(),ReactDebugTool.removeHook(ReactHostOperationHistoryHook))},getFlushHistory:function(){return flushHistory},onBeginFlush:function(){currentFlushNesting++;resetMeasurements();var currentTimer={startTime:currentTimerStartTime,nestedFlushStartTime:performanceNow(),debugID:currentTimerDebugID,timerType:currentTimerType};lifeCycleTimerStack.push(currentTimer);currentTimerType=currentTimerDebugID=currentTimerNestedFlushDuration=currentTimerStartTime=\nnull;emitEvent(\"onBeginFlush\")},onEndFlush:function(){resetMeasurements();currentFlushNesting--;var _lifeCycleTimerStack$=lifeCycleTimerStack.pop(),startTime=_lifeCycleTimerStack$.startTime,nestedFlushStartTime=_lifeCycleTimerStack$.nestedFlushStartTime,debugID=_lifeCycleTimerStack$.debugID;_lifeCycleTimerStack$=_lifeCycleTimerStack$.timerType;nestedFlushStartTime=performanceNow()-nestedFlushStartTime;currentTimerStartTime=startTime;currentTimerNestedFlushDuration+=nestedFlushStartTime;currentTimerDebugID=\ndebugID;currentTimerType=_lifeCycleTimerStack$;emitEvent(\"onEndFlush\")},onBeginLifeCycleTimer:function(debugID,timerType){checkDebugID(debugID);emitEvent(\"onBeginLifeCycleTimer\",debugID,timerType);0!==currentFlushNesting&&(currentTimerType&&!lifeCycleTimerHasWarned&&(warning(!1,\"There is an internal error in the React performance measurement code. Did not expect %s timer to start while %s timer is still in progress for %s instance.\",timerType,currentTimerType||\"no\",debugID===currentTimerDebugID?\"the same\":\n\"another\"),lifeCycleTimerHasWarned=!0),currentTimerStartTime=performanceNow(),currentTimerNestedFlushDuration=0,currentTimerDebugID=debugID,currentTimerType=timerType)},onEndLifeCycleTimer:function(debugID,timerType){checkDebugID(debugID);endLifeCycleTimer(debugID,timerType);emitEvent(\"onEndLifeCycleTimer\",debugID,timerType)},onError:function(debugID){null!=currentTimerDebugID&&endLifeCycleTimer(currentTimerDebugID,currentTimerType);emitEvent(\"onError\",debugID)},onBeginProcessingChildContext:function(){emitEvent(\"onBeginProcessingChildContext\")},\nonEndProcessingChildContext:function(){emitEvent(\"onEndProcessingChildContext\")},onHostOperation:function(debugID,type,payload){checkDebugID(debugID);emitEvent(\"onHostOperation\",debugID,type,payload)},onSetState:function(){emitEvent(\"onSetState\")},onSetChildren:function(debugID,childDebugIDs){checkDebugID(debugID);childDebugIDs.forEach(checkDebugID);emitEvent(\"onSetChildren\",debugID,childDebugIDs)},onBeforeMountComponent:function(debugID,element,parentDebugID){checkDebugID(debugID);checkDebugID(parentDebugID,\n!0);emitEvent(\"onBeforeMountComponent\",debugID,element,parentDebugID)},onMountComponent:function(debugID){checkDebugID(debugID);emitEvent(\"onMountComponent\",debugID)},onBeforeUpdateComponent:function(debugID,element){checkDebugID(debugID);emitEvent(\"onBeforeUpdateComponent\",debugID,element)},onUpdateComponent:function(debugID){checkDebugID(debugID);emitEvent(\"onUpdateComponent\",debugID)},onBeforeUnmountComponent:function(debugID){checkDebugID(debugID);emitEvent(\"onBeforeUnmountComponent\",debugID)},\nonUnmountComponent:function(debugID){checkDebugID(debugID);emitEvent(\"onUnmountComponent\",debugID)},onTestEvent:function(){emitEvent(\"onTestEvent\")}};ReactDebugTool.addDevtool=ReactDebugTool.addHook;ReactDebugTool.removeDevtool=ReactDebugTool.removeHook;ReactDebugTool.addHook(global);ReactDebugTool.addHook(ReactComponentTreeHook);ReactDebugTool.addHook(exports);/[?&]react_perf\\b/.test(ExecutionEnvironment.canUseDOM&&window.location.href||\"\")&&ReactDebugTool.beginProfiling();module.exports=ReactDebugTool}","~:source","shadow$provide[\"module$node_modules$react$lib$ReactDebugTool\"] = function(global,require,module,exports) {\n/**\n * Copyright 2016-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDebugTool\n */\n\n'use strict';\n\nvar ReactInvalidSetStateWarningHook = require('./ReactInvalidSetStateWarningHook');\nvar ReactHostOperationHistoryHook = require('./ReactHostOperationHistoryHook');\nvar ReactComponentTreeHook = require('./ReactComponentTreeHook');\nvar ReactChildrenMutationWarningHook = require('./ReactChildrenMutationWarningHook');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar performanceNow = require('fbjs/lib/performanceNow');\nvar warning = require('fbjs/lib/warning');\n\nvar hooks = [];\nvar didHookThrowForEvent = {};\n\nfunction callHook(event, fn, context, arg1, arg2, arg3, arg4, arg5) {\n  try {\n    fn.call(context, arg1, arg2, arg3, arg4, arg5);\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' ? warning(didHookThrowForEvent[event], 'Exception thrown by hook while handling %s: %s', event, e + '\\n' + e.stack) : void 0;\n    didHookThrowForEvent[event] = true;\n  }\n}\n\nfunction emitEvent(event, arg1, arg2, arg3, arg4, arg5) {\n  for (var i = 0; i < hooks.length; i++) {\n    var hook = hooks[i];\n    var fn = hook[event];\n    if (fn) {\n      callHook(event, fn, hook, arg1, arg2, arg3, arg4, arg5);\n    }\n  }\n}\n\nvar isProfiling = false;\nvar flushHistory = [];\nvar lifeCycleTimerStack = [];\nvar currentFlushNesting = 0;\nvar currentFlushMeasurements = null;\nvar currentFlushStartTime = null;\nvar currentTimerDebugID = null;\nvar currentTimerStartTime = null;\nvar currentTimerNestedFlushDuration = null;\nvar currentTimerType = null;\n\nvar lifeCycleTimerHasWarned = false;\n\nfunction clearHistory() {\n  ReactComponentTreeHook.purgeUnmountedComponents();\n  ReactHostOperationHistoryHook.clearHistory();\n}\n\nfunction getTreeSnapshot(registeredIDs) {\n  return registeredIDs.reduce(function (tree, id) {\n    var ownerID = ReactComponentTreeHook.getOwnerID(id);\n    var parentID = ReactComponentTreeHook.getParentID(id);\n    tree[id] = {\n      displayName: ReactComponentTreeHook.getDisplayName(id),\n      text: ReactComponentTreeHook.getText(id),\n      updateCount: ReactComponentTreeHook.getUpdateCount(id),\n      childIDs: ReactComponentTreeHook.getChildIDs(id),\n      // Text nodes don't have owners but this is close enough.\n      ownerID: ownerID || ReactComponentTreeHook.getOwnerID(parentID),\n      parentID: parentID\n    };\n    return tree;\n  }, {});\n}\n\nfunction resetMeasurements() {\n  var previousStartTime = currentFlushStartTime;\n  var previousMeasurements = currentFlushMeasurements || [];\n  var previousOperations = ReactHostOperationHistoryHook.getHistory();\n\n  if (currentFlushNesting === 0) {\n    currentFlushStartTime = null;\n    currentFlushMeasurements = null;\n    clearHistory();\n    return;\n  }\n\n  if (previousMeasurements.length || previousOperations.length) {\n    var registeredIDs = ReactComponentTreeHook.getRegisteredIDs();\n    flushHistory.push({\n      duration: performanceNow() - previousStartTime,\n      measurements: previousMeasurements || [],\n      operations: previousOperations || [],\n      treeSnapshot: getTreeSnapshot(registeredIDs)\n    });\n  }\n\n  clearHistory();\n  currentFlushStartTime = performanceNow();\n  currentFlushMeasurements = [];\n}\n\nfunction checkDebugID(debugID) {\n  var allowRoot = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];\n\n  if (allowRoot && debugID === 0) {\n    return;\n  }\n  if (!debugID) {\n    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDebugTool: debugID may not be empty.') : void 0;\n  }\n}\n\nfunction beginLifeCycleTimer(debugID, timerType) {\n  if (currentFlushNesting === 0) {\n    return;\n  }\n  if (currentTimerType && !lifeCycleTimerHasWarned) {\n    process.env.NODE_ENV !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'Did not expect %s timer to start while %s timer is still in ' + 'progress for %s instance.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;\n    lifeCycleTimerHasWarned = true;\n  }\n  currentTimerStartTime = performanceNow();\n  currentTimerNestedFlushDuration = 0;\n  currentTimerDebugID = debugID;\n  currentTimerType = timerType;\n}\n\nfunction endLifeCycleTimer(debugID, timerType) {\n  if (currentFlushNesting === 0) {\n    return;\n  }\n  if (currentTimerType !== timerType && !lifeCycleTimerHasWarned) {\n    process.env.NODE_ENV !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'We did not expect %s timer to stop while %s timer is still in ' + 'progress for %s instance. Please report this as a bug in React.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;\n    lifeCycleTimerHasWarned = true;\n  }\n  if (isProfiling) {\n    currentFlushMeasurements.push({\n      timerType: timerType,\n      instanceID: debugID,\n      duration: performanceNow() - currentTimerStartTime - currentTimerNestedFlushDuration\n    });\n  }\n  currentTimerStartTime = null;\n  currentTimerNestedFlushDuration = null;\n  currentTimerDebugID = null;\n  currentTimerType = null;\n}\n\nfunction pauseCurrentLifeCycleTimer() {\n  var currentTimer = {\n    startTime: currentTimerStartTime,\n    nestedFlushStartTime: performanceNow(),\n    debugID: currentTimerDebugID,\n    timerType: currentTimerType\n  };\n  lifeCycleTimerStack.push(currentTimer);\n  currentTimerStartTime = null;\n  currentTimerNestedFlushDuration = null;\n  currentTimerDebugID = null;\n  currentTimerType = null;\n}\n\nfunction resumeCurrentLifeCycleTimer() {\n  var _lifeCycleTimerStack$ = lifeCycleTimerStack.pop();\n\n  var startTime = _lifeCycleTimerStack$.startTime;\n  var nestedFlushStartTime = _lifeCycleTimerStack$.nestedFlushStartTime;\n  var debugID = _lifeCycleTimerStack$.debugID;\n  var timerType = _lifeCycleTimerStack$.timerType;\n\n  var nestedFlushDuration = performanceNow() - nestedFlushStartTime;\n  currentTimerStartTime = startTime;\n  currentTimerNestedFlushDuration += nestedFlushDuration;\n  currentTimerDebugID = debugID;\n  currentTimerType = timerType;\n}\n\nvar ReactDebugTool = {\n  addHook: function (hook) {\n    hooks.push(hook);\n  },\n  removeHook: function (hook) {\n    for (var i = 0; i < hooks.length; i++) {\n      if (hooks[i] === hook) {\n        hooks.splice(i, 1);\n        i--;\n      }\n    }\n  },\n  isProfiling: function () {\n    return isProfiling;\n  },\n  beginProfiling: function () {\n    if (isProfiling) {\n      return;\n    }\n\n    isProfiling = true;\n    flushHistory.length = 0;\n    resetMeasurements();\n    ReactDebugTool.addHook(ReactHostOperationHistoryHook);\n  },\n  endProfiling: function () {\n    if (!isProfiling) {\n      return;\n    }\n\n    isProfiling = false;\n    resetMeasurements();\n    ReactDebugTool.removeHook(ReactHostOperationHistoryHook);\n  },\n  getFlushHistory: function () {\n    return flushHistory;\n  },\n  onBeginFlush: function () {\n    currentFlushNesting++;\n    resetMeasurements();\n    pauseCurrentLifeCycleTimer();\n    emitEvent('onBeginFlush');\n  },\n  onEndFlush: function () {\n    resetMeasurements();\n    currentFlushNesting--;\n    resumeCurrentLifeCycleTimer();\n    emitEvent('onEndFlush');\n  },\n  onBeginLifeCycleTimer: function (debugID, timerType) {\n    checkDebugID(debugID);\n    emitEvent('onBeginLifeCycleTimer', debugID, timerType);\n    beginLifeCycleTimer(debugID, timerType);\n  },\n  onEndLifeCycleTimer: function (debugID, timerType) {\n    checkDebugID(debugID);\n    endLifeCycleTimer(debugID, timerType);\n    emitEvent('onEndLifeCycleTimer', debugID, timerType);\n  },\n  onError: function (debugID) {\n    if (currentTimerDebugID != null) {\n      endLifeCycleTimer(currentTimerDebugID, currentTimerType);\n    }\n    emitEvent('onError', debugID);\n  },\n  onBeginProcessingChildContext: function () {\n    emitEvent('onBeginProcessingChildContext');\n  },\n  onEndProcessingChildContext: function () {\n    emitEvent('onEndProcessingChildContext');\n  },\n  onHostOperation: function (debugID, type, payload) {\n    checkDebugID(debugID);\n    emitEvent('onHostOperation', debugID, type, payload);\n  },\n  onSetState: function () {\n    emitEvent('onSetState');\n  },\n  onSetChildren: function (debugID, childDebugIDs) {\n    checkDebugID(debugID);\n    childDebugIDs.forEach(checkDebugID);\n    emitEvent('onSetChildren', debugID, childDebugIDs);\n  },\n  onBeforeMountComponent: function (debugID, element, parentDebugID) {\n    checkDebugID(debugID);\n    checkDebugID(parentDebugID, true);\n    emitEvent('onBeforeMountComponent', debugID, element, parentDebugID);\n  },\n  onMountComponent: function (debugID) {\n    checkDebugID(debugID);\n    emitEvent('onMountComponent', debugID);\n  },\n  onBeforeUpdateComponent: function (debugID, element) {\n    checkDebugID(debugID);\n    emitEvent('onBeforeUpdateComponent', debugID, element);\n  },\n  onUpdateComponent: function (debugID) {\n    checkDebugID(debugID);\n    emitEvent('onUpdateComponent', debugID);\n  },\n  onBeforeUnmountComponent: function (debugID) {\n    checkDebugID(debugID);\n    emitEvent('onBeforeUnmountComponent', debugID);\n  },\n  onUnmountComponent: function (debugID) {\n    checkDebugID(debugID);\n    emitEvent('onUnmountComponent', debugID);\n  },\n  onTestEvent: function () {\n    emitEvent('onTestEvent');\n  }\n};\n\n// TODO remove these when RN/www gets updated\nReactDebugTool.addDevtool = ReactDebugTool.addHook;\nReactDebugTool.removeDevtool = ReactDebugTool.removeHook;\n\nReactDebugTool.addHook(ReactInvalidSetStateWarningHook);\nReactDebugTool.addHook(ReactComponentTreeHook);\nReactDebugTool.addHook(ReactChildrenMutationWarningHook);\nvar url = ExecutionEnvironment.canUseDOM && window.location.href || '';\nif (/[?&]react_perf\\b/.test(url)) {\n  ReactDebugTool.beginProfiling();\n}\n\nmodule.exports = ReactDebugTool;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$react$lib$ReactComponentTreeHook","~$module$node_modules$react$lib$ReactHostOperationHistoryHook","~$shadow.js","~$module$node_modules$react$lib$ReactInvalidSetStateWarningHook","~$module$node_modules$react$lib$ReactChildrenMutationWarningHook","~$module$node_modules$fbjs$lib$performanceNow","~$module$node_modules$fbjs$lib$ExecutionEnvironment","~$module$node_modules$fbjs$lib$warning"]],"~:properties",["^5",["getFlushHistory","onTestEvent","nestedFlushStartTime","instanceID","measurements","onBeforeMountComponent","ownerID","onUpdateComponent","displayName","onHostOperation","addDevtool","onEndLifeCycleTimer","removeHook","onBeginLifeCycleTimer","onError","endProfiling","addHook","onEndFlush","parentID","startTime","updateCount","beginProfiling","onSetChildren","text","onBeforeUpdateComponent","onBeginFlush","length","onBeforeUnmountComponent","isProfiling","duration","onBeginProcessingChildContext","onMountComponent","onUnmountComponent","treeSnapshot","removeDevtool","childIDs","onSetState","timerType","onEndProcessingChildContext","debugID","operations"]],"~:compiled-at",1635250628387,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react$lib$ReactDebugTool.js\",\n\"lineCount\":14,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/react/lib/ReactDebugTool.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react$lib$ReactDebugTool\\\"] = function(global,require,module,exports) {\\n/**\\n * Copyright 2016-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactDebugTool\\n */\\n\\n'use strict';\\n\\nvar ReactInvalidSetStateWarningHook = require('./ReactInvalidSetStateWarningHook');\\nvar ReactHostOperationHistoryHook = require('./ReactHostOperationHistoryHook');\\nvar ReactComponentTreeHook = require('./ReactComponentTreeHook');\\nvar ReactChildrenMutationWarningHook = require('./ReactChildrenMutationWarningHook');\\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\\n\\nvar performanceNow = require('fbjs/lib/performanceNow');\\nvar warning = require('fbjs/lib/warning');\\n\\nvar hooks = [];\\nvar didHookThrowForEvent = {};\\n\\nfunction callHook(event, fn, context, arg1, arg2, arg3, arg4, arg5) {\\n  try {\\n    fn.call(context, arg1, arg2, arg3, arg4, arg5);\\n  } catch (e) {\\n    process.env.NODE_ENV !== 'production' ? warning(didHookThrowForEvent[event], 'Exception thrown by hook while handling %s: %s', event, e + '\\\\n' + e.stack) : void 0;\\n    didHookThrowForEvent[event] = true;\\n  }\\n}\\n\\nfunction emitEvent(event, arg1, arg2, arg3, arg4, arg5) {\\n  for (var i = 0; i < hooks.length; i++) {\\n    var hook = hooks[i];\\n    var fn = hook[event];\\n    if (fn) {\\n      callHook(event, fn, hook, arg1, arg2, arg3, arg4, arg5);\\n    }\\n  }\\n}\\n\\nvar isProfiling = false;\\nvar flushHistory = [];\\nvar lifeCycleTimerStack = [];\\nvar currentFlushNesting = 0;\\nvar currentFlushMeasurements = null;\\nvar currentFlushStartTime = null;\\nvar currentTimerDebugID = null;\\nvar currentTimerStartTime = null;\\nvar currentTimerNestedFlushDuration = null;\\nvar currentTimerType = null;\\n\\nvar lifeCycleTimerHasWarned = false;\\n\\nfunction clearHistory() {\\n  ReactComponentTreeHook.purgeUnmountedComponents();\\n  ReactHostOperationHistoryHook.clearHistory();\\n}\\n\\nfunction getTreeSnapshot(registeredIDs) {\\n  return registeredIDs.reduce(function (tree, id) {\\n    var ownerID = ReactComponentTreeHook.getOwnerID(id);\\n    var parentID = ReactComponentTreeHook.getParentID(id);\\n    tree[id] = {\\n      displayName: ReactComponentTreeHook.getDisplayName(id),\\n      text: ReactComponentTreeHook.getText(id),\\n      updateCount: ReactComponentTreeHook.getUpdateCount(id),\\n      childIDs: ReactComponentTreeHook.getChildIDs(id),\\n      // Text nodes don't have owners but this is close enough.\\n      ownerID: ownerID || ReactComponentTreeHook.getOwnerID(parentID),\\n      parentID: parentID\\n    };\\n    return tree;\\n  }, {});\\n}\\n\\nfunction resetMeasurements() {\\n  var previousStartTime = currentFlushStartTime;\\n  var previousMeasurements = currentFlushMeasurements || [];\\n  var previousOperations = ReactHostOperationHistoryHook.getHistory();\\n\\n  if (currentFlushNesting === 0) {\\n    currentFlushStartTime = null;\\n    currentFlushMeasurements = null;\\n    clearHistory();\\n    return;\\n  }\\n\\n  if (previousMeasurements.length || previousOperations.length) {\\n    var registeredIDs = ReactComponentTreeHook.getRegisteredIDs();\\n    flushHistory.push({\\n      duration: performanceNow() - previousStartTime,\\n      measurements: previousMeasurements || [],\\n      operations: previousOperations || [],\\n      treeSnapshot: getTreeSnapshot(registeredIDs)\\n    });\\n  }\\n\\n  clearHistory();\\n  currentFlushStartTime = performanceNow();\\n  currentFlushMeasurements = [];\\n}\\n\\nfunction checkDebugID(debugID) {\\n  var allowRoot = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];\\n\\n  if (allowRoot && debugID === 0) {\\n    return;\\n  }\\n  if (!debugID) {\\n    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDebugTool: debugID may not be empty.') : void 0;\\n  }\\n}\\n\\nfunction beginLifeCycleTimer(debugID, timerType) {\\n  if (currentFlushNesting === 0) {\\n    return;\\n  }\\n  if (currentTimerType && !lifeCycleTimerHasWarned) {\\n    process.env.NODE_ENV !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'Did not expect %s timer to start while %s timer is still in ' + 'progress for %s instance.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;\\n    lifeCycleTimerHasWarned = true;\\n  }\\n  currentTimerStartTime = performanceNow();\\n  currentTimerNestedFlushDuration = 0;\\n  currentTimerDebugID = debugID;\\n  currentTimerType = timerType;\\n}\\n\\nfunction endLifeCycleTimer(debugID, timerType) {\\n  if (currentFlushNesting === 0) {\\n    return;\\n  }\\n  if (currentTimerType !== timerType && !lifeCycleTimerHasWarned) {\\n    process.env.NODE_ENV !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'We did not expect %s timer to stop while %s timer is still in ' + 'progress for %s instance. Please report this as a bug in React.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;\\n    lifeCycleTimerHasWarned = true;\\n  }\\n  if (isProfiling) {\\n    currentFlushMeasurements.push({\\n      timerType: timerType,\\n      instanceID: debugID,\\n      duration: performanceNow() - currentTimerStartTime - currentTimerNestedFlushDuration\\n    });\\n  }\\n  currentTimerStartTime = null;\\n  currentTimerNestedFlushDuration = null;\\n  currentTimerDebugID = null;\\n  currentTimerType = null;\\n}\\n\\nfunction pauseCurrentLifeCycleTimer() {\\n  var currentTimer = {\\n    startTime: currentTimerStartTime,\\n    nestedFlushStartTime: performanceNow(),\\n    debugID: currentTimerDebugID,\\n    timerType: currentTimerType\\n  };\\n  lifeCycleTimerStack.push(currentTimer);\\n  currentTimerStartTime = null;\\n  currentTimerNestedFlushDuration = null;\\n  currentTimerDebugID = null;\\n  currentTimerType = null;\\n}\\n\\nfunction resumeCurrentLifeCycleTimer() {\\n  var _lifeCycleTimerStack$ = lifeCycleTimerStack.pop();\\n\\n  var startTime = _lifeCycleTimerStack$.startTime;\\n  var nestedFlushStartTime = _lifeCycleTimerStack$.nestedFlushStartTime;\\n  var debugID = _lifeCycleTimerStack$.debugID;\\n  var timerType = _lifeCycleTimerStack$.timerType;\\n\\n  var nestedFlushDuration = performanceNow() - nestedFlushStartTime;\\n  currentTimerStartTime = startTime;\\n  currentTimerNestedFlushDuration += nestedFlushDuration;\\n  currentTimerDebugID = debugID;\\n  currentTimerType = timerType;\\n}\\n\\nvar ReactDebugTool = {\\n  addHook: function (hook) {\\n    hooks.push(hook);\\n  },\\n  removeHook: function (hook) {\\n    for (var i = 0; i < hooks.length; i++) {\\n      if (hooks[i] === hook) {\\n        hooks.splice(i, 1);\\n        i--;\\n      }\\n    }\\n  },\\n  isProfiling: function () {\\n    return isProfiling;\\n  },\\n  beginProfiling: function () {\\n    if (isProfiling) {\\n      return;\\n    }\\n\\n    isProfiling = true;\\n    flushHistory.length = 0;\\n    resetMeasurements();\\n    ReactDebugTool.addHook(ReactHostOperationHistoryHook);\\n  },\\n  endProfiling: function () {\\n    if (!isProfiling) {\\n      return;\\n    }\\n\\n    isProfiling = false;\\n    resetMeasurements();\\n    ReactDebugTool.removeHook(ReactHostOperationHistoryHook);\\n  },\\n  getFlushHistory: function () {\\n    return flushHistory;\\n  },\\n  onBeginFlush: function () {\\n    currentFlushNesting++;\\n    resetMeasurements();\\n    pauseCurrentLifeCycleTimer();\\n    emitEvent('onBeginFlush');\\n  },\\n  onEndFlush: function () {\\n    resetMeasurements();\\n    currentFlushNesting--;\\n    resumeCurrentLifeCycleTimer();\\n    emitEvent('onEndFlush');\\n  },\\n  onBeginLifeCycleTimer: function (debugID, timerType) {\\n    checkDebugID(debugID);\\n    emitEvent('onBeginLifeCycleTimer', debugID, timerType);\\n    beginLifeCycleTimer(debugID, timerType);\\n  },\\n  onEndLifeCycleTimer: function (debugID, timerType) {\\n    checkDebugID(debugID);\\n    endLifeCycleTimer(debugID, timerType);\\n    emitEvent('onEndLifeCycleTimer', debugID, timerType);\\n  },\\n  onError: function (debugID) {\\n    if (currentTimerDebugID != null) {\\n      endLifeCycleTimer(currentTimerDebugID, currentTimerType);\\n    }\\n    emitEvent('onError', debugID);\\n  },\\n  onBeginProcessingChildContext: function () {\\n    emitEvent('onBeginProcessingChildContext');\\n  },\\n  onEndProcessingChildContext: function () {\\n    emitEvent('onEndProcessingChildContext');\\n  },\\n  onHostOperation: function (debugID, type, payload) {\\n    checkDebugID(debugID);\\n    emitEvent('onHostOperation', debugID, type, payload);\\n  },\\n  onSetState: function () {\\n    emitEvent('onSetState');\\n  },\\n  onSetChildren: function (debugID, childDebugIDs) {\\n    checkDebugID(debugID);\\n    childDebugIDs.forEach(checkDebugID);\\n    emitEvent('onSetChildren', debugID, childDebugIDs);\\n  },\\n  onBeforeMountComponent: function (debugID, element, parentDebugID) {\\n    checkDebugID(debugID);\\n    checkDebugID(parentDebugID, true);\\n    emitEvent('onBeforeMountComponent', debugID, element, parentDebugID);\\n  },\\n  onMountComponent: function (debugID) {\\n    checkDebugID(debugID);\\n    emitEvent('onMountComponent', debugID);\\n  },\\n  onBeforeUpdateComponent: function (debugID, element) {\\n    checkDebugID(debugID);\\n    emitEvent('onBeforeUpdateComponent', debugID, element);\\n  },\\n  onUpdateComponent: function (debugID) {\\n    checkDebugID(debugID);\\n    emitEvent('onUpdateComponent', debugID);\\n  },\\n  onBeforeUnmountComponent: function (debugID) {\\n    checkDebugID(debugID);\\n    emitEvent('onBeforeUnmountComponent', debugID);\\n  },\\n  onUnmountComponent: function (debugID) {\\n    checkDebugID(debugID);\\n    emitEvent('onUnmountComponent', debugID);\\n  },\\n  onTestEvent: function () {\\n    emitEvent('onTestEvent');\\n  }\\n};\\n\\n// TODO remove these when RN/www gets updated\\nReactDebugTool.addDevtool = ReactDebugTool.addHook;\\nReactDebugTool.removeDevtool = ReactDebugTool.removeHook;\\n\\nReactDebugTool.addHook(ReactInvalidSetStateWarningHook);\\nReactDebugTool.addHook(ReactComponentTreeHook);\\nReactDebugTool.addHook(ReactChildrenMutationWarningHook);\\nvar url = ExecutionEnvironment.canUseDOM && window.location.href || '';\\nif (/[?&]react_perf\\\\b/.test(url)) {\\n  ReactDebugTool.beginProfiling();\\n}\\n\\nmodule.exports = ReactDebugTool;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"emitEvent\",\"event\",\"arg1\",\"arg2\",\"arg3\",\"arg4\",\"arg5\",\"i\",\"hooks\",\"length\",\"hook\",\"fn\",\"call\",\"e\",\"warning\",\"didHookThrowForEvent\",\"stack\",\"getTreeSnapshot\",\"registeredIDs\",\"reduce\",\"tree\",\"id\",\"ownerID\",\"ReactComponentTreeHook\",\"getOwnerID\",\"parentID\",\"getParentID\",\"displayName\",\"getDisplayName\",\"text\",\"getText\",\"updateCount\",\"getUpdateCount\",\"childIDs\",\"getChildIDs\",\"resetMeasurements\",\"previousStartTime\",\"currentFlushStartTime\",\"previousMeasurements\",\"currentFlushMeasurements\",\"previousOperations\",\"ReactHostOperationHistoryHook\",\"getHistory\",\"currentFlushNesting\",\"purgeUnmountedComponents\",\"clearHistory\",\"getRegisteredIDs\",\"flushHistory\",\"push\",\"duration\",\"performanceNow\",\"measurements\",\"operations\",\"treeSnapshot\",\"checkDebugID\",\"debugID\",\"allowRoot\",\"arguments\",\"undefined\",\"endLifeCycleTimer\",\"timerType\",\"currentTimerType\",\"lifeCycleTimerHasWarned\",\"currentTimerDebugID\",\"isProfiling\",\"instanceID\",\"currentTimerStartTime\",\"currentTimerNestedFlushDuration\",\"ReactInvalidSetStateWarningHook\",\"ReactChildrenMutationWarningHook\",\"ExecutionEnvironment\",\"lifeCycleTimerStack\",\"ReactDebugTool\",\"addHook\",\"removeHook\",\"splice\",\"beginProfiling\",\"endProfiling\",\"getFlushHistory\",\"onBeginFlush\",\"currentTimer\",\"startTime\",\"nestedFlushStartTime\",\"onEndFlush\",\"_lifeCycleTimerStack$\",\"pop\",\"nestedFlushDuration\",\"onBeginLifeCycleTimer\",\"onEndLifeCycleTimer\",\"onError\",\"onBeginProcessingChildContext\",\"onEndProcessingChildContext\",\"onHostOperation\",\"type\",\"payload\",\"onSetState\",\"onSetChildren\",\"childDebugIDs\",\"forEach\",\"onBeforeMountComponent\",\"element\",\"parentDebugID\",\"onMountComponent\",\"onBeforeUpdateComponent\",\"onUpdateComponent\",\"onBeforeUnmountComponent\",\"onUnmountComponent\",\"onTestEvent\",\"addDevtool\",\"removeDevtool\",\"test\",\"canUseDOM\",\"window\",\"location\",\"href\"]\n}\n"]