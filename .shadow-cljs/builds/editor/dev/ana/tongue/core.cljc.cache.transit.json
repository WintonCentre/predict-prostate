["^ ","~:output",["^ ","~:js","goog.provide('tongue.core');\ntongue.core.inst_formatter = tongue.inst.formatter;\ntongue.core.format_inst_iso = (function (){var G__42487 = \"{year}-{month-numeric-padded}-{day-padded}T{hour24-padded}:{minutes-padded}:{seconds-padded}\";\nvar G__42488 = cljs.core.PersistentArrayMap.EMPTY;\nreturn (tongue.core.inst_formatter.cljs$core$IFn$_invoke$arity$2 ? tongue.core.inst_formatter.cljs$core$IFn$_invoke$arity$2(G__42487,G__42488) : tongue.core.inst_formatter.call(null,G__42487,G__42488));\n})();\ntongue.core.number_formatter = tongue.number.formatter;\ntongue.core.parse_long = (function tongue$core$parse_long(s){\nreturn parseInt(s);\n});\nif((typeof tongue !== 'undefined') && (typeof tongue.core !== 'undefined') && (typeof tongue.core.tags_cache !== 'undefined')){\n} else {\ntongue.core.tags_cache = cljs.core.volatile_BANG_(cljs.core.PersistentArrayMap.EMPTY);\n}\n/**\n * :az-Arab-IR => (:az-Arab-IR :az-Arab :az), cached\n */\ntongue.core.tags = (function tongue$core$tags(locale){\nvar or__4126__auto__ = (function (){var fexpr__42497 = cljs.core.deref(tongue.core.tags_cache);\nreturn (fexpr__42497.cljs$core$IFn$_invoke$arity$1 ? fexpr__42497.cljs$core$IFn$_invoke$arity$1(locale) : fexpr__42497.call(null,locale));\n})();\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nvar tags = (function (){var subtags = clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.name(locale),/-/);\nvar last_tag = null;\nvar tags = cljs.core.List.EMPTY;\nwhile(true){\nvar temp__5737__auto__ = cljs.core.first(subtags);\nif((temp__5737__auto__ == null)){\nreturn tags;\n} else {\nvar subtag = temp__5737__auto__;\nvar tag = [last_tag,(cljs.core.truth_(last_tag)?\"-\":null),cljs.core.str.cljs$core$IFn$_invoke$arity$1(subtag)].join('');\nvar G__42539 = cljs.core.next(subtags);\nvar G__42540 = tag;\nvar G__42542 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(tags,cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(tag));\nsubtags = G__42539;\nlast_tag = G__42540;\ntags = G__42542;\ncontinue;\n}\nbreak;\n}\n})();\ntongue.core.tags_cache.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(tongue.core.tags_cache.cljs$core$IDeref$_deref$arity$1(null),locale,tags));\n\nreturn tags;\n}\n});\ntongue.core.lookup_template_for_locale = (function tongue$core$lookup_template_for_locale(dicts,locale,key){\nif(cljs.core.truth_(locale)){\nvar tags = tongue.core.tags(locale);\nwhile(true){\nvar temp__5739__auto__ = cljs.core.first(tags);\nif((temp__5739__auto__ == null)){\nreturn null;\n} else {\nvar tag = temp__5739__auto__;\nvar or__4126__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$2(dicts,tag),key);\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nvar G__42546 = cljs.core.next(tags);\ntags = G__42546;\ncontinue;\n}\n}\nbreak;\n}\n} else {\nreturn null;\n}\n});\ntongue.core.lookup_template = (function tongue$core$lookup_template(dicts,locale,key){\nvar or__4126__auto__ = tongue.core.lookup_template_for_locale(dicts,locale,key);\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nvar or__4126__auto____$1 = tongue.core.lookup_template_for_locale(dicts,new cljs.core.Keyword(\"tongue\",\"fallback\",\"tongue/fallback\",1378320181).cljs$core$IFn$_invoke$arity$1(dicts),key);\nif(cljs.core.truth_(or__4126__auto____$1)){\nreturn or__4126__auto____$1;\n} else {\nreturn [\"{Missing key \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(key),\"}\"].join('');\n}\n}\n});\ntongue.core.escape_re_subst = (function tongue$core$escape_re_subst(str){\nreturn clojure.string.replace(str,/\\$/,\"$$$$\");\n});\ntongue.core.format_argument = (function tongue$core$format_argument(dicts,locale,x){\nif(typeof x === 'number'){\nvar formatter = (function (){var or__4126__auto__ = tongue.core.lookup_template_for_locale(dicts,locale,new cljs.core.Keyword(\"tongue\",\"format-number\",\"tongue/format-number\",-1083453276));\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn cljs.core.str;\n}\n})();\nreturn (formatter.cljs$core$IFn$_invoke$arity$1 ? formatter.cljs$core$IFn$_invoke$arity$1(x) : formatter.call(null,x));\n} else {\nif(cljs.core.inst_QMARK_(x)){\nvar formatter = (function (){var or__4126__auto__ = tongue.core.lookup_template_for_locale(dicts,locale,new cljs.core.Keyword(\"tongue\",\"format-inst\",\"tongue/format-inst\",1968776314));\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn tongue.core.format_inst_iso;\n}\n})();\nreturn (formatter.cljs$core$IFn$_invoke$arity$1 ? formatter.cljs$core$IFn$_invoke$arity$1(x) : formatter.call(null,x));\n} else {\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(x);\n\n}\n}\n});\ntongue.core.translate = (function tongue$core$translate(var_args){\nvar G__42511 = arguments.length;\nswitch (G__42511) {\ncase 3:\nreturn tongue.core.translate.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn tongue.core.translate.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nvar args_arr__4757__auto__ = [];\nvar len__4736__auto___42552 = arguments.length;\nvar i__4737__auto___42553 = (0);\nwhile(true){\nif((i__4737__auto___42553 < len__4736__auto___42552)){\nargs_arr__4757__auto__.push((arguments[i__4737__auto___42553]));\n\nvar G__42554 = (i__4737__auto___42553 + (1));\ni__4737__auto___42553 = G__42554;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4758__auto__ = (new cljs.core.IndexedSeq(args_arr__4757__auto__.slice((4)),(0),null));\nreturn tongue.core.translate.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),argseq__4758__auto__);\n\n}\n});\n\n(tongue.core.translate.cljs$core$IFn$_invoke$arity$3 = (function (dicts,locale,key){\n\nvar t = tongue.core.lookup_template(dicts,locale,key);\nif(cljs.core.ifn_QMARK_(t)){\nreturn (t.cljs$core$IFn$_invoke$arity$0 ? t.cljs$core$IFn$_invoke$arity$0() : t.call(null));\n} else {\nreturn t;\n}\n}));\n\n(tongue.core.translate.cljs$core$IFn$_invoke$arity$4 = (function (dicts,locale,key,x){\n\nvar t = tongue.core.lookup_template(dicts,locale,key);\nvar s = ((cljs.core.ifn_QMARK_(t))?(t.cljs$core$IFn$_invoke$arity$1 ? t.cljs$core$IFn$_invoke$arity$1(x) : t.call(null,x)):t);\nif(cljs.core.map_QMARK_(x)){\nreturn clojure.string.replace(s,/\\{(\\w+)\\}/,(function (p__42512){\nvar vec__42513 = p__42512;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42513,(0),null);\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42513,(1),null);\nreturn tongue.core.format_argument(dicts,locale,cljs.core.get.cljs$core$IFn$_invoke$arity$2(x,cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k)));\n}));\n} else {\nreturn clojure.string.replace(s,/\\{1\\}/,tongue.core.escape_re_subst(tongue.core.format_argument(dicts,locale,x)));\n}\n}));\n\n(tongue.core.translate.cljs$core$IFn$_invoke$arity$variadic = (function (dicts,locale,key,x,rest){\n\nvar args = cljs.core.cons(x,rest);\nvar t = tongue.core.lookup_template(dicts,locale,key);\nvar s = ((cljs.core.ifn_QMARK_(t))?cljs.core.apply.cljs$core$IFn$_invoke$arity$3(t,x,rest):t);\nreturn clojure.string.replace(s,/\\{(\\d+)\\}/,(function (p__42516){\nvar vec__42517 = p__42516;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42517,(0),null);\nvar n = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42517,(1),null);\nvar idx = tongue.core.parse_long(n);\nvar arg = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(args,(idx - (1)),[\"{Missing index \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(idx),\"}\"].join(''));\nreturn tongue.core.format_argument(dicts,locale,arg);\n}));\n}));\n\n/** @this {Function} */\n(tongue.core.translate.cljs$lang$applyTo = (function (seq42506){\nvar G__42507 = cljs.core.first(seq42506);\nvar seq42506__$1 = cljs.core.next(seq42506);\nvar G__42508 = cljs.core.first(seq42506__$1);\nvar seq42506__$2 = cljs.core.next(seq42506__$1);\nvar G__42509 = cljs.core.first(seq42506__$2);\nvar seq42506__$3 = cljs.core.next(seq42506__$2);\nvar G__42510 = cljs.core.first(seq42506__$3);\nvar seq42506__$4 = cljs.core.next(seq42506__$3);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__42507,G__42508,G__42509,G__42510,seq42506__$4);\n}));\n\n(tongue.core.translate.cljs$lang$maxFixedArity = (4));\n\ntongue.core.append_ns = (function tongue$core$append_ns(ns,segment){\nreturn [(cljs.core.truth_(ns)?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns),\".\"].join(''):null),cljs.core.str.cljs$core$IFn$_invoke$arity$1(segment)].join('');\n});\n/**\n * Collapses nested maps into namespaced keywords:\n * { :ns { :key 1 }} => { :ns/key 1 }\n * { :animal { :flying { :bird 420 }}} => { :animal.flying/bird 420 }\n */\ntongue.core.build_dict = (function tongue$core$build_dict(var_args){\nvar G__42522 = arguments.length;\nswitch (G__42522) {\ncase 1:\nreturn tongue.core.build_dict.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn tongue.core.build_dict.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(tongue.core.build_dict.cljs$core$IFn$_invoke$arity$1 = (function (dict){\nreturn tongue.core.build_dict.cljs$core$IFn$_invoke$arity$2(null,dict);\n}));\n\n(tongue.core.build_dict.cljs$core$IFn$_invoke$arity$2 = (function (ns,dict){\nreturn cljs.core.reduce_kv((function (aggr,key,value){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"tongue\",cljs.core.namespace(key))){\nif((ns == null)){\n} else {\nthrow (new Error([\"Assert failed: \",\":tongue/... keys can only be specified at top level\",\"\\n\",\"(nil? ns)\"].join('')));\n}\n\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(aggr,key,value);\n} else {\nif(cljs.core.map_QMARK_(value)){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aggr,tongue.core.build_dict.cljs$core$IFn$_invoke$arity$2(tongue.core.append_ns(ns,cljs.core.name(key)),value)], 0));\n} else {\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(aggr,cljs.core.keyword.cljs$core$IFn$_invoke$arity$2((function (){var or__4126__auto__ = ns;\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn cljs.core.namespace(key);\n}\n})(),cljs.core.name(key)),value);\n\n}\n}\n}),cljs.core.PersistentArrayMap.EMPTY,dict);\n}));\n\n(tongue.core.build_dict.cljs$lang$maxFixedArity = 2);\n\ntongue.core.build_dicts = (function tongue$core$build_dicts(dicts){\nreturn cljs.core.reduce_kv((function (acc,lang,dict){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(acc,lang,((cljs.core.map_QMARK_(dict))?tongue.core.build_dict.cljs$core$IFn$_invoke$arity$1(dict):dict));\n}),cljs.core.PersistentArrayMap.EMPTY,dicts);\n});\n/**\n * Given dicts, builds translate function closed over these dicts:\n * \n *     (build-translate dicts) => ( [locale key & args] => string )\n */\ntongue.core.build_translate = (function tongue$core$build_translate(dicts){\n\nvar compiled_dicts = tongue.core.build_dicts(dicts);\nreturn (function() {\nvar G__42561 = null;\nvar G__42561__2 = (function (locale,key){\nreturn tongue.core.translate.cljs$core$IFn$_invoke$arity$3(compiled_dicts,locale,key);\n});\nvar G__42561__3 = (function (locale,key,x){\nreturn tongue.core.translate.cljs$core$IFn$_invoke$arity$4(compiled_dicts,locale,key,x);\n});\nvar G__42561__4 = (function() { \nvar G__42563__delegate = function (locale,key,x,args){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(tongue.core.translate,compiled_dicts,locale,key,x,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([args], 0));\n};\nvar G__42563 = function (locale,key,x,var_args){\nvar args = null;\nif (arguments.length > 3) {\nvar G__42564__i = 0, G__42564__a = new Array(arguments.length -  3);\nwhile (G__42564__i < G__42564__a.length) {G__42564__a[G__42564__i] = arguments[G__42564__i + 3]; ++G__42564__i;}\n  args = new cljs.core.IndexedSeq(G__42564__a,0,null);\n} \nreturn G__42563__delegate.call(this,locale,key,x,args);};\nG__42563.cljs$lang$maxFixedArity = 3;\nG__42563.cljs$lang$applyTo = (function (arglist__42565){\nvar locale = cljs.core.first(arglist__42565);\narglist__42565 = cljs.core.next(arglist__42565);\nvar key = cljs.core.first(arglist__42565);\narglist__42565 = cljs.core.next(arglist__42565);\nvar x = cljs.core.first(arglist__42565);\nvar args = cljs.core.rest(arglist__42565);\nreturn G__42563__delegate(locale,key,x,args);\n});\nG__42563.cljs$core$IFn$_invoke$arity$variadic = G__42563__delegate;\nreturn G__42563;\n})()\n;\nG__42561 = function(locale,key,x,var_args){\nvar args = var_args;\nswitch(arguments.length){\ncase 2:\nreturn G__42561__2.call(this,locale,key);\ncase 3:\nreturn G__42561__3.call(this,locale,key,x);\ndefault:\nvar G__42567 = null;\nif (arguments.length > 3) {\nvar G__42568__i = 0, G__42568__a = new Array(arguments.length -  3);\nwhile (G__42568__i < G__42568__a.length) {G__42568__a[G__42568__i] = arguments[G__42568__i + 3]; ++G__42568__i;}\nG__42567 = new cljs.core.IndexedSeq(G__42568__a,0,null);\n}\nreturn G__42561__4.cljs$core$IFn$_invoke$arity$variadic(locale,key,x, G__42567);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nG__42561.cljs$lang$maxFixedArity = 3;\nG__42561.cljs$lang$applyTo = G__42561__4.cljs$lang$applyTo;\nG__42561.cljs$core$IFn$_invoke$arity$2 = G__42561__2;\nG__42561.cljs$core$IFn$_invoke$arity$3 = G__42561__3;\nG__42561.cljs$core$IFn$_invoke$arity$variadic = G__42561__4.cljs$core$IFn$_invoke$arity$variadic;\nreturn G__42561;\n})()\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","tongue/core.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",16],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.core.async","~$cljs.core.async"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$tongue.core","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$tongue.number","^M","~$cljs.core","^N","~$tongue.macro","^O","~$goog","^P","~$inst","~$tongue.inst","~$number","^M","^R","^R","~$str","~$clojure.string","~$macro","^O","^U","^U"],"~:seen",["^F",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^N","^N","^O","^O","^V","^O"],"~:form",["~#list",["~$ns","^H",["^10",["^X",["^U","~:as","^T"],["^R","^12","^Q"],["^M","^12","^S"],["^O","^12","^V"]]]]],"~:flags",["^ ","^X",["^F",[]]],"~:js-deps",["^ "],"~:deps",["^P","^N","^U","^R","^M","^O"]],"^J","^H","~:resource-id",["~:shadow.build.classpath/resource","tongue/core.cljc"],"~:compiled-at",1636553647464,"~:resource-name","tongue/core.cljc","~:warnings",[],"~:source","(ns tongue.core\n  (:require\n    [clojure.string :as str]\n    [tongue.inst :as inst]\n    [tongue.number :as number]\n    [tongue.macro :as macro]\n    #?(:clj [clojure.future :refer :all])\n    #?(:clj [clojure.spec.alpha :as spec])))\n\n\n(def inst-formatter inst/formatter)\n\n\n(def format-inst-iso (inst-formatter \"{year}-{month-numeric-padded}-{day-padded}T{hour24-padded}:{minutes-padded}:{seconds-padded}\" {}))\n\n\n(def number-formatter number/formatter)\n\n\n(defn- parse-long [s]\n  #?(:cljs (js/parseInt s)\n     :clj  (Long/parseLong s)))\n\n\n(defonce ^:private tags-cache (volatile! {}))\n\n\n(defn- tags\n  \":az-Arab-IR => (:az-Arab-IR :az-Arab :az), cached\"\n  [locale]\n  (or (@tags-cache locale)\n      (let [tags (loop [subtags  (str/split (name locale) #\"-\")\n                        last-tag nil\n                        tags     ()]\n                   (if-some [subtag (first subtags)]\n                     (let [tag (str last-tag (when last-tag \"-\") subtag)]\n                       (recur (next subtags) tag (conj tags (keyword tag))))\n                     tags))]\n        (vswap! tags-cache assoc locale tags)\n        tags)))\n\n\n(defn- lookup-template-for-locale [dicts locale key]\n  (when locale\n    (loop [tags (tags locale)]\n      (when-some [tag (first tags)]\n        (or (get (get dicts tag) key)\n            (recur (next tags)))))))\n\n\n(defn- lookup-template [dicts locale key]\n  (or (lookup-template-for-locale dicts locale key)\n      (lookup-template-for-locale dicts (:tongue/fallback dicts) key)\n      (str \"{Missing key \" key \"}\")))\n\n\n(defn- escape-re-subst [str]\n  #?(:clj (java.util.regex.Matcher/quoteReplacement str)\n     :cljs (str/replace str #\"\\$\" \"$$$$\")))\n\n\n(defn- format-argument [dicts locale x]\n  (cond\n    (number? x) (let [formatter (or (lookup-template-for-locale dicts locale :tongue/format-number)\n                                    str)]\n                  (formatter x))\n    (inst? x)   (let [formatter (or (lookup-template-for-locale dicts locale :tongue/format-inst)\n                                    format-inst-iso)]\n                  (formatter x))\n    :else       (str x)))\n\n\n(macro/with-spec\n  (spec/def ::locale simple-keyword?)\n  (spec/def ::key keyword?))\n\n\n(defn- translate\n  ([dicts locale key]\n    (macro/with-spec\n      (spec/assert ::locale locale)\n      (spec/assert ::key key))\n    (let [t (lookup-template dicts locale key)]\n      (if (ifn? t) (t) t)))\n  ([dicts locale key x]\n    (macro/with-spec\n      (spec/assert ::locale locale)\n      (spec/assert ::key key))\n    (let [t (lookup-template dicts locale key)\n          s (if (ifn? t) (t x) t)]\n      (if (map? x)\n        (str/replace s #\"\\{(\\w+)\\}\"\n                     (fn [[_ k]]\n                       (format-argument dicts locale (get x (keyword k)))))\n        (str/replace s #\"\\{1\\}\"\n                     (escape-re-subst (format-argument dicts locale x))))))\n  ([dicts locale key x & rest]\n    (macro/with-spec\n      (spec/assert ::locale locale)\n      (spec/assert ::key key))\n    (let [args (cons x rest)\n          t    (lookup-template dicts locale key)\n          s    (if (ifn? t) (apply t x rest) t)]\n      (str/replace s #\"\\{(\\d+)\\}\"\n                   (fn [[_ n]]\n                     (let [idx (parse-long n)\n                           arg (nth args (dec idx)\n                                    (str \"{Missing index \" idx \"}\"))]\n                       (format-argument dicts locale arg)))))))\n\n\n(defn- append-ns [ns segment]\n  (str (when ns (str ns \".\"))\n       segment))\n\n\n(defn- build-dict\n  \"Collapses nested maps into namespaced keywords:\n   { :ns { :key 1 }} => { :ns/key 1 }\n   { :animal { :flying { :bird 420 }}} => { :animal.flying/bird 420 }\"\n  ([dict] (build-dict nil dict))\n  ([ns dict]\n    (reduce-kv\n      (fn [aggr key value]\n        (cond\n          (= \"tongue\" (namespace key))\n          (do\n            (assert (nil? ns) \":tongue/... keys can only be specified at top level\")\n            (assoc aggr key value))\n\n          (map? value)\n          (merge aggr (build-dict (append-ns ns (name key)) value))\n\n          :else\n          (assoc aggr (keyword (or ns (namespace key)) (name key)) value)))\n      {} dict)))\n\n\n(defn- build-dicts [dicts]\n  (reduce-kv\n    (fn [acc lang dict]\n      (assoc acc lang (if (map? dict) (build-dict dict) dict)))\n    {} dicts))\n\n\n(macro/with-spec\n  (spec/def ::template (spec/or :str string?\n                                :fn ifn?))\n\n  (spec/def :tongue/format-number ifn?)\n  (spec/def :tongue/format-inst ifn?)\n\n  (spec/def ::dict (spec/and\n                     (spec/keys :opt [:tongue/format-number :tongue/format-inst])\n                     (spec/map-of keyword? (spec/or :plain  ::template\n                                                    :nested (spec/map-of keyword? ::template)))))\n\n  (spec/def :tongue/fallback keyword?)\n  (spec/def ::dicts (spec/and\n                      (spec/keys :opt [:tongue/fallback])\n                      (spec/conformer #(dissoc % :tongue/fallback))\n                      (spec/map-of keyword? ::dict))))\n\n\n(defn build-translate\n  \"Given dicts, builds translate function closed over these dicts:\n\n       (build-translate dicts) => ( [locale key & args] => string )\"\n  [dicts]\n  (macro/with-spec\n    (spec/assert ::dicts dicts))\n  (let [compiled-dicts (build-dicts dicts)]\n    (fn\n      ([locale key]   (translate compiled-dicts locale key))\n      ([locale key x] (translate compiled-dicts locale key x))\n      ([locale key x & args]\n        (apply translate compiled-dicts locale key x args)))))\n","~:reader-features",["^F",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["tongue.core/inst-formatter","tongue.inst/formatter","tongue.core/format-inst-iso","G__42487","G__42488","tongue.core/number-formatter","tongue.number/formatter","tongue.core/parse-long","s","js/parseInt","js/tongue","js/tongue.core","js/tongue.core.tags-cache","tongue.core/tags-cache","cljs.core/volatile!","tongue.core/tags","locale","or__4126__auto__","fexpr__42497","cljs.core/deref","tags","subtags","clojure.string.split","cljs.core/name","last-tag","temp__5737__auto__","subtag","cljs.core/first","tag","cljs.core/next","cljs.core.conj","cljs.core.keyword","cljs.core.assoc","tongue.core/lookup-template-for-locale","dicts","key","temp__5739__auto__","cljs.core.get","tongue.core/lookup-template","tongue.core/escape-re-subst","str","clojure.string/replace","tongue.core/format-argument","x","formatter","cljs.core/str","cljs.core/inst?","var_args","G__42511","tongue.core/translate","args-arr__4757__auto__","len__4736__auto__","i__4737__auto__","argseq__4758__auto__","cljs.core/IndexedSeq","seq42506","G__42507","G__42508","G__42509","G__42510","self__4723__auto__","t","cljs.core/ifn?","cljs.core/map?","p__42512","vec__42513","cljs.core.nth","_","k","rest","args","cljs.core/cons","cljs.core.apply","p__42516","vec__42517","n","idx","arg","tongue.core/append-ns","ns","segment","G__42522","tongue.core/build-dict","js/Error","dict","tongue.core.build_dict","cljs.core/reduce-kv","aggr","value","cljs.core._EQ_","cljs.core/namespace","cljs.core.merge","tongue.core/build-dicts","acc","lang","tongue.core/build-translate","compiled-dicts","tongue.core.translate"]],"~:used-vars",["^F",["~$tongue.inst/formatter","~$cljs.core/keyword","~$tongue.core/tags-cache","~$tongue.core/parse-long","~$cljs.core/=","~$tongue.core/lookup-template","~$cljs.core/ifn?","~$tongue.number/formatter","~$js/tongue.core.tags-cache","~$cljs.core/-deref","~$tongue.core/escape-re-subst","~$tongue.core/lookup-template-for-locale","~$tongue.core/translate","~$cljs.core/apply","~$tongue.core/tags","~$tongue.core/build-dict","~$tongue.core/format-argument","~$cljs.core/map?","~$cljs.core/inst?","~$cljs.core/namespace","~$cljs.core/volatile!","~$js/parseInt","~$cljs.core/get","~$js/tongue.core","~$js/tongue","~$cljs.core/-vreset!","~$tongue.core/inst-formatter","~$clojure.string/replace","~$tongue.core/build-translate","~$cljs.core/next","~$tongue.core/build-dicts","~$cljs.core/assoc","~$tongue.core/number-formatter","~$cljs.core/reduce-kv","~$tongue.core/format-inst-iso","~$cljs.core/name","~$cljs.core/merge","~$js/Error","~$tongue.core/append-ns"]]],"~:cache-keys",["~#cmap",[["^17","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^F",[]],"~:deps-syms",["^P","~$goog.dom.HtmlElement"]]],["^17","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^F",[]],"^2C",["^P","~$goog.array","~$goog.asserts"]]],["^17","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^F",[]],"^2C",["^P"]]],["^17","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^F",[]],"^2C",["^P","^2E","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^17","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^F",[]],"^2C",["^P","^2F","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2I"]]],["^17","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^F",[]],"^2C",["^P","^2F"]]],["^17","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^F",[]],"^2C",["^P"]]],["^17","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^F",[]],"^2C",["^P"]]],["^17","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^F",[]],"^2C",["^P"]]],["^17","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^F",[]],"^2C",["^P"]]],["^17","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^F",[]],"^2C",["^P","^2F"]]],"~:SHADOW-TIMESTAMP",[1635266348000,1635266348000,1634894918000],["^17","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^F",[]],"^2C",["^P","^2F","~$goog.reflect"]]],["^17","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^F",[]],"^2C",["^P","^2F","~$goog.html.trustedtypes","^2L","^2M","^2N","^2O"]]],["^17","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^F",[]],"^2C",["^P"]]],["^17","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^F",[]],"^2C",["^P"]]],["^17","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^F",[]],"^2C",["^P","^2E","^2F","~$goog.html.SafeUrl","^2N","^2O","^2I"]]],["^17","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^F",[]],"^2C",["^P","^2F","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^2S","^2K","~$goog.html.uncheckedconversions","^2N","^2I"]]],["^17","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^F",[]],"^2C",["^P","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^17","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^F",[]],"^2C",["^P","^2E","^2F","~$goog.dom.TagName","~$goog.dom.tags","^2W","^2X","~$goog.html.SafeStyleSheet","^2S","^2K","^2R","^2L","^2M","~$goog.labs.userAgent.browser","^2H","^2N","^2O","^2I"]]],["^17","tongue/macro.cljc"],["46bc54fb216e4aa9239282cf693179c888d36a5a","^2@",["^ ","^2A",null,"^2B",["^F",[]],"^2C",["^P","^N"]]],["^17","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^F",[]],"^2C",["^P","^2H"]]],["^17","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^F",[]],"^2C",["^P","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^17","tongue/inst.cljc"],["46bc54fb216e4aa9239282cf693179c888d36a5a","^2@",["^ ","^2A",null,"^2B",["^F",[]],"^2C",["^P","^N","^U","^O"]]],["^17","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^F",[]],"^2C",["^P","^2E","^2F","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^17","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^F",[]],"^2C",["^P"]]],["^17","tongue/core.cljc"],["46bc54fb216e4aa9239282cf693179c888d36a5a","^2@",["^ ","^2A",null,"^2B",["^F",[]],"^2C",["^P","^N","^U","^R","^M","^O"]]],["^17","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^F",[]],"^2C",["^P"]]],["^17","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^F",[]],"^2C",[]]],["^17","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^F",[]],"^2C",["^P","^2E","^2H"]]],["^17","clojure/string.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^2@",["^ ","^2A",null,"^2B",["^F",[]],"^2C",["^P","^N","^36","~$goog.string.StringBuffer"]]],["^17","tongue/number.cljc"],["46bc54fb216e4aa9239282cf693179c888d36a5a","^2@",["^ ","^2A",null,"^2B",["^F",[]],"^2C",["^P","^N","^U","^O"]]],["^17","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^F",[]],"^2C",["^P","~$goog.dom.safe","^2Y","^2N","^2I"]]],["^17","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^F",[]],"^2C",["^P"]]],["^17","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^F",[]],"^2C",["^P","^2I"]]],["^17","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^F",[]],"^2C",["^P"]]],["^17","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^F",[]],"^2C",["^P","^2E","^2F","^2U","~$goog.math"]]],["^17","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^F",[]],"^2C",["^P","^2F","^2V","^2W","^2X","^32","^2S","^2K","^2N","^2I"]]],["^17","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^F",[]],"^2C",["^P"]]],["^17","cljs/core.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^2@",["^ ","^2A",null,"^2B",["^F",[]],"^2C",["^P","~$goog.math.Long","~$goog.math.Integer","^36","^2H","^2E","~$goog.Uri","^3<"]]],["^17","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^F",[]],"^2C",["^P","^2F","^2R","^2N","^2O"]]],["^17","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^F",[]],"^2C",["^P","^2E","^2F","^2X","^2H","^2N","^2O","^2I"]]],["^17","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^F",[]],"^2C",["^P","^2Q"]]],["^17","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^F",[]],"^2C",["^P","^2E","^2F","^36"]]],["^17","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^F",[]],"^2C",["^P","^2F","^2O"]]]]],"~:clj-info",["^ ","jar:file:/Users/mehdi/.m2/repository/tongue/tongue/0.2.7/tongue-0.2.7.jar!/tongue/macro.cljc",1635148719000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1634893165000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/reader_types.clj",1634894917000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/externs.clj",1634894918000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/analyzer.cljc",1634894918000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/core.cljc",1634894918000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/env.cljc",1634894918000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/compiler.cljc",1634894918000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/js_deps.cljc",1634894918000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1634893165000,"jar:file:/Users/mehdi/.m2/repository/binaryage/devtools/1.0.3/devtools-1.0.3.jar!/devtools/defaults.clj",1633351665000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1634893165000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/tagged_literals.cljc",1634894918000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64.clj",1634894918000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/data.json/1.0.0/data.json-1.0.0.jar!/clojure/data/json.clj",1634894917000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1634893165000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1634893165000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1634893165000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/inspect.clj",1634894917000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader.clj",1634894917000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map.clj",1634894918000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1634893165000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/default_data_readers.clj",1634894917000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/util.cljc",1634894918000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/errors.clj",1634894917000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64_vlq.clj",1634894918000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","tongue/core.cljc","^7",1,"^8",5,"^9",1,"^:",16],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"^D",null,"^E",["^F",[]],"^G","^H","^K",null,"^L",["^ ","^M","^M","^N","^N","^O","^O","^P","^P","^Q","^R","^S","^M","^R","^R","^T","^U","^V","^O","^U","^U"],"^W",["^F",["^X"]],"~:shadow/js-access-global",["^F",["Error","parseInt"]],"^Y",null,"~:defs",["^ ","~$build-dict",["^ ","~:protocol-inline",null,"^5",["^ ","~:private",true,"^6","tongue/core.cljc","^:",18,"~:top-fn",["^ ","~:variadic?",false,"~:fixed-arity",2,"~:max-fixed-arity",2,"~:method-params",[["~$dict"],["^11","^4<"]],"~:arglists",["^10",[["^4<"],["^11","^4<"]]],"~:arglists-meta",["^10",[null,null]]],"^8",8,"^7",117,"^9",117,"^4=",["^10",["~$quote",["^10",[["^4<"],["^11","^4<"]]]]],"~:doc","Collapses nested maps into namespaced keywords:\n   { :ns { :key 1 }} => { :ns/key 1 }\n   { :animal { :flying { :bird 420 }}} => { :animal.flying/bird 420 }"],"^46",true,"^G","^1R","^6","tongue/core.cljc","^:",18,"^47",["^ ","^48",false,"^49",2,"^4:",2,"^4;",[["^4<"],["^11","^4<"]],"^4=",["^10",[["^4<"],["^11","^4<"]]],"^4>",["^10",[null,null]]],"^4;",[["^4<"],["^11","^4<"]],"~:protocol-impl",null,"^49",2,"^4>",["^10",[null,null]],"^8",1,"^48",false,"~:methods",[["^ ","^49",1,"^48",false,"~:tag","~$any"],["^ ","^49",2,"^48",false,"^4C",["^F",[null,"^4D"]]]],"^7",117,"^9",117,"^4:",2,"~:fn-var",true,"^4=",["^10",[["^4<"],["^11","^4<"]]],"^4@","Collapses nested maps into namespaced keywords:\n   { :ns { :key 1 }} => { :ns/key 1 }\n   { :animal { :flying { :bird 420 }}} => { :animal.flying/bird 420 }"],"~$format-argument",["^ ","^45",null,"^5",["^ ","^6","tongue/core.cljc","^7",62,"^8",8,"^9",62,"^:",23,"^46",true,"^4=",["^10",["^4?",["^10",[["~$dicts","~$locale","~$x"]]]]]],"^46",true,"^G","^1S","^6","tongue/core.cljc","^:",23,"^4;",["^10",[["^4G","^4H","~$x"]]],"^4A",null,"^4>",["^10",[null,null]],"^8",1,"^48",false,"^7",62,"~:ret-tag",["^F",["^4D","~$string"]],"^9",62,"^4:",3,"^4E",true,"^4=",["^10",["^4?",["^10",[["^4G","^4H","~$x"]]]]]],"~$append-ns",["^ ","^45",null,"^5",["^ ","^6","tongue/core.cljc","^7",112,"^8",8,"^9",112,"^:",17,"^46",true,"^4=",["^10",["^4?",["^10",[["^11","~$segment"]]]]]],"^46",true,"^G","^2=","^6","tongue/core.cljc","^:",17,"^4;",["^10",[["^11","^4L"]]],"^4A",null,"^4>",["^10",[null,null]],"^8",1,"^48",false,"^7",112,"^4I","^4J","^9",112,"^4:",2,"^4E",true,"^4=",["^10",["^4?",["^10",[["^11","^4L"]]]]]],"~$tags",["^ ","^45",null,"^5",["^ ","^6","tongue/core.cljc","^7",28,"^8",8,"^9",28,"^:",12,"^46",true,"^4=",["^10",["^4?",["^10",[["^4H"]]]]],"^4@",":az-Arab-IR => (:az-Arab-IR :az-Arab :az), cached"],"^46",true,"^G","^1Q","^6","tongue/core.cljc","^:",12,"^4;",["^10",[["^4H"]]],"^4A",null,"^4>",["^10",[null,null]],"^8",1,"^48",false,"^7",28,"^4I",["^F",["~$clj","~$cljs.core/IList","^4D"]],"^9",28,"^4:",1,"^4E",true,"^4=",["^10",["^4?",["^10",[["^4H"]]]]],"^4@",":az-Arab-IR => (:az-Arab-IR :az-Arab :az), cached"],"~$build-translate",["^ ","^45",null,"^5",["^ ","^6","tongue/core.cljc","^7",165,"^8",7,"^9",165,"^:",22,"^4=",["^10",["^4?",["^10",[["^4G"]]]]],"^4@","Given dicts, builds translate function closed over these dicts:\n\n       (build-translate dicts) => ( [locale key & args] => string )"],"^G","^23","^6","tongue/core.cljc","^:",22,"^4;",["^10",[["^4G"]]],"^4A",null,"^4>",["^10",[null,null]],"^8",1,"^48",false,"^7",165,"^4I","~$function","^9",165,"^4:",1,"^4E",true,"^4=",["^10",["^4?",["^10",[["^4G"]]]]],"^4@","Given dicts, builds translate function closed over these dicts:\n\n       (build-translate dicts) => ( [locale key & args] => string )"],"~$inst-formatter",["^ ","^G","^21","^6","tongue/core.cljc","^7",11,"^8",1,"^9",11,"^:",20,"^5",["^ ","^6","tongue/core.cljc","^7",11,"^8",6,"^9",11,"^:",20]],"~$number-formatter",["^ ","^G","^27","^6","tongue/core.cljc","^7",17,"^8",1,"^9",17,"^:",22,"^5",["^ ","^6","tongue/core.cljc","^7",17,"^8",6,"^9",17,"^:",22]],"~$format-inst-iso",["^ ","^G","^29","^6","tongue/core.cljc","^7",14,"^8",1,"^9",14,"^:",21,"^5",["^ ","^6","tongue/core.cljc","^7",14,"^8",6,"^9",14,"^:",21],"^4C","^4D"],"~$tags-cache",["^ ","^5",["^ ","^6","tongue/core.cljc","^7",25,"^8",20,"^9",25,"^:",30,"^46",true],"^46",true,"^G","^1E","^6","tongue/core.cljc","^:",30,"^8",1,"^7",25,"^9",25,"^4C","~$cljs.core/Volatile"],"~$build-dicts",["^ ","^45",null,"^5",["^ ","^6","tongue/core.cljc","^7",139,"^8",8,"^9",139,"^:",19,"^46",true,"^4=",["^10",["^4?",["^10",[["^4G"]]]]]],"^46",true,"^G","^25","^6","tongue/core.cljc","^:",19,"^4;",["^10",[["^4G"]]],"^4A",null,"^4>",["^10",[null,null]],"^8",1,"^48",false,"^7",139,"^4I",["^F",[null,"^4D"]],"^9",139,"^4:",1,"^4E",true,"^4=",["^10",["^4?",["^10",[["^4G"]]]]]],"~$lookup-template",["^ ","^45",null,"^5",["^ ","^6","tongue/core.cljc","^7",51,"^8",8,"^9",51,"^:",23,"^46",true,"^4=",["^10",["^4?",["^10",[["^4G","^4H","~$key"]]]]]],"^46",true,"^G","^1H","^6","tongue/core.cljc","^:",23,"^4;",["^10",[["^4G","^4H","^4Y"]]],"^4A",null,"^4>",["^10",[null,null]],"^8",1,"^48",false,"^7",51,"^4I",["^F",["^4D","^4J"]],"^9",51,"^4:",3,"^4E",true,"^4=",["^10",["^4?",["^10",[["^4G","^4H","^4Y"]]]]]],"~$translate",["^ ","^45",null,"^5",["^ ","^6","tongue/core.cljc","^7",78,"^8",8,"^9",78,"^:",17,"^46",true,"^4=",["^10",["^4?",["^10",[["^4G","^4H","^4Y"],["^4G","^4H","^4Y","~$x"],["^4G","^4H","^4Y","~$x","~$&","~$rest"]]]]],"^47",["^ ","^48",true,"^49",4,"^4:",4,"^4;",[["^4G","^4H","^4Y"],["^4G","^4H","^4Y","~$x"]],"^4=",["^10",[["^4G","^4H","^4Y"],["^4G","^4H","^4Y","~$x"],["^4G","^4H","^4Y","~$x","~$&","^4["]]],"^4>",["^10",[null,null,null]]]],"^46",true,"^G","^1O","^6","tongue/core.cljc","^:",17,"^47",["^ ","^48",true,"^49",4,"^4:",4,"^4;",[["^4G","^4H","^4Y"],["^4G","^4H","^4Y","~$x"]],"^4=",["^10",[["^4G","^4H","^4Y"],["^4G","^4H","^4Y","~$x"],["^4G","^4H","^4Y","~$x","~$&","^4["]]],"^4>",["^10",[null,null,null]]],"^4;",[["^4G","^4H","^4Y"],["^4G","^4H","^4Y","~$x"]],"^4A",null,"^49",4,"^4>",["^10",[null,null,null]],"^8",1,"^48",true,"^4B",[["^ ","^49",3,"^48",false,"^4C",["^F",["^4D","^4J"]]],["^ ","^49",4,"^48",false,"^4C","^4J"],["^ ","^49",4,"^48",true,"^4C","^4J"]],"^7",78,"^9",78,"^4:",4,"^4E",true,"^4=",["^10",[["^4G","^4H","^4Y"],["^4G","^4H","^4Y","~$x"],["^4G","^4H","^4Y","~$x","~$&","^4["]]]],"~$parse-long",["^ ","^45",null,"^5",["^ ","^6","tongue/core.cljc","^7",20,"^8",8,"^9",20,"^:",18,"^46",true,"^4=",["^10",["^4?",["^10",[["~$s"]]]]]],"^46",true,"^G","^1F","^6","tongue/core.cljc","^:",18,"^4;",["^10",[["~$s"]]],"^4A",null,"^4>",["^10",[null,null]],"^8",1,"^48",false,"^7",20,"^4I","~$js","^9",20,"^4:",1,"^4E",true,"^4=",["^10",["^4?",["^10",[["~$s"]]]]]],"~$escape-re-subst",["^ ","^45",null,"^5",["^ ","^6","tongue/core.cljc","^7",57,"^8",8,"^9",57,"^:",23,"^46",true,"^4=",["^10",["^4?",["^10",[["^T"]]]]]],"^46",true,"^G","^1M","^6","tongue/core.cljc","^:",23,"^4;",["^10",[["^T"]]],"^4A",null,"^4>",["^10",[null,null]],"^8",1,"^48",false,"^7",57,"^4I","^4J","^9",57,"^4:",1,"^4E",true,"^4=",["^10",["^4?",["^10",[["^T"]]]]]],"~$lookup-template-for-locale",["^ ","^45",null,"^5",["^ ","^6","tongue/core.cljc","^7",43,"^8",8,"^9",43,"^:",34,"^46",true,"^4=",["^10",["^4?",["^10",[["^4G","^4H","^4Y"]]]]]],"^46",true,"^G","^1N","^6","tongue/core.cljc","^:",34,"^4;",["^10",[["^4G","^4H","^4Y"]]],"^4A",null,"^4>",["^10",[null,null]],"^8",1,"^48",false,"^7",43,"^4I",["^F",["^4D","~$clj-nil"]],"^9",43,"^4:",3,"^4E",true,"^4=",["^10",["^4?",["^10",[["^4G","^4H","^4Y"]]]]]]],"^Z",["^ ","^N","^N","^O","^O","^V","^O"],"~:cljs.analyzer/constants",["^ ","^W",["^F",["~:tongue/format-number","~:else","~:tongue/fallback","~:tongue/format-inst"]],"~:order",["^58","^56","^59","^57"]],"^13",["^ ","^X",["^F",[]]],"^14",["^ "],"^15",["^P","^N","^U","^R","^M","^O"]],"^J","^H","~:ns-specs",["^ "],"~:ns-spec-vars",["^F",[]],"~:compiler-options",["^2?",[["^5=","~:static-fns"],true,["^5=","~:shadow-tweaks"],null,["^5=","~:source-map-inline"],null,["^5=","~:elide-asserts"],false,["^5=","~:optimize-constants"],null,["^5=","^1:"],null,["^5=","~:external-config"],null,["^5=","~:tooling-config"],null,["^5=","~:emit-constants"],null,["^5=","~:load-tests"],null,["^5=","~:form-size-threshold"],null,["^5=","~:data-readers"],null,["^5=","~:infer-externs"],"~:auto",["^5=","^1<"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^5=","~:fn-invoke-direct"],null,["^5=","~:source-map"],"/dev/null"]]]