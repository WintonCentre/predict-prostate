["^ ","~:output",["^ ","~:js","goog.provide('tongue.core');\ntongue.core.inst_formatter = tongue.inst.formatter;\ntongue.core.format_inst_iso = (function (){var G__42532 = \"{year}-{month-numeric-padded}-{day-padded}T{hour24-padded}:{minutes-padded}:{seconds-padded}\";\nvar G__42533 = cljs.core.PersistentArrayMap.EMPTY;\nreturn (tongue.core.inst_formatter.cljs$core$IFn$_invoke$arity$2 ? tongue.core.inst_formatter.cljs$core$IFn$_invoke$arity$2(G__42532,G__42533) : tongue.core.inst_formatter.call(null,G__42532,G__42533));\n})();\ntongue.core.number_formatter = tongue.number.formatter;\ntongue.core.parse_long = (function tongue$core$parse_long(s){\nreturn parseInt(s);\n});\nif((typeof tongue !== 'undefined') && (typeof tongue.core !== 'undefined') && (typeof tongue.core.tags_cache !== 'undefined')){\n} else {\ntongue.core.tags_cache = cljs.core.volatile_BANG_(cljs.core.PersistentArrayMap.EMPTY);\n}\n/**\n * :az-Arab-IR => (:az-Arab-IR :az-Arab :az), cached\n */\ntongue.core.tags = (function tongue$core$tags(locale){\nvar or__4212__auto__ = (function (){var fexpr__42541 = cljs.core.deref(tongue.core.tags_cache);\nreturn (fexpr__42541.cljs$core$IFn$_invoke$arity$1 ? fexpr__42541.cljs$core$IFn$_invoke$arity$1(locale) : fexpr__42541.call(null,locale));\n})();\nif(cljs.core.truth_(or__4212__auto__)){\nreturn or__4212__auto__;\n} else {\nvar tags = (function (){var subtags = clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.name(locale),/-/);\nvar last_tag = null;\nvar tags = cljs.core.List.EMPTY;\nwhile(true){\nvar temp__5755__auto__ = cljs.core.first(subtags);\nif((temp__5755__auto__ == null)){\nreturn tags;\n} else {\nvar subtag = temp__5755__auto__;\nvar tag = [last_tag,(cljs.core.truth_(last_tag)?\"-\":null),cljs.core.str.cljs$core$IFn$_invoke$arity$1(subtag)].join('');\nvar G__42673 = cljs.core.next(subtags);\nvar G__42674 = tag;\nvar G__42675 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(tags,cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(tag));\nsubtags = G__42673;\nlast_tag = G__42674;\ntags = G__42675;\ncontinue;\n}\nbreak;\n}\n})();\ntongue.core.tags_cache.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(tongue.core.tags_cache.cljs$core$IDeref$_deref$arity$1(null),locale,tags));\n\nreturn tags;\n}\n});\ntongue.core.lookup_template_for_locale = (function tongue$core$lookup_template_for_locale(dicts,locale,key){\nif(cljs.core.truth_(locale)){\nvar tags = tongue.core.tags(locale);\nwhile(true){\nvar temp__5757__auto__ = cljs.core.first(tags);\nif((temp__5757__auto__ == null)){\nreturn null;\n} else {\nvar tag = temp__5757__auto__;\nvar or__4212__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$2(dicts,tag),key);\nif(cljs.core.truth_(or__4212__auto__)){\nreturn or__4212__auto__;\n} else {\nvar G__42685 = cljs.core.next(tags);\ntags = G__42685;\ncontinue;\n}\n}\nbreak;\n}\n} else {\nreturn null;\n}\n});\ntongue.core.lookup_template = (function tongue$core$lookup_template(dicts,locale,key){\nvar or__4212__auto__ = tongue.core.lookup_template_for_locale(dicts,locale,key);\nif(cljs.core.truth_(or__4212__auto__)){\nreturn or__4212__auto__;\n} else {\nvar or__4212__auto____$1 = tongue.core.lookup_template_for_locale(dicts,new cljs.core.Keyword(\"tongue\",\"fallback\",\"tongue/fallback\",1378320181).cljs$core$IFn$_invoke$arity$1(dicts),key);\nif(cljs.core.truth_(or__4212__auto____$1)){\nreturn or__4212__auto____$1;\n} else {\nreturn [\"{Missing key \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(key),\"}\"].join('');\n}\n}\n});\ntongue.core.escape_re_subst = (function tongue$core$escape_re_subst(str){\nreturn clojure.string.replace(str,/\\$/,\"$$$$\");\n});\ntongue.core.format_argument = (function tongue$core$format_argument(dicts,locale,x){\nif(typeof x === 'number'){\nvar formatter = (function (){var or__4212__auto__ = tongue.core.lookup_template_for_locale(dicts,locale,new cljs.core.Keyword(\"tongue\",\"format-number\",\"tongue/format-number\",-1083453276));\nif(cljs.core.truth_(or__4212__auto__)){\nreturn or__4212__auto__;\n} else {\nreturn cljs.core.str;\n}\n})();\nreturn (formatter.cljs$core$IFn$_invoke$arity$1 ? formatter.cljs$core$IFn$_invoke$arity$1(x) : formatter.call(null,x));\n} else {\nif(cljs.core.inst_QMARK_(x)){\nvar formatter = (function (){var or__4212__auto__ = tongue.core.lookup_template_for_locale(dicts,locale,new cljs.core.Keyword(\"tongue\",\"format-inst\",\"tongue/format-inst\",1968776314));\nif(cljs.core.truth_(or__4212__auto__)){\nreturn or__4212__auto__;\n} else {\nreturn tongue.core.format_inst_iso;\n}\n})();\nreturn (formatter.cljs$core$IFn$_invoke$arity$1 ? formatter.cljs$core$IFn$_invoke$arity$1(x) : formatter.call(null,x));\n} else {\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(x);\n\n}\n}\n});\ntongue.core.translate = (function tongue$core$translate(var_args){\nvar G__42614 = arguments.length;\nswitch (G__42614) {\ncase 3:\nreturn tongue.core.translate.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn tongue.core.translate.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nvar args_arr__4839__auto__ = [];\nvar len__4818__auto___42691 = arguments.length;\nvar i__4819__auto___42692 = (0);\nwhile(true){\nif((i__4819__auto___42692 < len__4818__auto___42691)){\nargs_arr__4839__auto__.push((arguments[i__4819__auto___42692]));\n\nvar G__42693 = (i__4819__auto___42692 + (1));\ni__4819__auto___42692 = G__42693;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4840__auto__ = (new cljs.core.IndexedSeq(args_arr__4839__auto__.slice((4)),(0),null));\nreturn tongue.core.translate.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),argseq__4840__auto__);\n\n}\n});\n\n(tongue.core.translate.cljs$core$IFn$_invoke$arity$3 = (function (dicts,locale,key){\n\nvar t = tongue.core.lookup_template(dicts,locale,key);\nif(cljs.core.ifn_QMARK_(t)){\nreturn (t.cljs$core$IFn$_invoke$arity$0 ? t.cljs$core$IFn$_invoke$arity$0() : t.call(null));\n} else {\nreturn t;\n}\n}));\n\n(tongue.core.translate.cljs$core$IFn$_invoke$arity$4 = (function (dicts,locale,key,x){\n\nvar t = tongue.core.lookup_template(dicts,locale,key);\nvar s = ((cljs.core.ifn_QMARK_(t))?(t.cljs$core$IFn$_invoke$arity$1 ? t.cljs$core$IFn$_invoke$arity$1(x) : t.call(null,x)):t);\nif(cljs.core.map_QMARK_(x)){\nreturn clojure.string.replace(s,/\\{(\\w+)\\}/,(function (p__42619){\nvar vec__42620 = p__42619;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42620,(0),null);\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42620,(1),null);\nreturn tongue.core.format_argument(dicts,locale,cljs.core.get.cljs$core$IFn$_invoke$arity$2(x,cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k)));\n}));\n} else {\nreturn clojure.string.replace(s,/\\{1\\}/,tongue.core.escape_re_subst(tongue.core.format_argument(dicts,locale,x)));\n}\n}));\n\n(tongue.core.translate.cljs$core$IFn$_invoke$arity$variadic = (function (dicts,locale,key,x,rest){\n\nvar args = cljs.core.cons(x,rest);\nvar t = tongue.core.lookup_template(dicts,locale,key);\nvar s = ((cljs.core.ifn_QMARK_(t))?cljs.core.apply.cljs$core$IFn$_invoke$arity$3(t,x,rest):t);\nreturn clojure.string.replace(s,/\\{(\\d+)\\}/,(function (p__42624){\nvar vec__42625 = p__42624;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42625,(0),null);\nvar n = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42625,(1),null);\nvar idx = tongue.core.parse_long(n);\nvar arg = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(args,(idx - (1)),[\"{Missing index \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(idx),\"}\"].join(''));\nreturn tongue.core.format_argument(dicts,locale,arg);\n}));\n}));\n\n/** @this {Function} */\n(tongue.core.translate.cljs$lang$applyTo = (function (seq42607){\nvar G__42608 = cljs.core.first(seq42607);\nvar seq42607__$1 = cljs.core.next(seq42607);\nvar G__42610 = cljs.core.first(seq42607__$1);\nvar seq42607__$2 = cljs.core.next(seq42607__$1);\nvar G__42611 = cljs.core.first(seq42607__$2);\nvar seq42607__$3 = cljs.core.next(seq42607__$2);\nvar G__42612 = cljs.core.first(seq42607__$3);\nvar seq42607__$4 = cljs.core.next(seq42607__$3);\nvar self__4805__auto__ = this;\nreturn self__4805__auto__.cljs$core$IFn$_invoke$arity$variadic(G__42608,G__42610,G__42611,G__42612,seq42607__$4);\n}));\n\n(tongue.core.translate.cljs$lang$maxFixedArity = (4));\n\ntongue.core.append_ns = (function tongue$core$append_ns(ns,segment){\nreturn [(cljs.core.truth_(ns)?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns),\".\"].join(''):null),cljs.core.str.cljs$core$IFn$_invoke$arity$1(segment)].join('');\n});\n/**\n * Collapses nested maps into namespaced keywords:\n * { :ns { :key 1 }} => { :ns/key 1 }\n * { :animal { :flying { :bird 420 }}} => { :animal.flying/bird 420 }\n */\ntongue.core.build_dict = (function tongue$core$build_dict(var_args){\nvar G__42638 = arguments.length;\nswitch (G__42638) {\ncase 1:\nreturn tongue.core.build_dict.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn tongue.core.build_dict.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(tongue.core.build_dict.cljs$core$IFn$_invoke$arity$1 = (function (dict){\nreturn tongue.core.build_dict.cljs$core$IFn$_invoke$arity$2(null,dict);\n}));\n\n(tongue.core.build_dict.cljs$core$IFn$_invoke$arity$2 = (function (ns,dict){\nreturn cljs.core.reduce_kv((function (aggr,key,value){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"tongue\",cljs.core.namespace(key))){\nif((ns == null)){\n} else {\nthrow (new Error([\"Assert failed: \",\":tongue/... keys can only be specified at top level\",\"\\n\",\"(nil? ns)\"].join('')));\n}\n\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(aggr,key,value);\n} else {\nif(cljs.core.map_QMARK_(value)){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aggr,tongue.core.build_dict.cljs$core$IFn$_invoke$arity$2(tongue.core.append_ns(ns,cljs.core.name(key)),value)], 0));\n} else {\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(aggr,cljs.core.keyword.cljs$core$IFn$_invoke$arity$2((function (){var or__4212__auto__ = ns;\nif(cljs.core.truth_(or__4212__auto__)){\nreturn or__4212__auto__;\n} else {\nreturn cljs.core.namespace(key);\n}\n})(),cljs.core.name(key)),value);\n\n}\n}\n}),cljs.core.PersistentArrayMap.EMPTY,dict);\n}));\n\n(tongue.core.build_dict.cljs$lang$maxFixedArity = 2);\n\ntongue.core.build_dicts = (function tongue$core$build_dicts(dicts){\nreturn cljs.core.reduce_kv((function (acc,lang,dict){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(acc,lang,((cljs.core.map_QMARK_(dict))?tongue.core.build_dict.cljs$core$IFn$_invoke$arity$1(dict):dict));\n}),cljs.core.PersistentArrayMap.EMPTY,dicts);\n});\n/**\n * Given dicts, builds translate function closed over these dicts:\n * \n *     (build-translate dicts) => ( [locale key & args] => string )\n */\ntongue.core.build_translate = (function tongue$core$build_translate(dicts){\n\nvar compiled_dicts = tongue.core.build_dicts(dicts);\nreturn (function() {\nvar G__42700 = null;\nvar G__42700__2 = (function (locale,key){\nreturn tongue.core.translate.cljs$core$IFn$_invoke$arity$3(compiled_dicts,locale,key);\n});\nvar G__42700__3 = (function (locale,key,x){\nreturn tongue.core.translate.cljs$core$IFn$_invoke$arity$4(compiled_dicts,locale,key,x);\n});\nvar G__42700__4 = (function() { \nvar G__42701__delegate = function (locale,key,x,args){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(tongue.core.translate,compiled_dicts,locale,key,x,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([args], 0));\n};\nvar G__42701 = function (locale,key,x,var_args){\nvar args = null;\nif (arguments.length > 3) {\nvar G__42702__i = 0, G__42702__a = new Array(arguments.length -  3);\nwhile (G__42702__i < G__42702__a.length) {G__42702__a[G__42702__i] = arguments[G__42702__i + 3]; ++G__42702__i;}\n  args = new cljs.core.IndexedSeq(G__42702__a,0,null);\n} \nreturn G__42701__delegate.call(this,locale,key,x,args);};\nG__42701.cljs$lang$maxFixedArity = 3;\nG__42701.cljs$lang$applyTo = (function (arglist__42704){\nvar locale = cljs.core.first(arglist__42704);\narglist__42704 = cljs.core.next(arglist__42704);\nvar key = cljs.core.first(arglist__42704);\narglist__42704 = cljs.core.next(arglist__42704);\nvar x = cljs.core.first(arglist__42704);\nvar args = cljs.core.rest(arglist__42704);\nreturn G__42701__delegate(locale,key,x,args);\n});\nG__42701.cljs$core$IFn$_invoke$arity$variadic = G__42701__delegate;\nreturn G__42701;\n})()\n;\nG__42700 = function(locale,key,x,var_args){\nvar args = var_args;\nswitch(arguments.length){\ncase 2:\nreturn G__42700__2.call(this,locale,key);\ncase 3:\nreturn G__42700__3.call(this,locale,key,x);\ndefault:\nvar G__42706 = null;\nif (arguments.length > 3) {\nvar G__42707__i = 0, G__42707__a = new Array(arguments.length -  3);\nwhile (G__42707__i < G__42707__a.length) {G__42707__a[G__42707__i] = arguments[G__42707__i + 3]; ++G__42707__i;}\nG__42706 = new cljs.core.IndexedSeq(G__42707__a,0,null);\n}\nreturn G__42700__4.cljs$core$IFn$_invoke$arity$variadic(locale,key,x, G__42706);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nG__42700.cljs$lang$maxFixedArity = 3;\nG__42700.cljs$lang$applyTo = G__42700__4.cljs$lang$applyTo;\nG__42700.cljs$core$IFn$_invoke$arity$2 = G__42700__2;\nG__42700.cljs$core$IFn$_invoke$arity$3 = G__42700__3;\nG__42700.cljs$core$IFn$_invoke$arity$variadic = G__42700__4.cljs$core$IFn$_invoke$arity$variadic;\nreturn G__42700;\n})()\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","tongue/core.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",16],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$tongue.core","~:reader-aliases",["^ "],"~:op","~:ns","~:imports",null,"~:requires",["^ ","~$tongue.number","^L","~$cljs.core","^M","~$tongue.macro","^N","~$goog","^O","~$inst","~$tongue.inst","~$number","^L","^Q","^Q","~$str","~$clojure.string","~$macro","^N","^T","^T"],"~:seen",["^D",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^M","^M","^N","^N","^U","^N"],"~:form",["~#list",["~$ns","^F",["^[",["^W",["^T","~:as","^S"],["^Q","^11","^P"],["^L","^11","^R"],["^N","^11","^U"]]]]],"~:flags",["^ ","^W",["^D",[]]],"~:js-deps",["^ "],"~:deps",["^O","^M","^T","^Q","^L","^N"]],"^I","^F","~:resource-id",["~:shadow.build.classpath/resource","tongue/core.cljc"],"~:compiled-at",1648129705794,"^G",["^ ","^L","^L","^M","^M","^N","^N","^O","^O","^P","^Q","^R","^L","^Q","^Q","^S","^T","^U","^N","^T","^T"],"~:resource-name","tongue/core.cljc","~:warnings",[],"~:source","(ns tongue.core\n  (:require\n    [clojure.string :as str]\n    [tongue.inst :as inst]\n    [tongue.number :as number]\n    [tongue.macro :as macro]\n    #?(:clj [clojure.future :refer :all])\n    #?(:clj [clojure.spec.alpha :as spec])))\n\n\n(def inst-formatter inst/formatter)\n\n\n(def format-inst-iso (inst-formatter \"{year}-{month-numeric-padded}-{day-padded}T{hour24-padded}:{minutes-padded}:{seconds-padded}\" {}))\n\n\n(def number-formatter number/formatter)\n\n\n(defn- parse-long [s]\n  #?(:cljs (js/parseInt s)\n     :clj  (Long/parseLong s)))\n\n\n(defonce ^:private tags-cache (volatile! {}))\n\n\n(defn- tags\n  \":az-Arab-IR => (:az-Arab-IR :az-Arab :az), cached\"\n  [locale]\n  (or (@tags-cache locale)\n      (let [tags (loop [subtags  (str/split (name locale) #\"-\")\n                        last-tag nil\n                        tags     ()]\n                   (if-some [subtag (first subtags)]\n                     (let [tag (str last-tag (when last-tag \"-\") subtag)]\n                       (recur (next subtags) tag (conj tags (keyword tag))))\n                     tags))]\n        (vswap! tags-cache assoc locale tags)\n        tags)))\n\n\n(defn- lookup-template-for-locale [dicts locale key]\n  (when locale\n    (loop [tags (tags locale)]\n      (when-some [tag (first tags)]\n        (or (get (get dicts tag) key)\n            (recur (next tags)))))))\n\n\n(defn- lookup-template [dicts locale key]\n  (or (lookup-template-for-locale dicts locale key)\n      (lookup-template-for-locale dicts (:tongue/fallback dicts) key)\n      (str \"{Missing key \" key \"}\")))\n\n\n(defn- escape-re-subst [str]\n  #?(:clj (java.util.regex.Matcher/quoteReplacement str)\n     :cljs (str/replace str #\"\\$\" \"$$$$\")))\n\n\n(defn- format-argument [dicts locale x]\n  (cond\n    (number? x) (let [formatter (or (lookup-template-for-locale dicts locale :tongue/format-number)\n                                    str)]\n                  (formatter x))\n    (inst? x)   (let [formatter (or (lookup-template-for-locale dicts locale :tongue/format-inst)\n                                    format-inst-iso)]\n                  (formatter x))\n    :else       (str x)))\n\n\n(macro/with-spec\n  (spec/def ::locale simple-keyword?)\n  (spec/def ::key keyword?))\n\n\n(defn- translate\n  ([dicts locale key]\n    (macro/with-spec\n      (spec/assert ::locale locale)\n      (spec/assert ::key key))\n    (let [t (lookup-template dicts locale key)]\n      (if (ifn? t) (t) t)))\n  ([dicts locale key x]\n    (macro/with-spec\n      (spec/assert ::locale locale)\n      (spec/assert ::key key))\n    (let [t (lookup-template dicts locale key)\n          s (if (ifn? t) (t x) t)]\n      (if (map? x)\n        (str/replace s #\"\\{(\\w+)\\}\"\n                     (fn [[_ k]]\n                       (format-argument dicts locale (get x (keyword k)))))\n        (str/replace s #\"\\{1\\}\"\n                     (escape-re-subst (format-argument dicts locale x))))))\n  ([dicts locale key x & rest]\n    (macro/with-spec\n      (spec/assert ::locale locale)\n      (spec/assert ::key key))\n    (let [args (cons x rest)\n          t    (lookup-template dicts locale key)\n          s    (if (ifn? t) (apply t x rest) t)]\n      (str/replace s #\"\\{(\\d+)\\}\"\n                   (fn [[_ n]]\n                     (let [idx (parse-long n)\n                           arg (nth args (dec idx)\n                                    (str \"{Missing index \" idx \"}\"))]\n                       (format-argument dicts locale arg)))))))\n\n\n(defn- append-ns [ns segment]\n  (str (when ns (str ns \".\"))\n       segment))\n\n\n(defn- build-dict\n  \"Collapses nested maps into namespaced keywords:\n   { :ns { :key 1 }} => { :ns/key 1 }\n   { :animal { :flying { :bird 420 }}} => { :animal.flying/bird 420 }\"\n  ([dict] (build-dict nil dict))\n  ([ns dict]\n    (reduce-kv\n      (fn [aggr key value]\n        (cond\n          (= \"tongue\" (namespace key))\n          (do\n            (assert (nil? ns) \":tongue/... keys can only be specified at top level\")\n            (assoc aggr key value))\n\n          (map? value)\n          (merge aggr (build-dict (append-ns ns (name key)) value))\n\n          :else\n          (assoc aggr (keyword (or ns (namespace key)) (name key)) value)))\n      {} dict)))\n\n\n(defn- build-dicts [dicts]\n  (reduce-kv\n    (fn [acc lang dict]\n      (assoc acc lang (if (map? dict) (build-dict dict) dict)))\n    {} dicts))\n\n\n(macro/with-spec\n  (spec/def ::template (spec/or :str string?\n                                :fn ifn?))\n\n  (spec/def :tongue/format-number ifn?)\n  (spec/def :tongue/format-inst ifn?)\n\n  (spec/def ::dict (spec/and\n                     (spec/keys :opt [:tongue/format-number :tongue/format-inst])\n                     (spec/map-of keyword? (spec/or :plain  ::template\n                                                    :nested (spec/map-of keyword? ::template)))))\n\n  (spec/def :tongue/fallback keyword?)\n  (spec/def ::dicts (spec/and\n                      (spec/keys :opt [:tongue/fallback])\n                      (spec/conformer #(dissoc % :tongue/fallback))\n                      (spec/map-of keyword? ::dict))))\n\n\n(defn build-translate\n  \"Given dicts, builds translate function closed over these dicts:\n\n       (build-translate dicts) => ( [locale key & args] => string )\"\n  [dicts]\n  (macro/with-spec\n    (spec/assert ::dicts dicts))\n  (let [compiled-dicts (build-dicts dicts)]\n    (fn\n      ([locale key]   (translate compiled-dicts locale key))\n      ([locale key x] (translate compiled-dicts locale key x))\n      ([locale key x & args]\n        (apply translate compiled-dicts locale key x args)))))\n","~:reader-features",["^D",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["tongue.core/inst-formatter","tongue.inst/formatter","tongue.core/format-inst-iso","G__42532","G__42533","tongue.core/number-formatter","tongue.number/formatter","tongue.core/parse-long","s","js/parseInt","js/tongue","js/tongue.core","js/tongue.core.tags-cache","tongue.core/tags-cache","cljs.core/volatile!","tongue.core/tags","locale","or__4212__auto__","fexpr__42541","cljs.core/deref","tags","subtags","clojure.string.split","cljs.core/name","last-tag","temp__5755__auto__","subtag","cljs.core/first","tag","cljs.core/next","cljs.core.conj","cljs.core.keyword","cljs.core.assoc","tongue.core/lookup-template-for-locale","dicts","key","temp__5757__auto__","cljs.core.get","tongue.core/lookup-template","tongue.core/escape-re-subst","str","clojure.string/replace","tongue.core/format-argument","x","formatter","cljs.core/str","cljs.core/inst?","var_args","G__42614","tongue.core/translate","args-arr__4839__auto__","len__4818__auto__","i__4819__auto__","argseq__4840__auto__","cljs.core/IndexedSeq","seq42607","G__42608","G__42610","G__42611","G__42612","self__4805__auto__","t","cljs.core/ifn?","cljs.core/map?","p__42619","vec__42620","cljs.core.nth","_","k","rest","args","cljs.core/cons","cljs.core.apply","p__42624","vec__42625","n","idx","arg","tongue.core/append-ns","ns","segment","G__42638","tongue.core/build-dict","js/Error","dict","tongue.core.build_dict","cljs.core/reduce-kv","aggr","value","cljs.core._EQ_","cljs.core/namespace","cljs.core.merge","tongue.core/build-dicts","acc","lang","tongue.core/build-translate","compiled-dicts","tongue.core.translate"]],"~:used-vars",["^D",["~$tongue.inst/formatter","~$cljs.core/keyword","~$cljs.core/str","~$tongue.core/tags-cache","~$clojure.string/split","~$tongue.core/parse-long","~$cljs.core/=","~$tongue.core/lookup-template","~$cljs.core/ifn?","~$tongue.number/formatter","~$js/tongue.core.tags-cache","~$cljs.core/IndexedSeq","~$cljs.core/-deref","~$tongue.core/escape-re-subst","~$tongue.core/lookup-template-for-locale","~$cljs.core/deref","~$tongue.core/translate","~$cljs.core/apply","~$tongue.core/tags","~$tongue.core/build-dict","~$tongue.core/format-argument","~$cljs.core/map?","~$cljs.core/conj","~$cljs.core/inst?","~$cljs.core/namespace","~$cljs.core/volatile!","~$js/parseInt","~$cljs.core/get","~$js/tongue.core","~$js/tongue","~$cljs.core/-vreset!","~$tongue.core/inst-formatter","~$cljs.core/nth","~$clojure.string/replace","~$tongue.core/build-translate","~$cljs.core/next","~$tongue.core/build-dicts","~$cljs.core/cons","~$cljs.core/assoc","~$tongue.core/number-formatter","~$cljs.core/reduce-kv","~$cljs.core/first","~$tongue.core/format-inst-iso","~$cljs.core/name","~$cljs.core/merge","~$js/Error","~$tongue.core/append-ns"]]],"~:cache-keys",["~#cmap",[["^16","goog/dom/tagname.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^D",[]],"~:deps-syms",["^O","~$goog.dom.HtmlElement"]]],["^16","goog/math/math.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2G",["^ ","^2H",null,"^2I",["^D",[]],"^2J",["^O","~$goog.array","~$goog.asserts"]]],["^16","goog/html/trustedtypes.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2G",["^ ","^2H",null,"^2I",["^D",[]],"^2J",["^O"]]],["^16","goog/labs/useragent/browser.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2G",["^ ","^2H",null,"^2I",["^D",[]],"^2J",["^O","^2L","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^16","goog/html/safeurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2G",["^ ","^2H",null,"^2I",["^D",[]],"^2J",["^O","^2M","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2P"]]],["^16","goog/array/array.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2G",["^ ","^2H",null,"^2I",["^D",[]],"^2J",["^O","^2M"]]],["^16","goog/debug/error.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2G",["^ ","^2H",null,"^2I",["^D",[]],"^2J",["^O"]]],["^16","goog/dom/nodetype.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2G",["^ ","^2H",null,"^2I",["^D",[]],"^2J",["^O"]]],["^16","goog/string/typedstring.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2G",["^ ","^2H",null,"^2I",["^D",[]],"^2J",["^O"]]],["^16","goog/object/object.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2G",["^ ","^2H",null,"^2I",["^D",[]],"^2J",["^O"]]],["^16","goog/dom/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2G",["^ ","^2H",null,"^2I",["^D",[]],"^2J",["^O","^2M"]]],"~:SHADOW-TIMESTAMP",[1647940543000,1647940543000,1633031471000],["^16","goog/math/long.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2G",["^ ","^2H",null,"^2I",["^D",[]],"^2J",["^O","^2M","~$goog.reflect"]]],["^16","goog/html/trustedresourceurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2G",["^ ","^2H",null,"^2I",["^D",[]],"^2J",["^O","^2M","~$goog.fs.blob","^2Q","~$goog.html.SafeScript","~$goog.html.trustedtypes","^2S","^2T","^2U","^2V"]]],["^16","goog/string/internal.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2G",["^ ","^2H",null,"^2I",["^D",[]],"^2J",["^O"]]],["^16","goog/functions/functions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2G",["^ ","^2H",null,"^2I",["^D",[]],"^2J",["^O"]]],["^16","goog/html/safestyle.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2G",["^ ","^2H",null,"^2I",["^D",[]],"^2J",["^O","^2L","^2M","~$goog.html.SafeUrl","^2U","^2V","^2P"]]],["^16","goog/dom/safe.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2G",["^ ","^2H",null,"^2I",["^D",[]],"^2J",["^O","^2M","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^2Z","~$goog.html.SafeStyle","^30","^2R","~$goog.html.uncheckedconversions","^2U","^2P"]]],["^16","goog/structs/map.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2G",["^ ","^2H",null,"^2I",["^D",[]],"^2J",["^O","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^16","goog/html/safehtml.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2G",["^ ","^2H",null,"^2I",["^D",[]],"^2J",["^O","^2L","^2M","~$goog.dom.TagName","~$goog.dom.tags","^2Z","^34","~$goog.html.SafeStyleSheet","^30","^2R","^2[","^2S","^2T","~$goog.labs.userAgent.browser","^2O","^2U","^2V","^2P"]]],["^16","tongue/macro.cljc"],["46bc54fb216e4aa9239282cf693179c888d36a5a","^2G",["^ ","^2H",null,"^2I",["^D",[]],"^2J",["^O","^M"]]],["^16","goog/dom/tags.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2G",["^ ","^2H",null,"^2I",["^D",[]],"^2J",["^O","^2O"]]],["^16","goog/fs/blob.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2G",["^ ","^2H",null,"^2I",["^D",[]],"^2J",["^O","^2L"]]],["^16","goog/asserts/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2G",["^ ","^2H",null,"^2I",["^D",[]],"^2J",["^O","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^16","tongue/inst.cljc"],["46bc54fb216e4aa9239282cf693179c888d36a5a","^2G",["^ ","^2H",null,"^2I",["^D",[]],"^2J",["^O","^M","^T","^N"]]],["^16","goog/uri/uri.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2G",["^ ","^2H",null,"^2I",["^D",[]],"^2J",["^O","^2L","^2M","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^16","goog/i18n/bidi.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2G",["^ ","^2H",null,"^2I",["^D",[]],"^2J",["^O"]]],["^16","tongue/core.cljc"],["46bc54fb216e4aa9239282cf693179c888d36a5a","^2G",["^ ","^2H",null,"^2I",["^D",[]],"^2J",["^O","^M","^T","^Q","^L","^N"]]],["^16","goog/fs/url.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2G",["^ ","^2H",null,"^2I",["^D",[]],"^2J",["^O"]]],["^16","goog/base.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2G",["^ ","^2H",null,"^2I",["^D",[]],"^2J",[]]],["^16","goog/structs/structs.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2G",["^ ","^2H",null,"^2I",["^D",[]],"^2J",["^O","^2L","^2O"]]],["^16","clojure/string.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^2G",["^ ","^2H",null,"^2I",["^D",[]],"^2J",["^O","^M","^3>","~$goog.string.StringBuffer"]]],["^16","tongue/number.cljc"],["46bc54fb216e4aa9239282cf693179c888d36a5a","^2G",["^ ","^2H",null,"^2I",["^D",[]],"^2J",["^O","^M","^T","^N"]]],["^16","goog/string/string.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2G",["^ ","^2H",null,"^2I",["^D",[]],"^2J",["^O","~$goog.dom.safe","^35","^2U","^2P"]]],["^16","goog/reflect/reflect.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2G",["^ ","^2H",null,"^2I",["^D",[]],"^2J",["^O"]]],["^16","goog/labs/useragent/util.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2G",["^ ","^2H",null,"^2I",["^D",[]],"^2J",["^O","^2P"]]],["^16","goog/string/stringbuffer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2G",["^ ","^2H",null,"^2I",["^D",[]],"^2J",["^O"]]],["^16","goog/iter/iter.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2G",["^ ","^2H",null,"^2I",["^D",[]],"^2J",["^O","^2L","^2M","^32","~$goog.math"]]],["^16","goog/html/uncheckedconversions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2G",["^ ","^2H",null,"^2I",["^D",[]],"^2J",["^O","^2M","^33","^2Z","^34","^3:","^30","^2R","^2U","^2P","^2S"]]],["^16","goog/dom/htmlelement.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2G",["^ ","^2H",null,"^2I",["^D",[]],"^2J",["^O"]]],["^16","cljs/core.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^2G",["^ ","^2H",null,"^2I",["^D",[]],"^2J",["^O","~$goog.math.Long","~$goog.math.Integer","^3>","^2O","^2L","~$goog.Uri","^3D"]]],["^16","goog/html/safescript.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2G",["^ ","^2H",null,"^2I",["^D",[]],"^2J",["^O","^2U","^2V","^2[","^2M"]]],["^16","goog/html/safestylesheet.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2G",["^ ","^2H",null,"^2I",["^D",[]],"^2J",["^O","^2U","^34","^2V","^2L","^2O","^2M","^2P"]]],["^16","goog/math/integer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2G",["^ ","^2H",null,"^2I",["^D",[]],"^2J",["^O","^2X"]]],["^16","goog/uri/utils.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2G",["^ ","^2H",null,"^2I",["^D",[]],"^2J",["^O","^2M","^3>"]]],["^16","goog/string/const.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2G",["^ ","^2H",null,"^2I",["^D",[]],"^2J",["^O","^2M","^2V"]]]]],"~:clj-info",["^ ","jar:file:/Users/mehdi/.m2/repository/tongue/tongue/0.2.7/tongue-0.2.7.jar!/tongue/macro.cljc",1635148719000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/core.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/env.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/js_deps.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/inspect.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/reader_types.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/binaryage/devtools/1.0.3/devtools-1.0.3.jar!/devtools/defaults.clj",1633351665000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/passes.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/default_data_readers.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/errors.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map/base64_vlq.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/passes/and_or.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1633011066000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/tagged_literals.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/instant.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1633011066000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/compiler.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/impl.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1633011066000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/util.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1633011066000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map/base64.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1633011066000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1633011066000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/data.json/2.4.0/data.json-2.4.0.jar!/clojure/data/json.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/externs.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1633011066000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","tongue/core.cljc","^7",1,"^8",5,"^9",1,"^:",16],"^;",["^ ","^<","^=","^>","^?","^@","^A"],"^B",null,"^C",["^D",[]],"^E","^F","^G",["^ "],"^J",null,"^K",["^ ","^L","^L","^M","^M","^N","^N","^O","^O","^P","^Q","^R","^L","^Q","^Q","^S","^T","^U","^N","^T","^T"],"^V",["^D",["^W"]],"~:shadow/js-access-global",["^D",["Error","parseInt"]],"^X",null,"~:defs",["^ ","~$build-dict",["^ ","~:protocol-inline",null,"^5",["^ ","~:private",true,"^6","tongue/core.cljc","^:",18,"~:top-fn",["^ ","~:variadic?",false,"~:fixed-arity",2,"~:max-fixed-arity",2,"~:method-params",[["~$dict"],["^10","^4H"]],"~:arglists",["^[",[["^4H"],["^10","^4H"]]],"~:arglists-meta",["^[",[null,null]]],"^8",8,"^7",117,"^9",117,"^4I",["^[",["~$quote",["^[",[["^4H"],["^10","^4H"]]]]],"~:doc","Collapses nested maps into namespaced keywords:\n   { :ns { :key 1 }} => { :ns/key 1 }\n   { :animal { :flying { :bird 420 }}} => { :animal.flying/bird 420 }"],"^4B",true,"^E","^1U","^6","tongue/core.cljc","^:",18,"^4C",["^ ","^4D",false,"^4E",2,"^4F",2,"^4G",[["^4H"],["^10","^4H"]],"^4I",["^[",[["^4H"],["^10","^4H"]]],"^4J",["^[",[null,null]]],"^4G",[["^4H"],["^10","^4H"]],"~:protocol-impl",null,"^4E",2,"^4J",["^[",[null,null]],"^8",1,"^4D",false,"~:methods",[["^ ","^4E",1,"^4D",false,"~:tag","~$any"],["^ ","^4E",2,"^4D",false,"^4O",["^D",[null,"^4P"]]]],"^7",117,"^9",117,"^4F",2,"~:fn-var",true,"^4I",["^[",[["^4H"],["^10","^4H"]]],"^4L","Collapses nested maps into namespaced keywords:\n   { :ns { :key 1 }} => { :ns/key 1 }\n   { :animal { :flying { :bird 420 }}} => { :animal.flying/bird 420 }"],"~$format-argument",["^ ","^4A",null,"^5",["^ ","^6","tongue/core.cljc","^7",62,"^8",8,"^9",62,"^:",23,"^4B",true,"^4I",["^[",["^4K",["^[",[["~$dicts","~$locale","~$x"]]]]]],"^4B",true,"^E","^1V","^6","tongue/core.cljc","^:",23,"^4G",["^[",[["^4S","^4T","~$x"]]],"^4M",null,"^4J",["^[",[null,null]],"^8",1,"^4D",false,"^7",62,"~:ret-tag",["^D",["^4P","~$string"]],"^9",62,"^4F",3,"^4Q",true,"^4I",["^[",["^4K",["^[",[["^4S","^4T","~$x"]]]]]],"~$append-ns",["^ ","^4A",null,"^5",["^ ","^6","tongue/core.cljc","^7",112,"^8",8,"^9",112,"^:",17,"^4B",true,"^4I",["^[",["^4K",["^[",[["^10","~$segment"]]]]]],"^4B",true,"^E","^2D","^6","tongue/core.cljc","^:",17,"^4G",["^[",[["^10","^4X"]]],"^4M",null,"^4J",["^[",[null,null]],"^8",1,"^4D",false,"^7",112,"^4U","^4V","^9",112,"^4F",2,"^4Q",true,"^4I",["^[",["^4K",["^[",[["^10","^4X"]]]]]],"~$tags",["^ ","^4A",null,"^5",["^ ","^6","tongue/core.cljc","^7",28,"^8",8,"^9",28,"^:",12,"^4B",true,"^4I",["^[",["^4K",["^[",[["^4T"]]]]],"^4L",":az-Arab-IR => (:az-Arab-IR :az-Arab :az), cached"],"^4B",true,"^E","^1T","^6","tongue/core.cljc","^:",12,"^4G",["^[",[["^4T"]]],"^4M",null,"^4J",["^[",[null,null]],"^8",1,"^4D",false,"^7",28,"^4U",["^D",["~$clj","~$cljs.core/IList","^4P"]],"^9",28,"^4F",1,"^4Q",true,"^4I",["^[",["^4K",["^[",[["^4T"]]]]],"^4L",":az-Arab-IR => (:az-Arab-IR :az-Arab :az), cached"],"~$build-translate",["^ ","^4A",null,"^5",["^ ","^6","tongue/core.cljc","^7",165,"^8",7,"^9",165,"^:",22,"^4I",["^[",["^4K",["^[",[["^4S"]]]]],"^4L","Given dicts, builds translate function closed over these dicts:\n\n       (build-translate dicts) => ( [locale key & args] => string )"],"^E","^28","^6","tongue/core.cljc","^:",22,"^4G",["^[",[["^4S"]]],"^4M",null,"^4J",["^[",[null,null]],"^8",1,"^4D",false,"^7",165,"^4U","~$function","^9",165,"^4F",1,"^4Q",true,"^4I",["^[",["^4K",["^[",[["^4S"]]]]],"^4L","Given dicts, builds translate function closed over these dicts:\n\n       (build-translate dicts) => ( [locale key & args] => string )"],"~$inst-formatter",["^ ","^E","^25","^6","tongue/core.cljc","^7",11,"^8",1,"^9",11,"^:",20,"^5",["^ ","^6","tongue/core.cljc","^7",11,"^8",6,"^9",11,"^:",20]],"~$number-formatter",["^ ","^E","^2=","^6","tongue/core.cljc","^7",17,"^8",1,"^9",17,"^:",22,"^5",["^ ","^6","tongue/core.cljc","^7",17,"^8",6,"^9",17,"^:",22]],"~$format-inst-iso",["^ ","^E","^2@","^6","tongue/core.cljc","^7",14,"^8",1,"^9",14,"^:",21,"^5",["^ ","^6","tongue/core.cljc","^7",14,"^8",6,"^9",14,"^:",21],"^4O","^4P"],"~$tags-cache",["^ ","^5",["^ ","^6","tongue/core.cljc","^7",25,"^8",20,"^9",25,"^:",30,"^4B",true],"^4B",true,"^E","^1E","^6","tongue/core.cljc","^:",30,"^8",1,"^7",25,"^9",25,"^4O","~$cljs.core/Volatile"],"~$build-dicts",["^ ","^4A",null,"^5",["^ ","^6","tongue/core.cljc","^7",139,"^8",8,"^9",139,"^:",19,"^4B",true,"^4I",["^[",["^4K",["^[",[["^4S"]]]]]],"^4B",true,"^E","^2:","^6","tongue/core.cljc","^:",19,"^4G",["^[",[["^4S"]]],"^4M",null,"^4J",["^[",[null,null]],"^8",1,"^4D",false,"^7",139,"^4U",["^D",[null,"^4P"]],"^9",139,"^4F",1,"^4Q",true,"^4I",["^[",["^4K",["^[",[["^4S"]]]]]],"~$lookup-template",["^ ","^4A",null,"^5",["^ ","^6","tongue/core.cljc","^7",51,"^8",8,"^9",51,"^:",23,"^4B",true,"^4I",["^[",["^4K",["^[",[["^4S","^4T","~$key"]]]]]],"^4B",true,"^E","^1I","^6","tongue/core.cljc","^:",23,"^4G",["^[",[["^4S","^4T","^59"]]],"^4M",null,"^4J",["^[",[null,null]],"^8",1,"^4D",false,"^7",51,"^4U",["^D",["^4P","^4V"]],"^9",51,"^4F",3,"^4Q",true,"^4I",["^[",["^4K",["^[",[["^4S","^4T","^59"]]]]]],"~$translate",["^ ","^4A",null,"^5",["^ ","^6","tongue/core.cljc","^7",78,"^8",8,"^9",78,"^:",17,"^4B",true,"^4I",["^[",["^4K",["^[",[["^4S","^4T","^59"],["^4S","^4T","^59","~$x"],["^4S","^4T","^59","~$x","~$&","~$rest"]]]]],"^4C",["^ ","^4D",true,"^4E",4,"^4F",4,"^4G",[["^4S","^4T","^59"],["^4S","^4T","^59","~$x"]],"^4I",["^[",[["^4S","^4T","^59"],["^4S","^4T","^59","~$x"],["^4S","^4T","^59","~$x","~$&","^5;"]]],"^4J",["^[",[null,null,null]]]],"^4B",true,"^E","^1R","^6","tongue/core.cljc","^:",17,"^4C",["^ ","^4D",true,"^4E",4,"^4F",4,"^4G",[["^4S","^4T","^59"],["^4S","^4T","^59","~$x"]],"^4I",["^[",[["^4S","^4T","^59"],["^4S","^4T","^59","~$x"],["^4S","^4T","^59","~$x","~$&","^5;"]]],"^4J",["^[",[null,null,null]]],"^4G",[["^4S","^4T","^59"],["^4S","^4T","^59","~$x"]],"^4M",null,"^4E",4,"^4J",["^[",[null,null,null]],"^8",1,"^4D",true,"^4N",[["^ ","^4E",3,"^4D",false,"^4O",["^D",["^4P","^4V"]]],["^ ","^4E",4,"^4D",false,"^4O","^4V"],["^ ","^4E",4,"^4D",true,"^4O","^4V"]],"^7",78,"^9",78,"^4F",4,"^4Q",true,"^4I",["^[",[["^4S","^4T","^59"],["^4S","^4T","^59","~$x"],["^4S","^4T","^59","~$x","~$&","^5;"]]]],"~$parse-long",["^ ","^4A",null,"^5",["^ ","^6","tongue/core.cljc","^7",20,"^8",8,"^9",20,"^:",18,"^4B",true,"^4I",["^[",["^4K",["^[",[["~$s"]]]]]],"^4B",true,"^E","^1G","^6","tongue/core.cljc","^:",18,"^4G",["^[",[["~$s"]]],"^4M",null,"^4J",["^[",[null,null]],"^8",1,"^4D",false,"^7",20,"^4U","~$js","^9",20,"^4F",1,"^4Q",true,"^4I",["^[",["^4K",["^[",[["~$s"]]]]]],"~$escape-re-subst",["^ ","^4A",null,"^5",["^ ","^6","tongue/core.cljc","^7",57,"^8",8,"^9",57,"^:",23,"^4B",true,"^4I",["^[",["^4K",["^[",[["^S"]]]]]],"^4B",true,"^E","^1O","^6","tongue/core.cljc","^:",23,"^4G",["^[",[["^S"]]],"^4M",null,"^4J",["^[",[null,null]],"^8",1,"^4D",false,"^7",57,"^4U","^4V","^9",57,"^4F",1,"^4Q",true,"^4I",["^[",["^4K",["^[",[["^S"]]]]]],"~$lookup-template-for-locale",["^ ","^4A",null,"^5",["^ ","^6","tongue/core.cljc","^7",43,"^8",8,"^9",43,"^:",34,"^4B",true,"^4I",["^[",["^4K",["^[",[["^4S","^4T","^59"]]]]]],"^4B",true,"^E","^1P","^6","tongue/core.cljc","^:",34,"^4G",["^[",[["^4S","^4T","^59"]]],"^4M",null,"^4J",["^[",[null,null]],"^8",1,"^4D",false,"^7",43,"^4U",["^D",["^4P","~$clj-nil"]],"^9",43,"^4F",3,"^4Q",true,"^4I",["^[",["^4K",["^[",[["^4S","^4T","^59"]]]]]]],"^Y",["^ ","^M","^M","^N","^N","^U","^N"],"~:cljs.analyzer/constants",["^ ","^V",["^D",["~:tongue/format-number","~:else","~:tongue/fallback","~:tongue/format-inst"]],"~:order",["^5D","^5B","^5E","^5C"]],"^12",["^ ","^W",["^D",[]]],"^13",["^ "],"^14",["^O","^M","^T","^Q","^L","^N"]],"^I","^F","~:ns-specs",["^ "],"~:ns-spec-vars",["^D",[]],"~:compiler-options",["^2F",[["^5I","~:static-fns"],true,["^5I","~:shadow-tweaks"],null,["^5I","~:source-map-inline"],null,["^5I","~:elide-asserts"],false,["^5I","~:optimize-constants"],null,["^5I","^19"],null,["^5I","~:external-config"],null,["^5I","~:tooling-config"],null,["^5I","~:emit-constants"],null,["^5I","~:load-tests"],null,["^5I","~:form-size-threshold"],null,["^5I","~:data-readers"],null,["^5I","~:infer-externs"],"~:auto",["^5I","^1;"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^5I","~:fn-invoke-direct"],null,["^5I","~:source-map"],"/dev/null"]]]