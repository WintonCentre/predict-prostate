["^ ","~:output",["^ ","~:js","goog.provide('garden.units');\ngarden.units.length_units = cljs.core.PersistentHashSet.createAsIfByAssoc([new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560),new cljs.core.Keyword(null,\"pt\",\"pt\",556460867),new cljs.core.Keyword(null,\"px\",\"px\",281329899),new cljs.core.Keyword(null,\"pc\",\"pc\",512913453),cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(\"%\"),new cljs.core.Keyword(null,\"cm\",\"cm\",540591536),new cljs.core.Keyword(null,\"in\",\"in\",-1531184865)]);\ngarden.units.angular_units = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"deg\",\"deg\",-681556081),null,new cljs.core.Keyword(null,\"turn\",\"turn\",75759344),null,new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012),null,new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229),null], null), null);\ngarden.units.time_units = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"s\",\"s\",1705939918),null,new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733),null], null), null);\ngarden.units.frequency_units = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466),null,new cljs.core.Keyword(null,\"Hz\",\"Hz\",-1958732916),null], null), null);\ngarden.units.resolution_units = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"dppx\",\"dppx\",1920508843),null,new cljs.core.Keyword(null,\"dpcm\",\"dpcm\",-1187601236),null,new cljs.core.Keyword(null,\"dpi\",\"dpi\",-986162832),null], null), null);\n/**\n * True if x is of type CSSUnit.\n */\ngarden.units.unit_QMARK_ = (function garden$units$unit_QMARK_(x){\nreturn (x instanceof garden.types.CSSUnit);\n});\ngarden.units.length_QMARK_ = (function garden$units$length_QMARK_(x){\nreturn ((garden.units.unit_QMARK_(x)) && (cljs.core.contains_QMARK_(garden.units.length_units,new cljs.core.Keyword(null,\"unit\",\"unit\",375175175).cljs$core$IFn$_invoke$arity$1(x))));\n});\ngarden.units.angle_QMARK_ = (function garden$units$angle_QMARK_(x){\nreturn ((garden.units.unit_QMARK_(x)) && (cljs.core.contains_QMARK_(garden.units.angular_units,new cljs.core.Keyword(null,\"unit\",\"unit\",375175175).cljs$core$IFn$_invoke$arity$1(x))));\n});\ngarden.units.time_QMARK_ = (function garden$units$time_QMARK_(x){\nreturn ((garden.units.unit_QMARK_(x)) && (cljs.core.contains_QMARK_(garden.units.time_units,new cljs.core.Keyword(null,\"unit\",\"unit\",375175175).cljs$core$IFn$_invoke$arity$1(x))));\n});\ngarden.units.frequency_QMARK_ = (function garden$units$frequency_QMARK_(x){\nreturn ((garden.units.unit_QMARK_(x)) && (cljs.core.contains_QMARK_(garden.units.frequency_units,new cljs.core.Keyword(null,\"unit\",\"unit\",375175175).cljs$core$IFn$_invoke$arity$1(x))));\n});\ngarden.units.resolution_QMARK_ = (function garden$units$resolution_QMARK_(x){\nreturn ((garden.units.unit_QMARK_(x)) && (cljs.core.contains_QMARK_(garden.units.resolution_units,new cljs.core.Keyword(null,\"unit\",\"unit\",375175175).cljs$core$IFn$_invoke$arity$1(x))));\n});\n/**\n * Map associating CSS unit types to their conversion values.\n */\ngarden.units.conversions = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560),new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466),new cljs.core.Keyword(null,\"pt\",\"pt\",556460867),new cljs.core.Keyword(null,\"px\",\"px\",281329899),new cljs.core.Keyword(null,\"rem\",\"rem\",-976484757),new cljs.core.Keyword(null,\"em\",\"em\",707813035),new cljs.core.Keyword(null,\"Hz\",\"Hz\",-1958732916),new cljs.core.Keyword(null,\"pc\",\"pc\",512913453),cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(\"%\"),new cljs.core.Keyword(null,\"s\",\"s\",1705939918),new cljs.core.Keyword(null,\"deg\",\"deg\",-681556081),new cljs.core.Keyword(null,\"cm\",\"cm\",540591536),new cljs.core.Keyword(null,\"turn\",\"turn\",75759344),new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733),new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012),new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229),new cljs.core.Keyword(null,\"in\",\"in\",-1531184865)],[new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560),(1),new cljs.core.Keyword(null,\"pt\",\"pt\",556460867),2.83464567,new cljs.core.Keyword(null,\"px\",\"px\",281329899),3.7795275591], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466),(1)], null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"pt\",\"pt\",556460867),(1),new cljs.core.Keyword(null,\"px\",\"px\",281329899),1.3333333333], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"px\",\"px\",281329899),(1)], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"rem\",\"rem\",-976484757),(1)], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"em\",\"em\",707813035),(1)], null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"Hz\",\"Hz\",-1958732916),(1),new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466),0.001], null),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560),4.23333333,new cljs.core.Keyword(null,\"pc\",\"pc\",512913453),(1),new cljs.core.Keyword(null,\"pt\",\"pt\",556460867),(12),new cljs.core.Keyword(null,\"px\",\"px\",281329899),(16)], null),cljs.core.PersistentArrayMap.createAsIfByAssoc([cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(\"%\"),(1)]),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733),(1000),new cljs.core.Keyword(null,\"s\",\"s\",1705939918),(1)], null),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"deg\",\"deg\",-681556081),(1),new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229),1.111111111,new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012),0.0174532925,new cljs.core.Keyword(null,\"turn\",\"turn\",75759344),0.002777778], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"cm\",\"cm\",540591536),(1),new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560),(10),new cljs.core.Keyword(null,\"pc\",\"pc\",512913453),2.36220473,new cljs.core.Keyword(null,\"pt\",\"pt\",556460867),28.3464567,new cljs.core.Keyword(null,\"px\",\"px\",281329899),37.795275591], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"turn\",\"turn\",75759344),(1)], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733),(1)], null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012),(1),new cljs.core.Keyword(null,\"turn\",\"turn\",75759344),0.159154943], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229),(1),new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012),63.661977237,new cljs.core.Keyword(null,\"turn\",\"turn\",75759344),0.0025], null),new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"cm\",\"cm\",540591536),2.54,new cljs.core.Keyword(null,\"in\",\"in\",-1531184865),(1),new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560),25.4,new cljs.core.Keyword(null,\"pc\",\"pc\",512913453),(6),new cljs.core.Keyword(null,\"pt\",\"pt\",556460867),(72),new cljs.core.Keyword(null,\"px\",\"px\",281329899),(96)], null)]);\n/**\n * True if unit is a key of convertable-units, false otherwise.\n */\ngarden.units.convertable_QMARK_ = (function garden$units$convertable_QMARK_(unit){\nreturn cljs.core.contains_QMARK_(garden.units.conversions,unit);\n});\n/**\n * Convert a Unit with :unit left to a Unit with :unit right if possible.\n */\ngarden.units.convert = (function garden$units$convert(p__45122,right){\nvar map__45123 = p__45122;\nvar map__45123__$1 = cljs.core.__destructure_map(map__45123);\nvar m = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45123__$1,new cljs.core.Keyword(null,\"magnitude\",\"magnitude\",1924274222));\nvar left = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45123__$1,new cljs.core.Keyword(null,\"unit\",\"unit\",375175175));\nif(cljs.core.every_QMARK_(garden.units.convertable_QMARK_,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [left,right], null))){\nvar v1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(garden.units.conversions,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [left,right], null));\nvar v2 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(garden.units.conversions,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [right,left], null));\nif(cljs.core.truth_(v1)){\nreturn (new garden.types.CSSUnit(right,(v1 * m),null,null,null));\n} else {\nif(cljs.core.truth_(v2)){\nreturn (new garden.types.CSSUnit(right,(m / v2),null,null,null));\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(garden.util.format.cljs$core$IFn$_invoke$arity$variadic(\"Can't convert %s to %s\",cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.name(left),cljs.core.name(right)], 0)),cljs.core.PersistentArrayMap.EMPTY);\n\n}\n}\n} else {\nvar x = cljs.core.first(cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(garden.units.convertable_QMARK_,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [left,right], null)));\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Inconvertible unit \",cljs.core.name(x)].join(''),cljs.core.PersistentArrayMap.EMPTY);\n}\n});\n/**\n * Regular expression for matching a CSS unit. The magnitude\n *           and unit are captured.\n */\ngarden.units.unit_re = /([+-]?\\d+(?:\\.?\\d+)?)(p[xtc]|in|[cm]m|%|r?em|ex|ch|v(?:[wh]|m(?:in|ax))|deg|g?rad|turn|m?s|k?Hz|dp(?:i|cm|px))/;\n/**\n * Read a `CSSUnit` object from the string `s`.\n */\ngarden.units.read_unit = (function garden$units$read_unit(s){\nvar temp__5753__auto__ = cljs.core.re_matches(garden.units.unit_re,s);\nif(cljs.core.truth_(temp__5753__auto__)){\nvar vec__45131 = temp__5753__auto__;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45131,(0),null);\nvar magnitude = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45131,(1),null);\nvar unit = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45131,(2),null);\nvar unit__$1 = cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(unit);\nvar magnitude__$1 = (cljs.core.truth_(magnitude)?cljs.reader.read_string.cljs$core$IFn$_invoke$arity$1(magnitude):(0));\nreturn (new garden.types.CSSUnit(unit__$1,magnitude__$1,null,null,null));\n} else {\nreturn null;\n}\n});\n/**\n * Creates a function for verifying the given unit type.\n */\ngarden.units.make_unit_predicate = (function garden$units$make_unit_predicate(unit){\nreturn (function (x){\nreturn ((garden.units.unit_QMARK_(x)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"unit\",\"unit\",375175175).cljs$core$IFn$_invoke$arity$1(x),unit)));\n});\n});\n/**\n * Creates a function for creating and converting `CSSUnit`s for the\n *   given unit. If a number n is passed the function it will produce a\n *   new `CSSUnit` record with a the magnitude set to n. If a `CSSUnit`\n *   is passed the function will attempt to convert it.\n */\ngarden.units.make_unit_fn = (function garden$units$make_unit_fn(unit){\nreturn (function (x){\nif(typeof x === 'number'){\nreturn (new garden.types.CSSUnit(unit,x,null,null,null));\n} else {\nif(garden.units.unit_QMARK_(x)){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((unit.cljs$core$IFn$_invoke$arity$1 ? unit.cljs$core$IFn$_invoke$arity$1(x) : unit.call(null,x)),unit)){\nreturn x;\n} else {\nreturn garden.units.convert(x,unit);\n}\n} else {\nvar ex_message = garden.util.format.cljs$core$IFn$_invoke$arity$variadic(\"Unable to convert from %s to %s\",cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.type.getName(),cljs.core.name(unit)], 0));\nvar ex_data = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"given\",\"given\",716253602),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),cljs.core.type,new cljs.core.Keyword(null,\"unit\",\"unit\",375175175),unit], null)], null);\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(ex_message,ex_data);\n\n}\n}\n});\n});\n/**\n * Create a addition function for adding Units.\n */\ngarden.units.make_unit_adder = (function garden$units$make_unit_adder(unit){\nvar u = garden.units.make_unit_fn(unit);\nreturn (function() {\nvar garden$units$make_unit_adder_$_u_PLUS_ = null;\nvar garden$units$make_unit_adder_$_u_PLUS___0 = (function (){\nreturn u((0));\n});\nvar garden$units$make_unit_adder_$_u_PLUS___1 = (function (x){\nreturn u(x);\n});\nvar garden$units$make_unit_adder_$_u_PLUS___2 = (function (x,y){\nvar map__45146 = u(x);\nvar map__45146__$1 = cljs.core.__destructure_map(map__45146);\nvar m1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45146__$1,new cljs.core.Keyword(null,\"magnitude\",\"magnitude\",1924274222));\nvar map__45147 = u(y);\nvar map__45147__$1 = cljs.core.__destructure_map(map__45147);\nvar m2 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45147__$1,new cljs.core.Keyword(null,\"magnitude\",\"magnitude\",1924274222));\nreturn u((m1 + m2));\n});\nvar garden$units$make_unit_adder_$_u_PLUS___3 = (function() { \nvar G__45207__delegate = function (x,y,more){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(garden$units$make_unit_adder_$_u_PLUS_,garden$units$make_unit_adder_$_u_PLUS_.cljs$core$IFn$_invoke$arity$2(x,y),more);\n};\nvar G__45207 = function (x,y,var_args){\nvar more = null;\nif (arguments.length > 2) {\nvar G__45208__i = 0, G__45208__a = new Array(arguments.length -  2);\nwhile (G__45208__i < G__45208__a.length) {G__45208__a[G__45208__i] = arguments[G__45208__i + 2]; ++G__45208__i;}\n  more = new cljs.core.IndexedSeq(G__45208__a,0,null);\n} \nreturn G__45207__delegate.call(this,x,y,more);};\nG__45207.cljs$lang$maxFixedArity = 2;\nG__45207.cljs$lang$applyTo = (function (arglist__45209){\nvar x = cljs.core.first(arglist__45209);\narglist__45209 = cljs.core.next(arglist__45209);\nvar y = cljs.core.first(arglist__45209);\nvar more = cljs.core.rest(arglist__45209);\nreturn G__45207__delegate(x,y,more);\n});\nG__45207.cljs$core$IFn$_invoke$arity$variadic = G__45207__delegate;\nreturn G__45207;\n})()\n;\ngarden$units$make_unit_adder_$_u_PLUS_ = function(x,y,var_args){\nvar more = var_args;\nswitch(arguments.length){\ncase 0:\nreturn garden$units$make_unit_adder_$_u_PLUS___0.call(this);\ncase 1:\nreturn garden$units$make_unit_adder_$_u_PLUS___1.call(this,x);\ncase 2:\nreturn garden$units$make_unit_adder_$_u_PLUS___2.call(this,x,y);\ndefault:\nvar G__45214 = null;\nif (arguments.length > 2) {\nvar G__45217__i = 0, G__45217__a = new Array(arguments.length -  2);\nwhile (G__45217__i < G__45217__a.length) {G__45217__a[G__45217__i] = arguments[G__45217__i + 2]; ++G__45217__i;}\nG__45214 = new cljs.core.IndexedSeq(G__45217__a,0,null);\n}\nreturn garden$units$make_unit_adder_$_u_PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__45214);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ngarden$units$make_unit_adder_$_u_PLUS_.cljs$lang$maxFixedArity = 2;\ngarden$units$make_unit_adder_$_u_PLUS_.cljs$lang$applyTo = garden$units$make_unit_adder_$_u_PLUS___3.cljs$lang$applyTo;\ngarden$units$make_unit_adder_$_u_PLUS_.cljs$core$IFn$_invoke$arity$0 = garden$units$make_unit_adder_$_u_PLUS___0;\ngarden$units$make_unit_adder_$_u_PLUS_.cljs$core$IFn$_invoke$arity$1 = garden$units$make_unit_adder_$_u_PLUS___1;\ngarden$units$make_unit_adder_$_u_PLUS_.cljs$core$IFn$_invoke$arity$2 = garden$units$make_unit_adder_$_u_PLUS___2;\ngarden$units$make_unit_adder_$_u_PLUS_.cljs$core$IFn$_invoke$arity$variadic = garden$units$make_unit_adder_$_u_PLUS___3.cljs$core$IFn$_invoke$arity$variadic;\nreturn garden$units$make_unit_adder_$_u_PLUS_;\n})()\n});\n/**\n * Create a subtraction function for subtracting Units.\n */\ngarden.units.make_unit_subtractor = (function garden$units$make_unit_subtractor(unit){\nvar u = garden.units.make_unit_fn(unit);\nreturn (function() {\nvar garden$units$make_unit_subtractor_$_u_ = null;\nvar garden$units$make_unit_subtractor_$_u___1 = (function (x){\nreturn u((- x));\n});\nvar garden$units$make_unit_subtractor_$_u___2 = (function (x,y){\nvar map__45152 = u(x);\nvar map__45152__$1 = cljs.core.__destructure_map(map__45152);\nvar m1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45152__$1,new cljs.core.Keyword(null,\"magnitude\",\"magnitude\",1924274222));\nvar map__45153 = u(y);\nvar map__45153__$1 = cljs.core.__destructure_map(map__45153);\nvar m2 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45153__$1,new cljs.core.Keyword(null,\"magnitude\",\"magnitude\",1924274222));\nreturn u((m1 - m2));\n});\nvar garden$units$make_unit_subtractor_$_u___3 = (function() { \nvar G__45219__delegate = function (x,y,more){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(garden$units$make_unit_subtractor_$_u_,garden$units$make_unit_subtractor_$_u_.cljs$core$IFn$_invoke$arity$2(x,y),more);\n};\nvar G__45219 = function (x,y,var_args){\nvar more = null;\nif (arguments.length > 2) {\nvar G__45220__i = 0, G__45220__a = new Array(arguments.length -  2);\nwhile (G__45220__i < G__45220__a.length) {G__45220__a[G__45220__i] = arguments[G__45220__i + 2]; ++G__45220__i;}\n  more = new cljs.core.IndexedSeq(G__45220__a,0,null);\n} \nreturn G__45219__delegate.call(this,x,y,more);};\nG__45219.cljs$lang$maxFixedArity = 2;\nG__45219.cljs$lang$applyTo = (function (arglist__45221){\nvar x = cljs.core.first(arglist__45221);\narglist__45221 = cljs.core.next(arglist__45221);\nvar y = cljs.core.first(arglist__45221);\nvar more = cljs.core.rest(arglist__45221);\nreturn G__45219__delegate(x,y,more);\n});\nG__45219.cljs$core$IFn$_invoke$arity$variadic = G__45219__delegate;\nreturn G__45219;\n})()\n;\ngarden$units$make_unit_subtractor_$_u_ = function(x,y,var_args){\nvar more = var_args;\nswitch(arguments.length){\ncase 1:\nreturn garden$units$make_unit_subtractor_$_u___1.call(this,x);\ncase 2:\nreturn garden$units$make_unit_subtractor_$_u___2.call(this,x,y);\ndefault:\nvar G__45222 = null;\nif (arguments.length > 2) {\nvar G__45223__i = 0, G__45223__a = new Array(arguments.length -  2);\nwhile (G__45223__i < G__45223__a.length) {G__45223__a[G__45223__i] = arguments[G__45223__i + 2]; ++G__45223__i;}\nG__45222 = new cljs.core.IndexedSeq(G__45223__a,0,null);\n}\nreturn garden$units$make_unit_subtractor_$_u___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__45222);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ngarden$units$make_unit_subtractor_$_u_.cljs$lang$maxFixedArity = 2;\ngarden$units$make_unit_subtractor_$_u_.cljs$lang$applyTo = garden$units$make_unit_subtractor_$_u___3.cljs$lang$applyTo;\ngarden$units$make_unit_subtractor_$_u_.cljs$core$IFn$_invoke$arity$1 = garden$units$make_unit_subtractor_$_u___1;\ngarden$units$make_unit_subtractor_$_u_.cljs$core$IFn$_invoke$arity$2 = garden$units$make_unit_subtractor_$_u___2;\ngarden$units$make_unit_subtractor_$_u_.cljs$core$IFn$_invoke$arity$variadic = garden$units$make_unit_subtractor_$_u___3.cljs$core$IFn$_invoke$arity$variadic;\nreturn garden$units$make_unit_subtractor_$_u_;\n})()\n});\n/**\n * Create a multiplication function for multiplying Units.\n */\ngarden.units.make_unit_multiplier = (function garden$units$make_unit_multiplier(unit){\nvar u = garden.units.make_unit_fn(unit);\nreturn (function() {\nvar garden$units$make_unit_multiplier_$_u_STAR_ = null;\nvar garden$units$make_unit_multiplier_$_u_STAR___0 = (function (){\nreturn u((1));\n});\nvar garden$units$make_unit_multiplier_$_u_STAR___1 = (function (x){\nreturn u(x);\n});\nvar garden$units$make_unit_multiplier_$_u_STAR___2 = (function (x,y){\nvar map__45160 = u(x);\nvar map__45160__$1 = cljs.core.__destructure_map(map__45160);\nvar m1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45160__$1,new cljs.core.Keyword(null,\"magnitude\",\"magnitude\",1924274222));\nvar map__45161 = u(y);\nvar map__45161__$1 = cljs.core.__destructure_map(map__45161);\nvar m2 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45161__$1,new cljs.core.Keyword(null,\"magnitude\",\"magnitude\",1924274222));\nreturn u((m1 * m2));\n});\nvar garden$units$make_unit_multiplier_$_u_STAR___3 = (function() { \nvar G__45228__delegate = function (x,y,more){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(garden$units$make_unit_multiplier_$_u_STAR_,garden$units$make_unit_multiplier_$_u_STAR_.cljs$core$IFn$_invoke$arity$2(x,y),more);\n};\nvar G__45228 = function (x,y,var_args){\nvar more = null;\nif (arguments.length > 2) {\nvar G__45230__i = 0, G__45230__a = new Array(arguments.length -  2);\nwhile (G__45230__i < G__45230__a.length) {G__45230__a[G__45230__i] = arguments[G__45230__i + 2]; ++G__45230__i;}\n  more = new cljs.core.IndexedSeq(G__45230__a,0,null);\n} \nreturn G__45228__delegate.call(this,x,y,more);};\nG__45228.cljs$lang$maxFixedArity = 2;\nG__45228.cljs$lang$applyTo = (function (arglist__45231){\nvar x = cljs.core.first(arglist__45231);\narglist__45231 = cljs.core.next(arglist__45231);\nvar y = cljs.core.first(arglist__45231);\nvar more = cljs.core.rest(arglist__45231);\nreturn G__45228__delegate(x,y,more);\n});\nG__45228.cljs$core$IFn$_invoke$arity$variadic = G__45228__delegate;\nreturn G__45228;\n})()\n;\ngarden$units$make_unit_multiplier_$_u_STAR_ = function(x,y,var_args){\nvar more = var_args;\nswitch(arguments.length){\ncase 0:\nreturn garden$units$make_unit_multiplier_$_u_STAR___0.call(this);\ncase 1:\nreturn garden$units$make_unit_multiplier_$_u_STAR___1.call(this,x);\ncase 2:\nreturn garden$units$make_unit_multiplier_$_u_STAR___2.call(this,x,y);\ndefault:\nvar G__45232 = null;\nif (arguments.length > 2) {\nvar G__45233__i = 0, G__45233__a = new Array(arguments.length -  2);\nwhile (G__45233__i < G__45233__a.length) {G__45233__a[G__45233__i] = arguments[G__45233__i + 2]; ++G__45233__i;}\nG__45232 = new cljs.core.IndexedSeq(G__45233__a,0,null);\n}\nreturn garden$units$make_unit_multiplier_$_u_STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__45232);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ngarden$units$make_unit_multiplier_$_u_STAR_.cljs$lang$maxFixedArity = 2;\ngarden$units$make_unit_multiplier_$_u_STAR_.cljs$lang$applyTo = garden$units$make_unit_multiplier_$_u_STAR___3.cljs$lang$applyTo;\ngarden$units$make_unit_multiplier_$_u_STAR_.cljs$core$IFn$_invoke$arity$0 = garden$units$make_unit_multiplier_$_u_STAR___0;\ngarden$units$make_unit_multiplier_$_u_STAR_.cljs$core$IFn$_invoke$arity$1 = garden$units$make_unit_multiplier_$_u_STAR___1;\ngarden$units$make_unit_multiplier_$_u_STAR_.cljs$core$IFn$_invoke$arity$2 = garden$units$make_unit_multiplier_$_u_STAR___2;\ngarden$units$make_unit_multiplier_$_u_STAR_.cljs$core$IFn$_invoke$arity$variadic = garden$units$make_unit_multiplier_$_u_STAR___3.cljs$core$IFn$_invoke$arity$variadic;\nreturn garden$units$make_unit_multiplier_$_u_STAR_;\n})()\n});\n/**\n * Create a division function for dividing Units.\n */\ngarden.units.make_unit_divider = (function garden$units$make_unit_divider(unit){\nvar u = garden.units.make_unit_fn(unit);\nreturn (function() {\nvar garden$units$make_unit_divider_$_ud = null;\nvar garden$units$make_unit_divider_$_ud__1 = (function (x){\nreturn u(((1) / x));\n});\nvar garden$units$make_unit_divider_$_ud__2 = (function (x,y){\nvar map__45162 = u(x);\nvar map__45162__$1 = cljs.core.__destructure_map(map__45162);\nvar m1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45162__$1,new cljs.core.Keyword(null,\"magnitude\",\"magnitude\",1924274222));\nvar map__45163 = u(y);\nvar map__45163__$1 = cljs.core.__destructure_map(map__45163);\nvar m2 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45163__$1,new cljs.core.Keyword(null,\"magnitude\",\"magnitude\",1924274222));\nreturn u((m1 / m2));\n});\nvar garden$units$make_unit_divider_$_ud__3 = (function() { \nvar G__45235__delegate = function (x,y,more){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(garden$units$make_unit_divider_$_ud,garden$units$make_unit_divider_$_ud.cljs$core$IFn$_invoke$arity$2(x,y),more);\n};\nvar G__45235 = function (x,y,var_args){\nvar more = null;\nif (arguments.length > 2) {\nvar G__45236__i = 0, G__45236__a = new Array(arguments.length -  2);\nwhile (G__45236__i < G__45236__a.length) {G__45236__a[G__45236__i] = arguments[G__45236__i + 2]; ++G__45236__i;}\n  more = new cljs.core.IndexedSeq(G__45236__a,0,null);\n} \nreturn G__45235__delegate.call(this,x,y,more);};\nG__45235.cljs$lang$maxFixedArity = 2;\nG__45235.cljs$lang$applyTo = (function (arglist__45237){\nvar x = cljs.core.first(arglist__45237);\narglist__45237 = cljs.core.next(arglist__45237);\nvar y = cljs.core.first(arglist__45237);\nvar more = cljs.core.rest(arglist__45237);\nreturn G__45235__delegate(x,y,more);\n});\nG__45235.cljs$core$IFn$_invoke$arity$variadic = G__45235__delegate;\nreturn G__45235;\n})()\n;\ngarden$units$make_unit_divider_$_ud = function(x,y,var_args){\nvar more = var_args;\nswitch(arguments.length){\ncase 1:\nreturn garden$units$make_unit_divider_$_ud__1.call(this,x);\ncase 2:\nreturn garden$units$make_unit_divider_$_ud__2.call(this,x,y);\ndefault:\nvar G__45238 = null;\nif (arguments.length > 2) {\nvar G__45239__i = 0, G__45239__a = new Array(arguments.length -  2);\nwhile (G__45239__i < G__45239__a.length) {G__45239__a[G__45239__i] = arguments[G__45239__i + 2]; ++G__45239__i;}\nG__45238 = new cljs.core.IndexedSeq(G__45239__a,0,null);\n}\nreturn garden$units$make_unit_divider_$_ud__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__45238);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ngarden$units$make_unit_divider_$_ud.cljs$lang$maxFixedArity = 2;\ngarden$units$make_unit_divider_$_ud.cljs$lang$applyTo = garden$units$make_unit_divider_$_ud__3.cljs$lang$applyTo;\ngarden$units$make_unit_divider_$_ud.cljs$core$IFn$_invoke$arity$1 = garden$units$make_unit_divider_$_ud__1;\ngarden$units$make_unit_divider_$_ud.cljs$core$IFn$_invoke$arity$2 = garden$units$make_unit_divider_$_ud__2;\ngarden$units$make_unit_divider_$_ud.cljs$core$IFn$_invoke$arity$variadic = garden$units$make_unit_divider_$_ud__3.cljs$core$IFn$_invoke$arity$variadic;\nreturn garden$units$make_unit_divider_$_ud;\n})()\n});\ngarden.units.cm = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"cm\",\"cm\",540591536));\n\ngarden.units.cm_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"cm\",\"cm\",540591536));\n\ngarden.units.cm_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"cm\",\"cm\",540591536));\n\ngarden.units.cm_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"cm\",\"cm\",540591536));\n\ngarden.units.cm_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"cm\",\"cm\",540591536));\n\ngarden.units.cm_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"cm\",\"cm\",540591536));\ngarden.units.mm = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560));\n\ngarden.units.mm_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560));\n\ngarden.units.mm_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560));\n\ngarden.units.mm_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560));\n\ngarden.units.mm_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560));\n\ngarden.units.mm_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560));\ngarden.units.in$ = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"in\",\"in\",-1531184865));\n\ngarden.units.in_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"in\",\"in\",-1531184865));\n\ngarden.units.in_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"in\",\"in\",-1531184865));\n\ngarden.units.in_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"in\",\"in\",-1531184865));\n\ngarden.units.in_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"in\",\"in\",-1531184865));\n\ngarden.units.in_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"in\",\"in\",-1531184865));\ngarden.units.px = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"px\",\"px\",281329899));\n\ngarden.units.px_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"px\",\"px\",281329899));\n\ngarden.units.px_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"px\",\"px\",281329899));\n\ngarden.units.px_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"px\",\"px\",281329899));\n\ngarden.units.px_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"px\",\"px\",281329899));\n\ngarden.units.px_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"px\",\"px\",281329899));\ngarden.units.pt = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"pt\",\"pt\",556460867));\n\ngarden.units.pt_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"pt\",\"pt\",556460867));\n\ngarden.units.pt_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"pt\",\"pt\",556460867));\n\ngarden.units.pt_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"pt\",\"pt\",556460867));\n\ngarden.units.pt_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"pt\",\"pt\",556460867));\n\ngarden.units.pt_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"pt\",\"pt\",556460867));\ngarden.units.pc = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"pc\",\"pc\",512913453));\n\ngarden.units.pc_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"pc\",\"pc\",512913453));\n\ngarden.units.pc_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"pc\",\"pc\",512913453));\n\ngarden.units.pc_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"pc\",\"pc\",512913453));\n\ngarden.units.pc_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"pc\",\"pc\",512913453));\n\ngarden.units.pc_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"pc\",\"pc\",512913453));\ngarden.units.percent = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"%\",\"%\",1704198600));\n\ngarden.units.percent_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"%\",\"%\",1704198600));\n\ngarden.units.percent_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"%\",\"%\",1704198600));\n\ngarden.units.percent_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"%\",\"%\",1704198600));\n\ngarden.units.percent_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"%\",\"%\",1704198600));\n\ngarden.units.percent_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"%\",\"%\",1704198600));\ngarden.units.em = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"em\",\"em\",707813035));\n\ngarden.units.em_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"em\",\"em\",707813035));\n\ngarden.units.em_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"em\",\"em\",707813035));\n\ngarden.units.em_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"em\",\"em\",707813035));\n\ngarden.units.em_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"em\",\"em\",707813035));\n\ngarden.units.em_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"em\",\"em\",707813035));\ngarden.units.ex = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"ex\",\"ex\",-1413771341));\n\ngarden.units.ex_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"ex\",\"ex\",-1413771341));\n\ngarden.units.ex_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"ex\",\"ex\",-1413771341));\n\ngarden.units.ex_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"ex\",\"ex\",-1413771341));\n\ngarden.units.ex_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"ex\",\"ex\",-1413771341));\n\ngarden.units.ex_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"ex\",\"ex\",-1413771341));\ngarden.units.ch = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"ch\",\"ch\",-554717905));\n\ngarden.units.ch_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"ch\",\"ch\",-554717905));\n\ngarden.units.ch_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"ch\",\"ch\",-554717905));\n\ngarden.units.ch_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"ch\",\"ch\",-554717905));\n\ngarden.units.ch_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"ch\",\"ch\",-554717905));\n\ngarden.units.ch_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"ch\",\"ch\",-554717905));\ngarden.units.rem = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"rem\",\"rem\",-976484757));\n\ngarden.units.rem_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"rem\",\"rem\",-976484757));\n\ngarden.units.rem_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"rem\",\"rem\",-976484757));\n\ngarden.units.rem_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"rem\",\"rem\",-976484757));\n\ngarden.units.rem_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"rem\",\"rem\",-976484757));\n\ngarden.units.rem_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"rem\",\"rem\",-976484757));\ngarden.units.vw = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"vw\",\"vw\",1941049135));\n\ngarden.units.vw_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"vw\",\"vw\",1941049135));\n\ngarden.units.vw_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"vw\",\"vw\",1941049135));\n\ngarden.units.vw_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"vw\",\"vw\",1941049135));\n\ngarden.units.vw_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"vw\",\"vw\",1941049135));\n\ngarden.units.vw_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"vw\",\"vw\",1941049135));\ngarden.units.vh = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"vh\",\"vh\",79552846));\n\ngarden.units.vh_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"vh\",\"vh\",79552846));\n\ngarden.units.vh_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"vh\",\"vh\",79552846));\n\ngarden.units.vh_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"vh\",\"vh\",79552846));\n\ngarden.units.vh_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"vh\",\"vh\",79552846));\n\ngarden.units.vh_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"vh\",\"vh\",79552846));\ngarden.units.vmin = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"vmin\",\"vmin\",446546816));\n\ngarden.units.vmin_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"vmin\",\"vmin\",446546816));\n\ngarden.units.vmin_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"vmin\",\"vmin\",446546816));\n\ngarden.units.vmin_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"vmin\",\"vmin\",446546816));\n\ngarden.units.vmin_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"vmin\",\"vmin\",446546816));\n\ngarden.units.vmin_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"vmin\",\"vmin\",446546816));\ngarden.units.vmax = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"vmax\",\"vmax\",-1435213544));\n\ngarden.units.vmax_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"vmax\",\"vmax\",-1435213544));\n\ngarden.units.vmax_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"vmax\",\"vmax\",-1435213544));\n\ngarden.units.vmax_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"vmax\",\"vmax\",-1435213544));\n\ngarden.units.vmax_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"vmax\",\"vmax\",-1435213544));\n\ngarden.units.vmax_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"vmax\",\"vmax\",-1435213544));\ngarden.units.deg = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"deg\",\"deg\",-681556081));\n\ngarden.units.deg_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"deg\",\"deg\",-681556081));\n\ngarden.units.deg_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"deg\",\"deg\",-681556081));\n\ngarden.units.deg_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"deg\",\"deg\",-681556081));\n\ngarden.units.deg_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"deg\",\"deg\",-681556081));\n\ngarden.units.deg_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"deg\",\"deg\",-681556081));\ngarden.units.grad = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229));\n\ngarden.units.grad_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229));\n\ngarden.units.grad_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229));\n\ngarden.units.grad_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229));\n\ngarden.units.grad_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229));\n\ngarden.units.grad_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229));\ngarden.units.rad = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012));\n\ngarden.units.rad_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012));\n\ngarden.units.rad_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012));\n\ngarden.units.rad_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012));\n\ngarden.units.rad_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012));\n\ngarden.units.rad_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012));\ngarden.units.turn = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"turn\",\"turn\",75759344));\n\ngarden.units.turn_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"turn\",\"turn\",75759344));\n\ngarden.units.turn_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"turn\",\"turn\",75759344));\n\ngarden.units.turn_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"turn\",\"turn\",75759344));\n\ngarden.units.turn_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"turn\",\"turn\",75759344));\n\ngarden.units.turn_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"turn\",\"turn\",75759344));\ngarden.units.s = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"s\",\"s\",1705939918));\n\ngarden.units.s_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"s\",\"s\",1705939918));\n\ngarden.units.s_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"s\",\"s\",1705939918));\n\ngarden.units.s_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"s\",\"s\",1705939918));\n\ngarden.units.s_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"s\",\"s\",1705939918));\n\ngarden.units.s_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"s\",\"s\",1705939918));\ngarden.units.ms = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\n\ngarden.units.ms_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\n\ngarden.units.ms_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\n\ngarden.units.ms_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\n\ngarden.units.ms_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\n\ngarden.units.ms_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\ngarden.units.Hz = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"Hz\",\"Hz\",-1958732916));\n\ngarden.units.Hz_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"Hz\",\"Hz\",-1958732916));\n\ngarden.units.Hz_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"Hz\",\"Hz\",-1958732916));\n\ngarden.units.Hz_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"Hz\",\"Hz\",-1958732916));\n\ngarden.units.Hz_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"Hz\",\"Hz\",-1958732916));\n\ngarden.units.Hz_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"Hz\",\"Hz\",-1958732916));\ngarden.units.kHz = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466));\n\ngarden.units.kHz_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466));\n\ngarden.units.kHz_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466));\n\ngarden.units.kHz_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466));\n\ngarden.units.kHz_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466));\n\ngarden.units.kHz_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466));\ngarden.units.dpi = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"dpi\",\"dpi\",-986162832));\n\ngarden.units.dpi_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"dpi\",\"dpi\",-986162832));\n\ngarden.units.dpi_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"dpi\",\"dpi\",-986162832));\n\ngarden.units.dpi_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"dpi\",\"dpi\",-986162832));\n\ngarden.units.dpi_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"dpi\",\"dpi\",-986162832));\n\ngarden.units.dpi_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"dpi\",\"dpi\",-986162832));\ngarden.units.dpcm = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"dpcm\",\"dpcm\",-1187601236));\n\ngarden.units.dpcm_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"dpcm\",\"dpcm\",-1187601236));\n\ngarden.units.dpcm_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"dpcm\",\"dpcm\",-1187601236));\n\ngarden.units.dpcm_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"dpcm\",\"dpcm\",-1187601236));\n\ngarden.units.dpcm_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"dpcm\",\"dpcm\",-1187601236));\n\ngarden.units.dpcm_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"dpcm\",\"dpcm\",-1187601236));\ngarden.units.dppx = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"dppx\",\"dppx\",1920508843));\n\ngarden.units.dppx_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"dppx\",\"dppx\",1920508843));\n\ngarden.units.dppx_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"dppx\",\"dppx\",1920508843));\n\ngarden.units.dppx_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"dppx\",\"dppx\",1920508843));\n\ngarden.units.dppx_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"dppx\",\"dppx\",1920508843));\n\ngarden.units.dppx_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"dppx\",\"dppx\",1920508843));\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","Functions and macros for working with CSS units.","~:file","garden/units.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",17],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",["^ ","~$defunit","~$garden.units"],"~:excludes",["~#set",["~$rem"]],"~:macros",["^ ","^D",["^ ","~:arglists",["~#list",[["~$name"],["^L","~$unit"]]],"^6","Create a suite of functions for unit creation, conversion,\n  validation, and arithmetic.","^8",253,"^9",4,"^7","garden/units.cljc","~:name","~$garden.units/defunit","~:ns","^E","~:macro",true]],"^N","^E","~:reader-aliases",["^ "],"~:op","^P","~:imports",null,"~:requires",["^ ","~$cljs.reader","^V","~$garden.types","^W","~$types","^W","~$garden.util","^Y","~$util","^Y","~$cljs.core","^[","~$goog","^10"],"~:seen",["^G",["~:require","~:require-macros"]],"~:uses",["^ ","~$read-string","^V","~$CSSUnit","^W"],"^13",["^ ","^E","^E","^[","^[","^V","^V"],"~:form",["^K",["~$ns","^E","Functions and macros for working with CSS units.",["^K",["~:refer-clojure","~:exclude",["^H"]]],["^K",["^12",["^V","~:refer",["^15"]],["^W","~:as","^X","^1;",["^16"]],["^Y","^1<","^Z"]]],["^K",["^13",["^E","^1;",["^D"]]]]]],"~:flags",["^ ","^12",["^G",[]],"^13",["^G",[]]],"~:js-deps",["^ "],"~:deps",["^10","^[","^V","^W","^Y"]],"^P","^E","~:resource-id",["~:shadow.build.classpath/resource","garden/units.cljc"],"~:compiled-at",1648129706646,"^R",["^ ","^V","^V","^W","^W","^X","^W","^Y","^Y","^Z","^Y","^[","^[","^10","^10","^E","^E"],"~:resource-name","garden/units.cljc","~:warnings",[],"~:source","(ns garden.units\n  \"Functions and macros for working with CSS units.\"\n  (:refer-clojure :exclude [rem])\n  #?@(:clj\n     [(:require\n       [garden.types :as types]\n       [garden.util :as util])\n      (:import\n       [garden.types CSSUnit])])\n  #?@(:cljs\n      [(:require\n        [cljs.reader :refer [read-string]]\n        [garden.types :as types :refer [CSSUnit]]\n        [garden.util :as util])\n       (:require-macros\n        [garden.units :refer [defunit]])]))\n\n;;;; ## Unit families\n\n(def length-units\n  #{:in :cm :pc :mm :pt :px (keyword \"%\")})\n\n(def angular-units\n  #{:deg :grad :rad :turn})\n\n(def time-units\n  #{:s :ms})\n\n(def frequency-units\n  #{:Hz :kHz})\n\n(def resolution-units\n  #{:dpi :dpcm :dppx})\n\n;;;; ## Unit predicates\n\n(defn unit?\n  \"True if x is of type CSSUnit.\"\n  [x]\n  (instance? CSSUnit x))\n\n(defn length?\n  [x]\n  (and (unit? x)\n       (contains? length-units (:unit x))))\n\n(defn angle?\n  [x]\n  (and (unit? x)\n       (contains? angular-units (:unit x))))\n\n(defn time?\n  [x]\n  (and (unit? x)\n       (contains? time-units (:unit x))))\n\n(defn frequency?\n  [x]\n  (and (unit? x)\n       (contains? frequency-units (:unit x))))\n\n(defn resolution?\n  [x]\n  (and (unit? x)\n       (contains? resolution-units (:unit x))))\n\n;;;; ## Unit conversion\n\n(def ^{:private true\n       :doc \"Map associating CSS unit types to their conversion values.\"}\n  conversions\n  {;; Absolute units\n   :cm {:cm 1\n        :mm 10\n        :pc 2.36220473\n        :pt 28.3464567\n        :px 37.795275591}\n   :in {:cm 2.54\n        :in 1\n        :mm 25.4\n        :pc 6\n        :pt 72\n        :px 96}\n   :mm {:mm 1\n        :pt 2.83464567\n        :px 3.7795275591}\n   :pc {:mm 4.23333333\n        :pc 1\n        :pt 12\n        :px 16}\n   :pt {:pt 1\n        :px 1.3333333333}\n   :px {:px 1}\n   (keyword \"%\") {(keyword \"%\") 1}\n\n   ;; Relative untis\n   :em {:em 1}\n   :rem {:rem 1}\n\n   ;; Angular units\n   :deg {:deg 1\n         :grad 1.111111111\n         :rad 0.0174532925\n         :turn 0.002777778}\n   :grad {:grad 1\n          :rad 63.661977237\n          :turn 0.0025}\n   :rad {:rad 1\n         :turn 0.159154943}\n   :turn {:turn 1}\n\n   ;; Time units\n   :s {:ms 1000\n       :s 1}\n   :ms {:ms 1}\n\n   ;; Frequency units\n   :Hz {:Hz 1\n        :kHz 0.001}\n   :kHz {:kHz 1}})\n\n(defn- convertable?\n  \"True if unit is a key of convertable-units, false otherwise.\"\n  [unit]\n  (contains? conversions unit))\n\n(defn- convert\n  \"Convert a Unit with :unit left to a Unit with :unit right if possible.\"\n  [{m :magnitude left :unit} right]\n  (if (every? convertable? [left right])\n    (let [v1 (get-in conversions [left right])\n          v2 (get-in conversions [right left])]\n      (cond\n        v1\n        (CSSUnit. right (* v1 m))\n\n        v2\n        (CSSUnit. right (/ m v2))\n\n       ;; Both units are convertible but no conversion between them exists.\n       :else\n       (throw\n        (ex-info\n         (util/format \"Can't convert %s to %s\" (name left) (name right)) {}))))\n    ;; Display the inconvertible unit.\n    (let [x (first (drop-while convertable? [left right]))]\n      (throw (ex-info (str \"Inconvertible unit \" (name x)) {})))))\n\n;;;; ## Unit helpers\n\n(def ^{:doc \"Regular expression for matching a CSS unit. The magnitude\n             and unit are captured.\"\n       :private true}\n  unit-re\n  #\"([+-]?\\d+(?:\\.?\\d+)?)(p[xtc]|in|[cm]m|%|r?em|ex|ch|v(?:[wh]|m(?:in|ax))|deg|g?rad|turn|m?s|k?Hz|dp(?:i|cm|px))\")\n\n(defn read-unit\n  \"Read a `CSSUnit` object from the string `s`.\"\n  [s]\n  (when-let [[_ magnitude unit] (re-matches unit-re s)]\n    (let [unit (keyword unit)\n          magnitude (if magnitude (read-string magnitude) 0)]\n      (CSSUnit. unit magnitude))))\n\n(defn make-unit-predicate\n  \"Creates a function for verifying the given unit type.\"\n  [unit]\n  (fn [x] (and (unit? x) (= (:unit x) unit))))\n\n(defn make-unit-fn\n  \"Creates a function for creating and converting `CSSUnit`s for the\n  given unit. If a number n is passed the function it will produce a\n  new `CSSUnit` record with a the magnitude set to n. If a `CSSUnit`\n  is passed the function will attempt to convert it.\"\n  [unit]\n  (fn [x]\n    (cond\n      (number? x)\n      (CSSUnit. unit x)\n\n      (unit? x)\n      (if (and (= (unit x) unit))\n        x\n        (convert x unit))\n\n      :else\n      (let [;; Does `.getName` even work in CLJS? -- @noprompt\n            ex-message (util/format \"Unable to convert from %s to %s\"\n                                    (.getName type)\n                                    (name unit))\n            ;; TODO: This needs to be populated with more helpful\n            ;; data.\n            ex-data {:given {:type type\n                             :unit unit}}]\n        (throw\n         (ex-info ex-message ex-data))))))\n\n(defn make-unit-adder\n  \"Create a addition function for adding Units.\"\n  [unit]\n  (let [u (make-unit-fn unit)]\n    (fn u+\n      ([] (u 0))\n      ([x] (u x))\n      ([x y]\n         (let [{m1 :magnitude} (u x)\n               {m2 :magnitude} (u y)]\n           (u (+ m1 m2))))\n      ([x y & more]\n         (reduce u+ (u+ x y) more)))))\n\n(defn make-unit-subtractor\n  \"Create a subtraction function for subtracting Units.\"\n  [unit]\n  (let [u (make-unit-fn unit)]\n    (fn u-\n      ([x] (u (- x)))\n      ([x y]\n         (let [{m1 :magnitude} (u x)\n               {m2 :magnitude} (u y)]\n           (u (- m1 m2))))\n      ([x y & more]\n         (reduce u- (u- x y) more)))))\n\n(defn make-unit-multiplier\n  \"Create a multiplication function for multiplying Units.\"\n  [unit]\n  (let [u (make-unit-fn unit)]\n    (fn u*\n      ([] (u 1))\n      ([x] (u x))\n      ([x y]\n         (let [{m1 :magnitude} (u x)\n               {m2 :magnitude} (u y)]\n           (u (* m1 m2))))\n      ([x y & more]\n         (reduce u* (u* x y) more)))))\n\n(defn make-unit-divider\n  \"Create a division function for dividing Units.\"\n  [unit]\n  (let [u (make-unit-fn unit)]\n    (fn ud\n      ([x] (u (/ 1 x)))\n      ([x y]\n         (let [{m1 :magnitude} (u x)\n               {m2 :magnitude} (u y)]\n           (u (/ m1 m2))))\n      ([x y & more]\n         (reduce ud (ud x y) more)))))\n\n#?(:clj\n   (defmacro defunit\n     \"Create a suite of functions for unit creation, conversion,\n  validation, and arithmetic.\"\n     ([name]\n      `(defunit ~name ~name))\n     ([name unit]\n      (let [k (keyword unit)\n            append #(symbol (str name %))]\n        `(do\n           (def ~name (make-unit-fn ~k))\n           (def ~(append \\?) (make-unit-predicate ~k))\n           (def ~(append \\+) (make-unit-adder ~k))\n           (def ~(append \\-) (make-unit-subtractor ~k))\n           (def ~(append \\*) (make-unit-multiplier ~k))\n           (def ~(append \"-div\") (make-unit-divider ~k)))))))\n\n(comment\n  ;; This:\n  (defunit px)\n  ;; Is equivalent to:\n  (def px  (make-unit-fn :px))\n  (def px? (make-unit-predicate :px))\n  (def px+ (make-unit-adder :px))\n  (def px- (make-unit-subtractor :px))\n  (def px* (make-unit-multiplier :px))\n  (def px-div (make-unit-divider :px)))\n\n;; # Predefined units\n\n;; Absolute units\n\n(defunit cm)\n(defunit mm)\n(defunit in)\n(defunit px)\n(defunit pt)\n(defunit pc)\n(defunit percent \"%\")\n\n;; Font-relative units\n\n(defunit em)\n(defunit ex)\n(defunit ch)\n(defunit rem)\n\n;; Viewport-percentage lengths\n\n(defunit vw)\n(defunit vh)\n(defunit vmin)\n(defunit vmax)\n\n;; Angles\n\n(defunit deg)\n(defunit grad)\n(defunit rad)\n(defunit turn)\n\n;; Times\n\n(defunit s)\n(defunit ms)\n\n;; Frequencies\n\n(defunit Hz)\n(defunit kHz)\n\n;; Resolutions\n\n(defunit dpi)\n(defunit dpcm)\n(defunit dppx)\n","~:reader-features",["^G",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["garden.units/length-units","cljs.core.keyword","garden.units/angular-units","garden.units/time-units","garden.units/frequency-units","garden.units/resolution-units","garden.units/unit?","x","garden.types/CSSUnit","garden.units/length?","cljs.core/contains?","garden.units/angle?","garden.units/time?","garden.units/frequency?","garden.units/resolution?","garden.units/conversions","garden.units/convertable?","unit","p__45122","map__45123","cljs.core/--destructure-map","cljs.core.get","garden.units/convert","m","left","right","cljs.core/every?","v1","cljs.core.get_in","v2","cljs.core.ex_info","garden.util.format","cljs.core/name","cljs.core/first","cljs.core.drop_while","garden.units/unit-re","garden.units/read-unit","s","temp__5753__auto__","vec__45131","cljs.core.nth","_","magnitude","cljs.core/re-matches","cljs.reader.read_string","garden.units/make-unit-predicate","cljs.core._EQ_","garden.units/make-unit-fn","ex-message","cljs.core/type","ex-data","garden.units/make-unit-adder","u","y","map__45146","map__45147","m1","m2","more","cljs.core.reduce","u+","garden$units$make_unit_adder_$_u_PLUS_","garden.units/make-unit-subtractor","map__45152","map__45153","u-","garden$units$make_unit_subtractor_$_u_","garden.units/make-unit-multiplier","map__45160","map__45161","u*","garden$units$make_unit_multiplier_$_u_STAR_","garden.units/make-unit-divider","map__45162","map__45163","ud","garden$units$make_unit_divider_$_ud","garden.units/cm?","garden.units/cm+","garden.units/cm-","garden.units/cm*","garden.units/cm-div","garden.units/cm","garden.units/mm?","garden.units/mm+","garden.units/mm-","garden.units/mm*","garden.units/mm-div","garden.units/mm","garden.units/in?","garden.units/in+","garden.units/in-","garden.units/in*","garden.units/in-div","garden.units/in","garden.units/px?","garden.units/px+","garden.units/px-","garden.units/px*","garden.units/px-div","garden.units/px","garden.units/pt?","garden.units/pt+","garden.units/pt-","garden.units/pt*","garden.units/pt-div","garden.units/pt","garden.units/pc?","garden.units/pc+","garden.units/pc-","garden.units/pc*","garden.units/pc-div","garden.units/pc","garden.units/percent?","garden.units/percent+","garden.units/percent-","garden.units/percent*","garden.units/percent-div","garden.units/percent","garden.units/em?","garden.units/em+","garden.units/em-","garden.units/em*","garden.units/em-div","garden.units/em","garden.units/ex?","garden.units/ex+","garden.units/ex-","garden.units/ex*","garden.units/ex-div","garden.units/ex","garden.units/ch?","garden.units/ch+","garden.units/ch-","garden.units/ch*","garden.units/ch-div","garden.units/ch","garden.units/rem?","garden.units/rem+","garden.units/rem-","garden.units/rem*","garden.units/rem-div","garden.units/rem","garden.units/vw?","garden.units/vw+","garden.units/vw-","garden.units/vw*","garden.units/vw-div","garden.units/vw","garden.units/vh?","garden.units/vh+","garden.units/vh-","garden.units/vh*","garden.units/vh-div","garden.units/vh","garden.units/vmin?","garden.units/vmin+","garden.units/vmin-","garden.units/vmin*","garden.units/vmin-div","garden.units/vmin","garden.units/vmax?","garden.units/vmax+","garden.units/vmax-","garden.units/vmax*","garden.units/vmax-div","garden.units/vmax","garden.units/deg?","garden.units/deg+","garden.units/deg-","garden.units/deg*","garden.units/deg-div","garden.units/deg","garden.units/grad?","garden.units/grad+","garden.units/grad-","garden.units/grad*","garden.units/grad-div","garden.units/grad","garden.units/rad?","garden.units/rad+","garden.units/rad-","garden.units/rad*","garden.units/rad-div","garden.units/rad","garden.units/turn?","garden.units/turn+","garden.units/turn-","garden.units/turn*","garden.units/turn-div","garden.units/turn","garden.units/s?","garden.units/s+","garden.units/s-","garden.units/s*","garden.units/s-div","garden.units/s","garden.units/ms?","garden.units/ms+","garden.units/ms-","garden.units/ms*","garden.units/ms-div","garden.units/ms","garden.units/Hz?","garden.units/Hz+","garden.units/Hz-","garden.units/Hz*","garden.units/Hz-div","garden.units/Hz","garden.units/kHz?","garden.units/kHz+","garden.units/kHz-","garden.units/kHz*","garden.units/kHz-div","garden.units/kHz","garden.units/dpi?","garden.units/dpi+","garden.units/dpi-","garden.units/dpi*","garden.units/dpi-div","garden.units/dpi","garden.units/dpcm?","garden.units/dpcm+","garden.units/dpcm-","garden.units/dpcm*","garden.units/dpcm-div","garden.units/dpcm","garden.units/dppx?","garden.units/dppx+","garden.units/dppx-","garden.units/dppx*","garden.units/dppx-div","garden.units/dppx"]],"~:used-vars",["^G",["~$garden.units/ex","~$cljs.core/--destructure-map","~$garden.units/vmin*","~$garden.units/resolution-units","~$garden.units/ms-div","~$garden.units/vmax-","~$garden.units/frequency?","~$garden.units/deg+","~$garden.units/dpi","~$cljs.core/keyword","~$garden.units/turn-","~$garden.units/Hz-div","~$garden.units/grad*","~$garden.units/dpi?","~$garden.units/px-div","~$garden.units/pc?","~$garden.units/vmin-","~$garden.units/ex?","~$garden.units/ms?","~$garden.units/vh*","~$garden.units/vh","~$garden.units/ex+","~$garden.units/turn-div","~$garden.units/in-","~$garden.units/in-div","~$garden.units/px+","~$garden.units/px","~$cljs.core/=","~$garden.units/grad+","~$garden.units/pt-","~$garden.units/px?","~$cljs.core/re-matches","~$garden.units/vmax","~$garden.units/rem?","~$garden.units/Hz*","~$garden.units/px*","~$garden.units/s+","~$garden.units/rad?","~$cljs.core/drop-while","~$garden.types/CSSUnit","~$garden.units/pt-div","~$garden.units/dppx?","~$garden.units/vw+","~$garden.units/Hz+","~$garden.units/turn*","~$cljs.core/reduce","~$garden.units/time-units","~$garden.units/in?","~$garden.units/pt+","~$garden.units/kHz-","~$garden.units/dppx*","~$garden.units/s-div","~$garden.units/ms+","~$garden.units/pc+","~$garden.units/ms","~$garden.units/vw","~$garden.units/px-","~$garden.units/in+","~$garden.units/length?","~$garden.units/cm","~$garden.units/pc","~$garden.units/grad-","~$garden.units/mm?","~$garden.units/dpi-","~$garden.units/pt?","~$garden.units/dppx-div","~$garden.units/percent","~$garden.units/ex*","~$garden.units/pt*","~$garden.units/dpcm?","~$garden.units/s*","~$garden.units/mm+","~$garden.units/ms*","~$garden.units/pc*","~$garden.units/ch","~$garden.units/deg","~$cljs.core/contains?","~$garden.units/dpcm-","~$garden.units/turn","~$garden.units/kHz*","~$garden.units/vh+","~$garden.units/angle?","~$garden.units/make-unit-divider","~$garden.units/mm*","~$garden.units/cm*","~$garden.units/dpi-div","~$garden.units/rad*","~$garden.units/rem-","~$garden.units/vmax?","~$garden.units/ex-div","~$garden.units/make-unit-predicate","~$garden.units/mm-","~$garden.units/vh?","~$garden.units/rem*","~$garden.units/turn?","~$garden.units/cm+","~$cljs.core/get-in","~$garden.units/resolution?","~$garden.units/deg?","~$garden.units/s-","~$garden.units/ch-div","~$garden.units/cm-","~$garden.units/frequency-units","~$garden.units/em?","~$garden.units/mm","~$garden.units/rem-div","~$garden.units/rad+","~$garden.units/kHz?","~$garden.units/ex-","~$garden.units/ch?","~$garden.units/make-unit-subtractor","~$garden.units/dpcm*","~$garden.units/vh-div","~$garden.units/read-unit","~$garden.units/pc-","~$garden.units/mm-div","~$cljs.core/get","~$garden.units/conversions","~$garden.units/grad-div","~$garden.units/deg-","~$garden.units/percent-","~$garden.units/make-unit-multiplier","~$garden.units/kHz","~$garden.units/deg-div","~$garden.units/unit?","~$garden.units/convertable?","~$garden.units/unit-re","~$garden.units/dpcm+","~$garden.units/em+","~$garden.units/make-unit-adder","~$garden.util/format","~$garden.units/percent?","~$garden.units/turn+","~$garden.units/em-","~$garden.units/cm-div","~$cljs.core/nth","~$cljs.core/ex-info","~$garden.units/Hz-","~$garden.units/rem+","~$garden.units/percent-div","~$garden.units/cm?","~$garden.units/time?","~$garden.units/vh-","~$garden.units/convert","~$garden.units/ch-","~$garden.units/percent*","~$garden.units/vw-div","~$garden.units/dppx","~$garden.units/vmax+","~$garden.units/ch*","~$garden.units/in","~$garden.units/em-div","~$garden.units/make-unit-fn","~$garden.units/vmin+","~$garden.units/em","~$garden.units/in*","~$garden.units/rad","~$garden.units/Hz","~$garden.units/vmin","~$garden.units/dpi*","~$garden.units/vmin?","~$garden.units/rad-div","~$garden.units/vmax*","~$garden.units/ch+","~$garden.units/grad","~$garden.units/em*","~$cljs.reader/read-string","~$garden.units/length-units","~$garden.units/s?","~$garden.units/dpcm-div","~$garden.units/Hz?","~$garden.units/grad?","~$garden.units/vw*","~$garden.units/angular-units","~$cljs.core/first","~$garden.units/pt","~$garden.units/kHz-div","~$garden.units/rem","~$garden.units/kHz+","~$garden.units/dppx+","~$garden.units/dpcm","~$garden.units/rad-","~$garden.units/vmax-div","~$garden.units/vmin-div","~$cljs.core/name","~$cljs.core/every?","~$garden.units/dpi+","~$garden.units/deg*","~$garden.units/dppx-","~$garden.units/percent+","~$cljs.core/type","~$garden.units/ms-","~$garden.units/s","~$garden.units/vw-","~$garden.units/pc-div","~$garden.units/vw?"]]],"~:cache-keys",["~#cmap",[["^1A","goog/dom/tagname.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^G",[]],"~:deps-syms",["^10","~$goog.dom.HtmlElement"]]],["^1A","cljs/tools/reader/impl/utils.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10","^[","~$clojure.string","~$goog.string"]]],["^1A","goog/math/math.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10","~$goog.array","~$goog.asserts"]]],["^1A","goog/html/trustedtypes.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10"]]],["^1A","goog/string/stringformat.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10","^6="]]],["^1A","goog/labs/useragent/browser.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10","^6>","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^1A","goog/html/safeurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10","^6?","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^6B"]]],["^1A","goog/array/array.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10","^6?"]]],["^1A","goog/debug/error.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10"]]],["^1A","garden/units.cljc"],["ee5fc50fad089581dd0cf1fd0f16e4ec745a57dd","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10","^[","^V","^W","^Y"]]],["^1A","cljs/tools/reader/edn.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10","^[","~$cljs.tools.reader.impl.errors","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^6=","~$goog.string.StringBuffer"]]],["^1A","goog/dom/nodetype.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10"]]],["^1A","cljs/tools/reader/impl/inspect.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10","^["]]],["^1A","cljs/tools/reader.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10","^[","^6J","^6K","^6L","^6I","^6>","^6=","^6N"]]],["^1A","goog/string/typedstring.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10"]]],["^1A","goog/object/object.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10"]]],["^1A","goog/dom/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10","^6?"]]],"~:SHADOW-TIMESTAMP",[1647940543000,1647940543000,1633031471000],["^1A","goog/math/long.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10","^6?","~$goog.reflect"]]],["^1A","goog/html/trustedresourceurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10","^6?","~$goog.fs.blob","^6C","~$goog.html.SafeScript","~$goog.html.trustedtypes","^6E","^6F","^6G","^6H"]]],["^1A","goog/string/internal.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10"]]],["^1A","goog/functions/functions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10"]]],["^1A","goog/html/safestyle.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10","^6>","^6?","~$goog.html.SafeUrl","^6G","^6H","^6B"]]],["^1A","goog/dom/safe.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10","^6?","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^6R","~$goog.html.SafeStyle","^6T","^6D","~$goog.html.uncheckedconversions","^6G","^6B"]]],["^1A","goog/structs/map.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1A","goog/html/safehtml.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10","^6>","^6?","~$goog.dom.TagName","~$goog.dom.tags","^6R","^6X","~$goog.html.SafeStyleSheet","^6T","^6D","^6S","^6E","^6F","~$goog.labs.userAgent.browser","^6A","^6G","^6H","^6B"]]],["^1A","goog/dom/tags.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10","^6A"]]],["^1A","goog/fs/blob.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10","^6>"]]],["^1A","cljs/reader.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10","^[","^6A","^6M","~$cljs.tools.reader.edn","^6N"]]],["^1A","goog/asserts/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1A","garden/types.cljc"],["ee5fc50fad089581dd0cf1fd0f16e4ec745a57dd","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10","^["]]],["^1A","goog/uri/uri.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10","^6>","^6?","^6=","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1A","goog/i18n/bidi.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10"]]],["^1A","goog/fs/url.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10"]]],["^1A","goog/base.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",[]]],["^1A","garden/util.cljc"],["ee5fc50fad089581dd0cf1fd0f16e4ec745a57dd","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10","^[","^6<","^W","^6=","~$goog.string.format"]]],["^1A","goog/structs/structs.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10","^6>","^6A"]]],["^1A","cljs/tools/reader/impl/errors.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10","^[","^6J","^6<","~$cljs.tools.reader.impl.inspect"]]],["^1A","clojure/string.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10","^[","^6=","^6N"]]],["^1A","goog/string/string.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10","~$goog.dom.safe","^6Y","^6G","^6B"]]],["^1A","goog/reflect/reflect.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10"]]],["^1A","goog/labs/useragent/util.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10","^6B"]]],["^1A","goog/string/stringbuffer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10"]]],["^1A","cljs/tools/reader/reader_types.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10","^[","^6K","^6=","^6N"]]],["^1A","goog/iter/iter.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10","^6>","^6?","^6V","~$goog.math"]]],["^1A","goog/html/uncheckedconversions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10","^6?","^6W","^6R","^6X","^72","^6T","^6D","^6G","^6B","^6E"]]],["^1A","cljs/tools/reader/impl/commons.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10","^[","^6I","^6J","^6K"]]],["^1A","goog/dom/htmlelement.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10"]]],["^1A","cljs/core.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10","~$goog.math.Long","~$goog.math.Integer","^6=","^6A","^6>","~$goog.Uri","^6N"]]],["^1A","goog/html/safescript.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10","^6G","^6H","^6S","^6?"]]],["^1A","goog/html/safestylesheet.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10","^6G","^6X","^6H","^6>","^6A","^6?","^6B"]]],["^1A","goog/math/integer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10","^6P"]]],["^1A","goog/uri/utils.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10","^6?","^6="]]],["^1A","goog/string/const.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^67",["^ ","^68",null,"^69",["^G",[]],"^6:",["^10","^6?","^6H"]]]]],"~:clj-info",["^ ","jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/core.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/garden/garden/1.3.2/garden-1.3.2.jar!/garden/types.cljc",1633636901000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/cljs/tools/reader/reader_types.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/env.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/js_deps.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/inspect.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/reader_types.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/binaryage/devtools/1.0.3/devtools-1.0.3.jar!/devtools/defaults.clj",1633351665000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/passes.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/reader.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/garden/garden/1.3.2/garden-1.3.2.jar!/garden/units.cljc",1633636901000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/default_data_readers.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/errors.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map/base64_vlq.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/passes/and_or.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1633011066000,"jar:file:/Users/mehdi/.m2/repository/garden/garden/1.3.2/garden-1.3.2.jar!/garden/util.cljc",1633636901000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/tagged_literals.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/instant.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1633011066000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/compiler.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/impl.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1633011066000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/util.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1633011066000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map/base64.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1633011066000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1633011066000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/data.json/2.4.0/data.json-2.4.0.jar!/clojure/data/json.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/externs.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1633011066000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","Functions and macros for working with CSS units.","^7","garden/units.cljc","^8",1,"^9",5,"^:",1,"^;",17],"^<",["^ ","^=","^>","^?","^@","^A","^B"],"^C",["^ ","^D","^E"],"^F",["^G",["^H"]],"^I",["^ ","^D",["^ ","^J",["^K",[["^L"],["^L","^M"]]],"^6","Create a suite of functions for unit creation, conversion,\n  validation, and arithmetic.","^8",253,"^9",4,"^7","garden/units.cljc","^N","^O","^P","^E","^Q",true]],"^N","^E","^R",["^ "],"^T",null,"^U",["^ ","^V","^V","^W","^W","^X","^W","^Y","^Y","^Z","^Y","^[","^[","^10","^10"],"^11",["^G",["^12","^13"]],"^14",["^ ","^15","^V","^16","^W"],"~:defs",["^ ","~$percent",["^ ","^N","^37","^7","garden/units.cljc","^8",290,"^9",1,"^:",290,"^;",17,"^5",["^ ","^7","garden/units.cljc","^8",290,"^9",10,"^:",290,"^;",17],"~:tag","~$function"],"~$make-unit-divider",["^ ","~:protocol-inline",null,"^5",["^ ","^7","garden/units.cljc","^8",239,"^9",7,"^:",239,"^;",24,"^J",["^K",["~$quote",["^K",[["^M"]]]]],"^6","Create a division function for dividing Units."],"^N","^3G","^7","garden/units.cljc","^;",24,"~:method-params",["^K",[["^M"]]],"~:protocol-impl",null,"~:arglists-meta",["^K",[null,null]],"^9",1,"~:variadic?",false,"^8",239,"~:ret-tag","^8>","^:",239,"~:max-fixed-arity",1,"~:fn-var",true,"^J",["^K",["^8A",["^K",[["^M"]]]]],"^6","Create a division function for dividing Units."],"~$mm?",["^ ","^N","^33","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",285,"^9",1,"^8=","^8>"],"~$rad-div",["^ ","^N","^5>","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",310,"^9",1,"^8=","^8>"],"~$ch+",["^ ","^N","^5@","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",296,"^9",1,"^8=","^8>"],"~$vmax?",["^ ","^N","^3M","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",304,"^9",1,"^8=","^8>"],"~$percent*",["^ ","^N","^4Z","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",290,"^9",1,"^8=","^8>"],"~$dpi-div",["^ ","^N","^3J","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",325,"^9",1,"^8=","^8>"],"~$s*",["^ ","^N","^3;","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",315,"^9",1,"^8=","^8>"],"~$ms",["^ ","^N","^2W","^7","garden/units.cljc","^8",316,"^9",1,"^:",316,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",316,"^9",10,"^:",316,"^;",12],"^8=","^8>"],"~$ms*",["^ ","^N","^3=","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",316,"^9",1,"^8=","^8>"],"~$convertable?",["^ ","^8@",null,"^5",["^ ","^7","garden/units.cljc","^8",122,"^9",8,"^:",122,"^;",20,"~:private",true,"^J",["^K",["^8A",["^K",[["^M"]]]]],"^6","True if unit is a key of convertable-units, false otherwise."],"^8S",true,"^N","^4F","^7","garden/units.cljc","^;",20,"^8B",["^K",[["^M"]]],"^8C",null,"^8D",["^K",[null,null]],"^9",1,"^8E",false,"^8",122,"^8F","~$boolean","^:",122,"^8G",1,"^8H",true,"^J",["^K",["^8A",["^K",[["^M"]]]]],"^6","True if unit is a key of convertable-units, false otherwise."],"~$dpcm+",["^ ","^N","^4H","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",326,"^9",1,"^8=","^8>"],"~$dppx*",["^ ","^N","^2S","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",327,"^9",1,"^8=","^8>"],"~$ch*",["^ ","^N","^52","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",296,"^9",1,"^8=","^8>"],"~$mm+",["^ ","^N","^3<","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",285,"^9",1,"^8=","^8>"],"~$rad",["^ ","^N","^59","^7","garden/units.cljc","^8",310,"^9",1,"^:",310,"^;",13,"^5",["^ ","^7","garden/units.cljc","^8",310,"^9",10,"^:",310,"^;",13],"^8=","^8>"],"~$px-",["^ ","^N","^2Y","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",287,"^9",1,"^8=","^8>"],"~$cm-div",["^ ","^N","^4O","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",284,"^9",1,"^8=","^8>"],"~$turn+",["^ ","^N","^4M","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",311,"^9",1,"^8=","^8>"],"~$length?",["^ ","^8@",null,"^5",["^ ","^7","garden/units.cljc","^8",42,"^9",7,"^:",42,"^;",14,"^J",["^K",["^8A",["^K",[["~$x"]]]]]],"^N","^2[","^7","garden/units.cljc","^;",14,"^8B",["^K",[["~$x"]]],"^8C",null,"^8D",["^K",[null,null]],"^9",1,"^8E",false,"^8",42,"^8F","^8T","^:",42,"^8G",1,"^8H",true,"^J",["^K",["^8A",["^K",[["~$x"]]]]]],"~$grad",["^ ","^N","^5A","^7","garden/units.cljc","^8",309,"^9",1,"^:",309,"^;",14,"^5",["^ ","^7","garden/units.cljc","^8",309,"^9",10,"^:",309,"^;",14],"^8=","^8>"],"~$dppx-",["^ ","^N","^5Y","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",327,"^9",1,"^8=","^8>"],"~$percent+",["^ ","^N","^5Z","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",290,"^9",1,"^8=","^8>"],"~$em*",["^ ","^N","^5B","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",294,"^9",1,"^8=","^8>"],"~$ms-",["^ ","^N","^60","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",316,"^9",1,"^8=","^8>"],"~$dpi+",["^ ","^N","^5W","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",325,"^9",1,"^8=","^8>"],"~$vh+",["^ ","^N","^3E","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",302,"^9",1,"^8=","^8>"],"~$rad*",["^ ","^N","^3K","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",310,"^9",1,"^8=","^8>"],"~$kHz-div",["^ ","^N","^5M","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",321,"^9",1,"^8=","^8>"],"~$vmax+",["^ ","^N","^51","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",304,"^9",1,"^8=","^8>"],"~$vw-div",["^ ","^N","^4[","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",301,"^9",1,"^8=","^8>"],"~$mm-",["^ ","^N","^3P","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",285,"^9",1,"^8=","^8>"],"~$in",["^ ","^N","^53","^7","garden/units.cljc","^8",286,"^9",1,"^:",286,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",286,"^9",10,"^:",286,"^;",12],"^8=","^8>"],"~$pt*",["^ ","^N","^39","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",288,"^9",1,"^8=","^8>"],"~$make-unit-subtractor",["^ ","^8@",null,"^5",["^ ","^7","garden/units.cljc","^8",212,"^9",7,"^:",212,"^;",27,"^J",["^K",["^8A",["^K",[["^M"]]]]],"^6","Create a subtraction function for subtracting Units."],"^N","^47","^7","garden/units.cljc","^;",27,"^8B",["^K",[["^M"]]],"^8C",null,"^8D",["^K",[null,null]],"^9",1,"^8E",false,"^8",212,"^8F","^8>","^:",212,"^8G",1,"^8H",true,"^J",["^K",["^8A",["^K",[["^M"]]]]],"^6","Create a subtraction function for subtracting Units."],"~$mm-div",["^ ","^N","^4<","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",285,"^9",1,"^8=","^8>"],"~$vmin",["^ ","^N","^5;","^7","garden/units.cljc","^8",303,"^9",1,"^:",303,"^;",14,"^5",["^ ","^7","garden/units.cljc","^8",303,"^9",10,"^:",303,"^;",14],"^8=","^8>"],"~$mm",["^ ","^N","^41","^7","garden/units.cljc","^8",285,"^9",1,"^:",285,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",285,"^9",10,"^:",285,"^;",12],"^8=","^8>"],"~$em?",["^ ","^N","^40","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",294,"^9",1,"^8=","^8>"],"~$cm?",["^ ","^N","^4U","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",284,"^9",1,"^8=","^8>"],"~$time?",["^ ","^8@",null,"^5",["^ ","^7","garden/units.cljc","^8",52,"^9",7,"^:",52,"^;",12,"^J",["^K",["^8A",["^K",[["~$x"]]]]]],"^N","^4V","^7","garden/units.cljc","^;",12,"^8B",["^K",[["~$x"]]],"^8C",null,"^8D",["^K",[null,null]],"^9",1,"^8E",false,"^8",52,"^8F","^8T","^:",52,"^8G",1,"^8H",true,"^J",["^K",["^8A",["^K",[["~$x"]]]]]],"~$dpi?",["^ ","^N","^1Z","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",325,"^9",1,"^8=","^8>"],"~$make-unit-multiplier",["^ ","^8@",null,"^5",["^ ","^7","garden/units.cljc","^8",225,"^9",7,"^:",225,"^;",27,"^J",["^K",["^8A",["^K",[["^M"]]]]],"^6","Create a multiplication function for multiplying Units."],"^N","^4B","^7","garden/units.cljc","^;",27,"^8B",["^K",[["^M"]]],"^8C",null,"^8D",["^K",[null,null]],"^9",1,"^8E",false,"^8",225,"^8F","^8>","^:",225,"^8G",1,"^8H",true,"^J",["^K",["^8A",["^K",[["^M"]]]]],"^6","Create a multiplication function for multiplying Units."],"~$vmin-",["^ ","^N","^21","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",303,"^9",1,"^8=","^8>"],"~$unit?",["^ ","^8@",null,"^5",["^ ","^7","garden/units.cljc","^8",37,"^9",7,"^:",37,"^;",12,"^J",["^K",["^8A",["^K",[["~$x"]]]]],"^6","True if x is of type CSSUnit."],"^N","^4E","^7","garden/units.cljc","^;",12,"^8B",["^K",[["~$x"]]],"^8C",null,"^8D",["^K",[null,null]],"^9",1,"^8E",false,"^8",37,"^8F","^8T","^:",37,"^8G",1,"^8H",true,"^J",["^K",["^8A",["^K",[["~$x"]]]]],"^6","True if x is of type CSSUnit."],"~$deg-div",["^ ","^N","^4D","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",308,"^9",1,"^8=","^8>"],"~$vw-",["^ ","^N","^62","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",301,"^9",1,"^8=","^8>"],"~$ch-",["^ ","^N","^4Y","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",296,"^9",1,"^8=","^8>"],"~$kHz",["^ ","^N","^4C","^7","garden/units.cljc","^8",321,"^9",1,"^:",321,"^;",13,"^5",["^ ","^7","garden/units.cljc","^8",321,"^9",10,"^:",321,"^;",13],"^8=","^8>"],"~$convert",["^ ","^8@",null,"^5",["^ ","^7","garden/units.cljc","^8",127,"^9",8,"^:",127,"^;",15,"^8S",true,"^J",["^K",["^8A",["^K",[[["^ ","~$m","~:magnitude","~$left","~:unit"],"~$right"]]]]],"^6","Convert a Unit with :unit left to a Unit with :unit right if possible."],"^8S",true,"^N","^4X","^7","garden/units.cljc","^;",15,"^8B",["^K",[["~$p__45122","^9S"]]],"^8C",null,"^8D",["^K",[null,null]],"^9",1,"^8E",false,"^8",127,"^8F","^2H","^:",127,"^8G",2,"^8H",true,"^J",["^K",["^8A",["^K",[[["^ ","~$m","^9P","^9Q","^9R"],"^9S"]]]]],"^6","Convert a Unit with :unit left to a Unit with :unit right if possible."],"~$resolution?",["^ ","^8@",null,"^5",["^ ","^7","garden/units.cljc","^8",62,"^9",7,"^:",62,"^;",18,"^J",["^K",["^8A",["^K",[["~$x"]]]]]],"^N","^3V","^7","garden/units.cljc","^;",18,"^8B",["^K",[["~$x"]]],"^8C",null,"^8D",["^K",[null,null]],"^9",1,"^8E",false,"^8",62,"^8F","^8T","^:",62,"^8G",1,"^8H",true,"^J",["^K",["^8A",["^K",[["~$x"]]]]]],"~$ch-div",["^ ","^N","^3Y","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",296,"^9",1,"^8=","^8>"],"~$cm-",["^ ","^N","^3Z","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",284,"^9",1,"^8=","^8>"],"~$pt",["^ ","^N","^5L","^7","garden/units.cljc","^8",288,"^9",1,"^:",288,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",288,"^9",10,"^:",288,"^;",12],"^8=","^8>"],"~$frequency-units",["^ ","^N","^3[","^7","garden/units.cljc","^8",29,"^9",1,"^:",29,"^;",21,"^5",["^ ","^7","garden/units.cljc","^8",29,"^9",6,"^:",29,"^;",21],"^8=","~$cljs.core/ISet"],"~$grad?",["^ ","^N","^5H","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",309,"^9",1,"^8=","^8>"],"~$vh?",["^ ","^N","^3Q","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",302,"^9",1,"^8=","^8>"],"~$make-unit-adder",["^ ","^8@",null,"^5",["^ ","^7","garden/units.cljc","^8",198,"^9",7,"^:",198,"^;",22,"^J",["^K",["^8A",["^K",[["^M"]]]]],"^6","Create a addition function for adding Units."],"^N","^4J","^7","garden/units.cljc","^;",22,"^8B",["^K",[["^M"]]],"^8C",null,"^8D",["^K",[null,null]],"^9",1,"^8E",false,"^8",198,"^8F","^8>","^:",198,"^8G",1,"^8H",true,"^J",["^K",["^8A",["^K",[["^M"]]]]],"^6","Create a addition function for adding Units."],"~$vmin*",["^ ","^N","^1O","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",303,"^9",1,"^8=","^8>"],"~$dpcm*",["^ ","^N","^48","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",326,"^9",1,"^8=","^8>"],"~$read-unit",["^ ","^8@",null,"^5",["^ ","^7","garden/units.cljc","^8",157,"^9",7,"^:",157,"^;",16,"^J",["^K",["^8A",["^K",[["~$s"]]]]],"^6","Read a `CSSUnit` object from the string `s`."],"^N","^4:","^7","garden/units.cljc","^;",16,"^8B",["^K",[["~$s"]]],"^8C",null,"^8D",["^K",[null,null]],"^9",1,"^8E",false,"^8",157,"^8F",["^G",["^2H","~$clj-nil"]],"^:",157,"^8G",1,"^8H",true,"^J",["^K",["^8A",["^K",[["~$s"]]]]],"^6","Read a `CSSUnit` object from the string `s`."],"~$pc-",["^ ","^N","^4;","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",289,"^9",1,"^8=","^8>"],"~$rad-",["^ ","^N","^5R","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",310,"^9",1,"^8=","^8>"],"~$px*",["^ ","^N","^2D","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",287,"^9",1,"^8=","^8>"],"~$rem+",["^ ","^N","^4S","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",297,"^9",1,"^8=","^8>"],"~$Hz-",["^ ","^N","^4R","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",320,"^9",1,"^8=","^8>"],"~$length-units",["^ ","^N","^5D","^7","garden/units.cljc","^8",20,"^9",1,"^:",20,"^;",18,"^5",["^ ","^7","garden/units.cljc","^8",20,"^9",6,"^:",20,"^;",18],"^8=","^9Z"],"~$Hz+",["^ ","^N","^2L","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",320,"^9",1,"^8=","^8>"],"~$pc?",["^ ","^N","^20","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",289,"^9",1,"^8=","^8>"],"~$pt-div",["^ ","^N","^2I","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",288,"^9",1,"^8=","^8>"],"~$grad*",["^ ","^N","^1Y","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",309,"^9",1,"^8=","^8>"],"~$s+",["^ ","^N","^2E","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",315,"^9",1,"^8=","^8>"],"~$vh*",["^ ","^N","^24","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",302,"^9",1,"^8=","^8>"],"~$s?",["^ ","^N","^5E","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",315,"^9",1,"^8=","^8>"],"~$turn-div",["^ ","^N","^27","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",311,"^9",1,"^8=","^8>"],"~$vh-",["^ ","^N","^4W","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",302,"^9",1,"^8=","^8>"],"~$ex+",["^ ","^N","^26","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",295,"^9",1,"^8=","^8>"],"~$em+",["^ ","^N","^4I","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",294,"^9",1,"^8=","^8>"],"~$vmax-",["^ ","^N","^1R","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",304,"^9",1,"^8=","^8>"],"~$frequency?",["^ ","^8@",null,"^5",["^ ","^7","garden/units.cljc","^8",57,"^9",7,"^:",57,"^;",17,"^J",["^K",["^8A",["^K",[["~$x"]]]]]],"^N","^1S","^7","garden/units.cljc","^;",17,"^8B",["^K",[["~$x"]]],"^8C",null,"^8D",["^K",[null,null]],"^9",1,"^8E",false,"^8",57,"^8F","^8T","^:",57,"^8G",1,"^8H",true,"^J",["^K",["^8A",["^K",[["~$x"]]]]]],"~$vmin+",["^ ","^N","^56","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",303,"^9",1,"^8=","^8>"],"~$deg+",["^ ","^N","^1T","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",308,"^9",1,"^8=","^8>"],"~$grad+",["^ ","^N","^2=","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",309,"^9",1,"^8=","^8>"],"~$dpi*",["^ ","^N","^5<","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",325,"^9",1,"^8=","^8>"],"~$pt-",["^ ","^N","^2>","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",288,"^9",1,"^8=","^8>"],"~$deg*",["^ ","^N","^5X","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",308,"^9",1,"^8=","^8>"],"~$vmax*",["^ ","^N","^5?","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",304,"^9",1,"^8=","^8>"],"~$grad-",["^ ","^N","^32","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",309,"^9",1,"^8=","^8>"],"~$vmin?",["^ ","^N","^5=","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",303,"^9",1,"^8=","^8>"],"~$Hz*",["^ ","^N","^2C","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",320,"^9",1,"^8=","^8>"],"~$vw+",["^ ","^N","^2K","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",301,"^9",1,"^8=","^8>"],"~$vw?",["^ ","^N","^64","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",301,"^9",1,"^8=","^8>"],"~$pt+",["^ ","^N","^2Q","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",288,"^9",1,"^8=","^8>"],"~$in?",["^ ","^N","^2P","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",286,"^9",1,"^8=","^8>"],"~$dpcm-div",["^ ","^N","^5F","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",326,"^9",1,"^8=","^8>"],"~$ex*",["^ ","^N","^38","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",295,"^9",1,"^8=","^8>"],"~$Hz?",["^ ","^N","^5G","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",320,"^9",1,"^8=","^8>"],"~$px+",["^ ","^N","^2:","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",287,"^9",1,"^8=","^8>"],"~$s-div",["^ ","^N","^2T","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",315,"^9",1,"^8=","^8>"],"^H",["^ ","^N","^5N","^7","garden/units.cljc","^8",297,"^9",1,"^:",297,"^;",13,"^5",["^ ","^7","garden/units.cljc","^8",297,"^9",10,"^:",297,"^;",13],"^8=","^8>"],"~$em",["^ ","^N","^57","^7","garden/units.cljc","^8",294,"^9",1,"^:",294,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",294,"^9",10,"^:",294,"^;",12],"^8=","^8>"],"~$em-div",["^ ","^N","^54","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",294,"^9",1,"^8=","^8>"],"~$make-unit-fn",["^ ","^8@",null,"^5",["^ ","^7","garden/units.cljc","^8",170,"^9",7,"^:",170,"^;",19,"^J",["^K",["^8A",["^K",[["^M"]]]]],"^6","Creates a function for creating and converting `CSSUnit`s for the\n  given unit. If a number n is passed the function it will produce a\n  new `CSSUnit` record with a the magnitude set to n. If a `CSSUnit`\n  is passed the function will attempt to convert it."],"^N","^55","^7","garden/units.cljc","^;",19,"^8B",["^K",[["^M"]]],"^8C",null,"^8D",["^K",[null,null]],"^9",1,"^8E",false,"^8",170,"^8F","^8>","^:",170,"^8G",1,"^8H",true,"^J",["^K",["^8A",["^K",[["^M"]]]]],"^6","Creates a function for creating and converting `CSSUnit`s for the\n  given unit. If a number n is passed the function it will produce a\n  new `CSSUnit` record with a the magnitude set to n. If a `CSSUnit`\n  is passed the function will attempt to convert it."],"~$dppx",["^ ","^N","^50","^7","garden/units.cljc","^8",327,"^9",1,"^:",327,"^;",14,"^5",["^ ","^7","garden/units.cljc","^8",327,"^9",10,"^:",327,"^;",14],"^8=","^8>"],"~$px",["^ ","^N","^2;","^7","garden/units.cljc","^8",287,"^9",1,"^:",287,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",287,"^9",10,"^:",287,"^;",12],"^8=","^8>"],"~$px?",["^ ","^N","^2?","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",287,"^9",1,"^8=","^8>"],"~$vmax-div",["^ ","^N","^5S","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",304,"^9",1,"^8=","^8>"],"~$rem?",["^ ","^N","^2B","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",297,"^9",1,"^8=","^8>"],"~$vmin-div",["^ ","^N","^5T","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",303,"^9",1,"^8=","^8>"],"~$Hz",["^ ","^N","^5:","^7","garden/units.cljc","^8",320,"^9",1,"^:",320,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",320,"^9",10,"^:",320,"^;",12],"^8=","^8>"],"~$in*",["^ ","^N","^58","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",286,"^9",1,"^8=","^8>"],"~$dpcm",["^ ","^N","^5Q","^7","garden/units.cljc","^8",326,"^9",1,"^:",326,"^;",14,"^5",["^ ","^7","garden/units.cljc","^8",326,"^9",10,"^:",326,"^;",14],"^8=","^8>"],"~$dppx+",["^ ","^N","^5P","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",327,"^9",1,"^8=","^8>"],"~$ms?",["^ ","^N","^23","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",316,"^9",1,"^8=","^8>"],"~$pc",["^ ","^N","^31","^7","garden/units.cljc","^8",289,"^9",1,"^:",289,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",289,"^9",10,"^:",289,"^;",12],"^8=","^8>"],"~$pt?",["^ ","^N","^35","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",288,"^9",1,"^8=","^8>"],"~$dppx-div",["^ ","^N","^36","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",327,"^9",1,"^8=","^8>"],"~$kHz*",["^ ","^N","^3D","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",321,"^9",1,"^8=","^8>"],"~$dpi-",["^ ","^N","^34","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",325,"^9",1,"^8=","^8>"],"~$px-div",["^ ","^N","^1[","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",287,"^9",1,"^8=","^8>"],"~$mm*",["^ ","^N","^3H","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",285,"^9",1,"^8=","^8>"],"~$in-",["^ ","^N","^28","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",286,"^9",1,"^8=","^8>"],"~$pc-div",["^ ","^N","^63","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",289,"^9",1,"^8=","^8>"],"~$s",["^ ","^N","^61","^7","garden/units.cljc","^8",315,"^9",1,"^:",315,"^;",11,"^5",["^ ","^7","garden/units.cljc","^8",315,"^9",10,"^:",315,"^;",11],"^8=","^8>"],"~$vh",["^ ","^N","^25","^7","garden/units.cljc","^8",302,"^9",1,"^:",302,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",302,"^9",10,"^:",302,"^;",12],"^8=","^8>"],"~$pc*",["^ ","^N","^3>","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",289,"^9",1,"^8=","^8>"],"~$pc+",["^ ","^N","^2V","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",289,"^9",1,"^8=","^8>"],"~$ms+",["^ ","^N","^2U","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",316,"^9",1,"^8=","^8>"],"~$kHz+",["^ ","^N","^5O","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",321,"^9",1,"^8=","^8>"],"~$vw",["^ ","^N","^2X","^7","garden/units.cljc","^8",301,"^9",1,"^:",301,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",301,"^9",10,"^:",301,"^;",12],"^8=","^8>"],"~$deg",["^ ","^N","^3@","^7","garden/units.cljc","^8",308,"^9",1,"^:",308,"^;",13,"^5",["^ ","^7","garden/units.cljc","^8",308,"^9",10,"^:",308,"^;",13],"^8=","^8>"],"~$vw*",["^ ","^N","^5I","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",301,"^9",1,"^8=","^8>"],"~$kHz-",["^ ","^N","^2R","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",321,"^9",1,"^8=","^8>"],"~$ch",["^ ","^N","^3?","^7","garden/units.cljc","^8",296,"^9",1,"^:",296,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",296,"^9",10,"^:",296,"^;",12],"^8=","^8>"],"~$angular-units",["^ ","^N","^5J","^7","garden/units.cljc","^8",23,"^9",1,"^:",23,"^;",19,"^5",["^ ","^7","garden/units.cljc","^8",23,"^9",6,"^:",23,"^;",19],"^8=","^9Z"],"~$dpcm-",["^ ","^N","^3B","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",326,"^9",1,"^8=","^8>"],"~$turn",["^ ","^N","^3C","^7","garden/units.cljc","^8",311,"^9",1,"^:",311,"^;",14,"^5",["^ ","^7","garden/units.cljc","^8",311,"^9",10,"^:",311,"^;",14],"^8=","^8>"],"~$turn-",["^ ","^N","^1W","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",311,"^9",1,"^8=","^8>"],"~$Hz-div",["^ ","^N","^1X","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",320,"^9",1,"^8=","^8>"],"~$in+",["^ ","^N","^2Z","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",286,"^9",1,"^8=","^8>"],"~$dpi",["^ ","^N","^1U","^7","garden/units.cljc","^8",325,"^9",1,"^:",325,"^;",13,"^5",["^ ","^7","garden/units.cljc","^8",325,"^9",10,"^:",325,"^;",13],"^8=","^8>"],"~$cm",["^ ","^N","^30","^7","garden/units.cljc","^8",284,"^9",1,"^:",284,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",284,"^9",10,"^:",284,"^;",12],"^8=","^8>"],"~$cm*",["^ ","^N","^3I","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",284,"^9",1,"^8=","^8>"],"~$angle?",["^ ","^8@",null,"^5",["^ ","^7","garden/units.cljc","^8",47,"^9",7,"^:",47,"^;",13,"^J",["^K",["^8A",["^K",[["~$x"]]]]]],"^N","^3F","^7","garden/units.cljc","^;",13,"^8B",["^K",[["~$x"]]],"^8C",null,"^8D",["^K",[null,null]],"^9",1,"^8E",false,"^8",47,"^8F","^8T","^:",47,"^8G",1,"^8H",true,"^J",["^K",["^8A",["^K",[["~$x"]]]]]],"~$ex?",["^ ","^N","^22","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",295,"^9",1,"^8=","^8>"],"~$grad-div",["^ ","^N","^4?","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",309,"^9",1,"^8=","^8>"],"~$rem-",["^ ","^N","^3L","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",297,"^9",1,"^8=","^8>"],"~$deg?",["^ ","^N","^3W","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",308,"^9",1,"^8=","^8>"],"~$ms-div",["^ ","^N","^1Q","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",316,"^9",1,"^8=","^8>"],"~$s-",["^ ","^N","^3X","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",315,"^9",1,"^8=","^8>"],"~$resolution-units",["^ ","^N","^1P","^7","garden/units.cljc","^8",32,"^9",1,"^:",32,"^;",22,"^5",["^ ","^7","garden/units.cljc","^8",32,"^9",6,"^:",32,"^;",22],"^8=","^9Z"],"~$cm+",["^ ","^N","^3T","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",284,"^9",1,"^8=","^8>"],"~$ex",["^ ","^N","^1M","^7","garden/units.cljc","^8",295,"^9",1,"^:",295,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",295,"^9",10,"^:",295,"^;",12],"^8=","^8>"],"~$dpcm?",["^ ","^N","^3:","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",326,"^9",1,"^8=","^8>"],"~$rem*",["^ ","^N","^3R","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",297,"^9",1,"^8=","^8>"],"~$ch?",["^ ","^N","^46","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",296,"^9",1,"^8=","^8>"],"~$kHz?",["^ ","^N","^44","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",321,"^9",1,"^8=","^8>"],"~$rem-div",["^ ","^N","^42","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",297,"^9",1,"^8=","^8>"],"~$conversions",["^ ","^5",["^ ","^7","garden/units.cljc","^8",71,"^9",3,"^:",71,"^;",14,"^8S",true,"^6","Map associating CSS unit types to their conversion values."],"^8S",true,"^N","^4>","^7","garden/units.cljc","^;",14,"^9",1,"^8",69,"^:",71,"^8=","~$cljs.core/IMap","^6","Map associating CSS unit types to their conversion values."],"~$dppx?",["^ ","^N","^2J","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",327,"^9",1,"^8=","^8>"],"~$percent-div",["^ ","^N","^4T","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",290,"^9",1,"^8=","^8>"],"~$deg-",["^ ","^N","^4@","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",308,"^9",1,"^8=","^8>"],"~$rad?",["^ ","^N","^2F","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",310,"^9",1,"^8=","^8>"],"~$percent-",["^ ","^N","^4A","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",290,"^9",1,"^8=","^8>"],"~$turn*",["^ ","^N","^2M","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",311,"^9",1,"^8=","^8>"],"~$time-units",["^ ","^N","^2O","^7","garden/units.cljc","^8",26,"^9",1,"^:",26,"^;",16,"^5",["^ ","^7","garden/units.cljc","^8",26,"^9",6,"^:",26,"^;",16],"^8=","^9Z"],"~$make-unit-predicate",["^ ","^8@",null,"^5",["^ ","^7","garden/units.cljc","^8",165,"^9",7,"^:",165,"^;",26,"^J",["^K",["^8A",["^K",[["^M"]]]]],"^6","Creates a function for verifying the given unit type."],"^N","^3O","^7","garden/units.cljc","^;",26,"^8B",["^K",[["^M"]]],"^8C",null,"^8D",["^K",[null,null]],"^9",1,"^8E",false,"^8",165,"^8F","^8>","^:",165,"^8G",1,"^8H",true,"^J",["^K",["^8A",["^K",[["^M"]]]]],"^6","Creates a function for verifying the given unit type."],"~$in-div",["^ ","^N","^29","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",286,"^9",1,"^8=","^8>"],"~$ex-div",["^ ","^N","^3N","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",295,"^9",1,"^8=","^8>"],"~$turn?",["^ ","^N","^3S","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",311,"^9",1,"^8=","^8>"],"~$unit-re",["^ ","^5",["^ ","^7","garden/units.cljc","^8",154,"^9",3,"^:",154,"^;",10,"^6","Regular expression for matching a CSS unit. The magnitude\n             and unit are captured.","^8S",true],"^8S",true,"^N","^4G","^7","garden/units.cljc","^;",10,"^9",1,"^8",151,"^:",154,"^8=","~$any","^6","Regular expression for matching a CSS unit. The magnitude\n             and unit are captured."],"~$vh-div",["^ ","^N","^49","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",302,"^9",1,"^8=","^8>"],"~$percent?",["^ ","^N","^4L","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",290,"^9",1,"^8=","^8>"],"~$rad+",["^ ","^N","^43","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",310,"^9",1,"^8=","^8>"],"~$vmax",["^ ","^N","^2A","^7","garden/units.cljc","^8",304,"^9",1,"^:",304,"^;",14,"^5",["^ ","^7","garden/units.cljc","^8",304,"^9",10,"^:",304,"^;",14],"^8=","^8>"],"~$em-",["^ ","^N","^4N","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",294,"^9",1,"^8=","^8>"],"~$ex-",["^ ","^N","^45","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",295,"^9",1,"^8=","^8>"]],"^13",["^ ","^E","^E","^[","^[","^V","^V"],"~:cljs.analyzer/constants",["^ ","^11",["^G",["~:mm","~:vmin","~:kHz","~:given","~:pt","~:else","^9R","~:%","~:px","~:rem","~:em","~:dppx","~:dpcm","~:type","~:Hz","~:pc","^9P","~:vh","~:s","~:ch","~:vw","~:deg","~:dpi","~:cm","~:turn","~:ex","~:vmax","~:ms","~:rad","~:grad","~:in"]],"~:order",["^<S","^<W","^<Y","^=4","^=:","^=A","^=8","^=;","^=?","^=@","~:s","^=>","^<U","^=3","^=0","^=1","^=9","^9R","^<Z","^<[","^9P","^<X","^<V","^=2","~:%","^=<","^=6","^=7","^=5","^<T","^=="]],"^1=",["^ ","^12",["^G",[]],"^13",["^G",[]]],"^1>",["^ "],"^1?",["^10","^[","^V","^W","^Y"]],"^P","^E","~:ns-specs",["^ "],"~:ns-spec-vars",["^G",[]],"~:compiler-options",["^66",[["^=E","~:static-fns"],true,["^=E","~:shadow-tweaks"],null,["^=E","~:source-map-inline"],null,["^=E","~:elide-asserts"],false,["^=E","~:optimize-constants"],null,["^=E","^1D"],null,["^=E","~:external-config"],null,["^=E","~:tooling-config"],null,["^=E","~:emit-constants"],null,["^=E","~:load-tests"],null,["^=E","~:form-size-threshold"],null,["^=E","~:data-readers"],null,["^=E","~:infer-externs"],"~:auto",["^=E","^1F"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^=E","~:fn-invoke-direct"],null,["^=E","~:source-map"],"/dev/null"]]]