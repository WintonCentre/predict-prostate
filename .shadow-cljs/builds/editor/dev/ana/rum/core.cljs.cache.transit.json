["^ ","~:output",["^ ","~:js","goog.provide('rum.core');\n/**\n * Given React component, returns Rum state associated with it.\n */\nrum.core.state = (function rum$core$state(comp){\nreturn goog.object.get(comp.state,\":rum/state\");\n});\nrum.core.extend_BANG_ = (function rum$core$extend_BANG_(obj,props){\nvar seq__31421 = cljs.core.seq(props);\nvar chunk__31423 = null;\nvar count__31424 = (0);\nvar i__31425 = (0);\nwhile(true){\nif((i__31425 < count__31424)){\nvar vec__31433 = chunk__31423.cljs$core$IIndexed$_nth$arity$2(null,i__31425);\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31433,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31433,(1),null);\nif((!((v == null)))){\ngoog.object.set(obj,cljs.core.name(k),cljs.core.clj__GT_js(v));\n\n\nvar G__31836 = seq__31421;\nvar G__31837 = chunk__31423;\nvar G__31838 = count__31424;\nvar G__31839 = (i__31425 + (1));\nseq__31421 = G__31836;\nchunk__31423 = G__31837;\ncount__31424 = G__31838;\ni__31425 = G__31839;\ncontinue;\n} else {\nvar G__31840 = seq__31421;\nvar G__31841 = chunk__31423;\nvar G__31842 = count__31424;\nvar G__31843 = (i__31425 + (1));\nseq__31421 = G__31840;\nchunk__31423 = G__31841;\ncount__31424 = G__31842;\ni__31425 = G__31843;\ncontinue;\n}\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__31421);\nif(temp__5753__auto__){\nvar seq__31421__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__31421__$1)){\nvar c__4638__auto__ = cljs.core.chunk_first(seq__31421__$1);\nvar G__31846 = cljs.core.chunk_rest(seq__31421__$1);\nvar G__31847 = c__4638__auto__;\nvar G__31848 = cljs.core.count(c__4638__auto__);\nvar G__31849 = (0);\nseq__31421 = G__31846;\nchunk__31423 = G__31847;\ncount__31424 = G__31848;\ni__31425 = G__31849;\ncontinue;\n} else {\nvar vec__31447 = cljs.core.first(seq__31421__$1);\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31447,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31447,(1),null);\nif((!((v == null)))){\ngoog.object.set(obj,cljs.core.name(k),cljs.core.clj__GT_js(v));\n\n\nvar G__31855 = cljs.core.next(seq__31421__$1);\nvar G__31856 = null;\nvar G__31857 = (0);\nvar G__31858 = (0);\nseq__31421 = G__31855;\nchunk__31423 = G__31856;\ncount__31424 = G__31857;\ni__31425 = G__31858;\ncontinue;\n} else {\nvar G__31860 = cljs.core.next(seq__31421__$1);\nvar G__31861 = null;\nvar G__31862 = (0);\nvar G__31863 = (0);\nseq__31421 = G__31860;\nchunk__31423 = G__31861;\ncount__31424 = G__31862;\ni__31425 = G__31863;\ncontinue;\n}\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\nrum.core.build_class = (function rum$core$build_class(render,mixins,display_name){\nif(goog.DEBUG){\nvar mixins_31865__$1 = cljs.core.set(cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.keys,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([mixins], 0)));\nif(clojure.set.subset_QMARK_(mixins_31865__$1,rum.specs.mixins)){\n} else {\nthrow (new Error([\"Assert failed: \",[cljs.core.str.cljs$core$IFn$_invoke$arity$1(display_name),\" declares invalid mixin keys \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(mixins_31865__$1,rum.specs.mixins)),\", \",\"did you mean one of \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(rum.specs.mixins)].join(''),\"\\n\",\"(set/subset? mixins rum.specs/mixins)\"].join('')));\n}\n\ncljs.core.run_BANG_((function (p1__31458_SHARP_){\nreturn console.warn(p1__31458_SHARP_);\n}),cljs.core.vals(cljs.core.select_keys(rum.specs.deprecated_mixins,mixins_31865__$1)));\n} else {\n}\n\nvar init = rum.util.collect(new cljs.core.Keyword(null,\"init\",\"init\",-1875481434),mixins);\nvar before_render = rum.util.collect_STAR_(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"will-mount\",\"will-mount\",-434633071),new cljs.core.Keyword(\"unsafe\",\"will-mount\",\"unsafe/will-mount\",265089051),new cljs.core.Keyword(null,\"before-render\",\"before-render\",71256781)], null),mixins);\nvar render__$1 = render;\nvar wrap_render = rum.util.collect(new cljs.core.Keyword(null,\"wrap-render\",\"wrap-render\",1782000986),mixins);\nvar wrapped_render = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__31460_SHARP_,p2__31459_SHARP_){\nreturn (p2__31459_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__31459_SHARP_.cljs$core$IFn$_invoke$arity$1(p1__31460_SHARP_) : p2__31459_SHARP_.call(null,p1__31460_SHARP_));\n}),render__$1,wrap_render);\nvar did_mount = rum.util.collect_STAR_(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"did-mount\",\"did-mount\",918232960),new cljs.core.Keyword(null,\"after-render\",\"after-render\",1997533433)], null),mixins);\nvar will_remount = rum.util.collect_STAR_(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"did-remount\",\"did-remount\",1362550500),new cljs.core.Keyword(null,\"will-remount\",\"will-remount\",-141604325)], null),mixins);\nvar should_update = rum.util.collect(new cljs.core.Keyword(null,\"should-update\",\"should-update\",-1292781795),mixins);\nvar before_update = rum.util.collect_STAR_(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"unsafe\",\"will-update\",\"unsafe/will-update\",1505013232),new cljs.core.Keyword(\"unsafe\",\"will-update\",\"unsafe/will-update\",1505013232),new cljs.core.Keyword(null,\"before-render\",\"before-render\",71256781)], null),mixins);\nvar did_update = rum.util.collect_STAR_(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"did-update\",\"did-update\",-2143702256),new cljs.core.Keyword(null,\"after-render\",\"after-render\",1997533433)], null),mixins);\nvar did_catch = rum.util.collect(new cljs.core.Keyword(null,\"did-catch\",\"did-catch\",2139522313),mixins);\nvar will_unmount = rum.util.collect(new cljs.core.Keyword(null,\"will-unmount\",\"will-unmount\",-808051550),mixins);\nvar child_context = rum.util.collect(new cljs.core.Keyword(null,\"child-context\",\"child-context\",-1375270295),mixins);\nvar class_props = cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(cljs.core.merge,rum.util.collect(new cljs.core.Keyword(null,\"class-properties\",\"class-properties\",1351279702),mixins));\nvar static_props = cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(cljs.core.merge,rum.util.collect(new cljs.core.Keyword(null,\"static-properties\",\"static-properties\",-577838503),mixins));\nvar ctor = (function (props){\nvar this$ = this;\ngoog.object.set(this$,\"state\",({\":rum/state\": cljs.core.volatile_BANG_(rum.util.call_all.cljs$core$IFn$_invoke$arity$variadic(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(goog.object.get(props,\":rum/initial-state\"),new cljs.core.Keyword(\"rum\",\"react-component\",\"rum/react-component\",-1879897248),this$),init,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([props], 0)))}));\n\nreturn React.Component.call(this$,props);\n});\nvar _ = goog.inherits(ctor,React.Component);\nvar prototype = goog.object.get(ctor,\"prototype\");\nif(cljs.core.empty_QMARK_(before_render)){\n} else {\ngoog.object.set(prototype,\"UNSAFE_componentWillMount\",(function (){\nvar this$ = this;\nreturn cljs.core._vreset_BANG_(rum.core.state(this$),rum.util.call_all(cljs.core._deref(rum.core.state(this$)),before_render));\n}));\n}\n\nif(cljs.core.empty_QMARK_(did_mount)){\n} else {\ngoog.object.set(prototype,\"componentDidMount\",(function (){\nvar this$ = this;\nreturn cljs.core._vreset_BANG_(rum.core.state(this$),rum.util.call_all(cljs.core._deref(rum.core.state(this$)),did_mount));\n}));\n}\n\ngoog.object.set(prototype,\"UNSAFE_componentWillReceiveProps\",(function (next_props){\nvar this$ = this;\nvar old_state = cljs.core.deref(rum.core.state(this$));\nvar state = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([old_state,goog.object.get(next_props,\":rum/initial-state\")], 0));\nvar next_state = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__31462_SHARP_,p2__31461_SHARP_){\nreturn (p2__31461_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__31461_SHARP_.cljs$core$IFn$_invoke$arity$2(old_state,p1__31462_SHARP_) : p2__31461_SHARP_.call(null,old_state,p1__31462_SHARP_));\n}),state,will_remount);\nreturn this$.setState(({\":rum/state\": cljs.core.volatile_BANG_(next_state)}));\n}));\n\nif(cljs.core.empty_QMARK_(should_update)){\n} else {\ngoog.object.set(prototype,\"shouldComponentUpdate\",(function (next_props,next_state){\nvar this$ = this;\nvar old_state = cljs.core.deref(rum.core.state(this$));\nvar new_state = cljs.core.deref(goog.object.get(next_state,\":rum/state\"));\nvar or__4212__auto__ = cljs.core.some((function (p1__31463_SHARP_){\nreturn (p1__31463_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p1__31463_SHARP_.cljs$core$IFn$_invoke$arity$2(old_state,new_state) : p1__31463_SHARP_.call(null,old_state,new_state));\n}),should_update);\nif(cljs.core.truth_(or__4212__auto__)){\nreturn or__4212__auto__;\n} else {\nreturn false;\n}\n}));\n}\n\nif(cljs.core.empty_QMARK_(before_update)){\n} else {\ngoog.object.set(prototype,\"UNSAFE_componentWillUpdate\",(function (___$1,next_state){\nvar this$ = this;\nvar new_state = goog.object.get(next_state,\":rum/state\");\nreturn cljs.core._vreset_BANG_(new_state,rum.util.call_all(cljs.core._deref(new_state),before_update));\n}));\n}\n\ngoog.object.set(prototype,\"render\",(function (){\nvar this$ = this;\nvar state = rum.core.state(this$);\nvar vec__31473 = (function (){var G__31476 = cljs.core.deref(state);\nreturn (wrapped_render.cljs$core$IFn$_invoke$arity$1 ? wrapped_render.cljs$core$IFn$_invoke$arity$1(G__31476) : wrapped_render.call(null,G__31476));\n})();\nvar dom = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31473,(0),null);\nvar next_state = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31473,(1),null);\ncljs.core.vreset_BANG_(state,next_state);\n\nreturn dom;\n}));\n\nif(cljs.core.empty_QMARK_(did_update)){\n} else {\ngoog.object.set(prototype,\"componentDidUpdate\",(function (___$1,___$2){\nvar this$ = this;\nreturn cljs.core._vreset_BANG_(rum.core.state(this$),rum.util.call_all(cljs.core._deref(rum.core.state(this$)),did_update));\n}));\n}\n\nif(cljs.core.empty_QMARK_(did_catch)){\n} else {\ngoog.object.set(prototype,\"componentDidCatch\",(function (error,info){\nvar this$ = this;\ncljs.core._vreset_BANG_(rum.core.state(this$),rum.util.call_all.cljs$core$IFn$_invoke$arity$variadic(cljs.core._deref(rum.core.state(this$)),did_catch,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([error,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"rum\",\"component-stack\",\"rum/component-stack\",2037541138),goog.object.get(info,\"componentStack\")], null)], 0)));\n\nreturn this$.forceUpdate();\n}));\n}\n\ngoog.object.set(prototype,\"componentWillUnmount\",(function (){\nvar this$ = this;\nif(cljs.core.empty_QMARK_(will_unmount)){\n} else {\ncljs.core._vreset_BANG_(rum.core.state(this$),rum.util.call_all(cljs.core._deref(rum.core.state(this$)),will_unmount));\n}\n\nreturn goog.object.set(this$,\":rum/unmounted?\",true);\n}));\n\nif(cljs.core.empty_QMARK_(child_context)){\n} else {\ngoog.object.set(prototype,\"getChildContext\",(function (){\nvar this$ = this;\nvar state = cljs.core.deref(rum.core.state(this$));\nreturn cljs.core.clj__GT_js(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__31464_SHARP_){\nreturn (p1__31464_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__31464_SHARP_.cljs$core$IFn$_invoke$arity$1(state) : p1__31464_SHARP_.call(null,state));\n})),cljs.core.merge,cljs.core.PersistentArrayMap.EMPTY,child_context));\n}));\n}\n\nrum.core.extend_BANG_(prototype,class_props);\n\ngoog.object.set(ctor,\"displayName\",display_name);\n\nrum.core.extend_BANG_(ctor,static_props);\n\nreturn ctor;\n});\nrum.core.set_meta_BANG_ = (function rum$core$set_meta_BANG_(c){\nvar f = (function (){\nvar ctr = (c.cljs$core$IFn$_invoke$arity$0 ? c.cljs$core$IFn$_invoke$arity$0() : c.call(null));\nreturn ctr.apply(ctr,arguments);\n});\nvar x31481_31876 = f;\n(x31481_31876.cljs$core$IMeta$ = cljs.core.PROTOCOL_SENTINEL);\n\n(x31481_31876.cljs$core$IMeta$_meta$arity$1 = (function (_){\nvar ___$1 = this;\nreturn cljs.core.meta((c.cljs$core$IFn$_invoke$arity$0 ? c.cljs$core$IFn$_invoke$arity$0() : c.call(null)));\n}));\n\n\nreturn f;\n});\n/**\n * Wraps component construction in a way so that Google Closure Compiler\n * can properly recognize and elide unused components. The extra `set-meta`\n * fn is needed so that the compiler can properly detect that all functions\n * are side effect free.\n */\nrum.core.lazy_build = (function rum$core$lazy_build(ctor,render,mixins,display_name){\nvar bf = (function (){\nreturn (ctor.cljs$core$IFn$_invoke$arity$3 ? ctor.cljs$core$IFn$_invoke$arity$3(render,mixins,display_name) : ctor.call(null,render,mixins,display_name));\n});\nvar c = goog.functions.cacheReturnValue(bf);\nreturn rum.core.set_meta_BANG_(c);\n});\nrum.core.build_ctor = (function rum$core$build_ctor(render,mixins,display_name){\nvar class$ = rum.core.build_class(render,mixins,display_name);\nvar key_fn = cljs.core.first(rum.util.collect(new cljs.core.Keyword(null,\"key-fn\",\"key-fn\",-636154479),mixins));\nvar ctor = (((!((key_fn == null))))?(function() { \nvar G__31878__delegate = function (args){\nvar props = ({\":rum/initial-state\": new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"rum\",\"args\",\"rum/args\",1315791754),args], null), \"key\": cljs.core.apply.cljs$core$IFn$_invoke$arity$2(key_fn,args)});\nreturn React.createElement(class$,props);\n};\nvar G__31878 = function (var_args){\nvar args = null;\nif (arguments.length > 0) {\nvar G__31879__i = 0, G__31879__a = new Array(arguments.length -  0);\nwhile (G__31879__i < G__31879__a.length) {G__31879__a[G__31879__i] = arguments[G__31879__i + 0]; ++G__31879__i;}\n  args = new cljs.core.IndexedSeq(G__31879__a,0,null);\n} \nreturn G__31878__delegate.call(this,args);};\nG__31878.cljs$lang$maxFixedArity = 0;\nG__31878.cljs$lang$applyTo = (function (arglist__31880){\nvar args = cljs.core.seq(arglist__31880);\nreturn G__31878__delegate(args);\n});\nG__31878.cljs$core$IFn$_invoke$arity$variadic = G__31878__delegate;\nreturn G__31878;\n})()\n:(function() { \nvar G__31881__delegate = function (args){\nvar props = ({\":rum/initial-state\": new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"rum\",\"args\",\"rum/args\",1315791754),args], null)});\nreturn React.createElement(class$,props);\n};\nvar G__31881 = function (var_args){\nvar args = null;\nif (arguments.length > 0) {\nvar G__31882__i = 0, G__31882__a = new Array(arguments.length -  0);\nwhile (G__31882__i < G__31882__a.length) {G__31882__a[G__31882__i] = arguments[G__31882__i + 0]; ++G__31882__i;}\n  args = new cljs.core.IndexedSeq(G__31882__a,0,null);\n} \nreturn G__31881__delegate.call(this,args);};\nG__31881.cljs$lang$maxFixedArity = 0;\nG__31881.cljs$lang$applyTo = (function (arglist__31883){\nvar args = cljs.core.seq(arglist__31883);\nreturn G__31881__delegate(args);\n});\nG__31881.cljs$core$IFn$_invoke$arity$variadic = G__31881__delegate;\nreturn G__31881;\n})()\n);\nreturn cljs.core.with_meta(ctor,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"rum\",\"class\",\"rum/class\",-2030775258),class$], null));\n});\nrum.core.memo_compare_props = (function rum$core$memo_compare_props(prev_props,next_props){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((prev_props[\":rum/args\"]),(next_props[\":rum/args\"]));\n});\nrum.core.react_memo = (function rum$core$react_memo(f){\nvar temp__5755__auto__ = React.memo;\nif((temp__5755__auto__ == null)){\nreturn f;\n} else {\nvar memo = temp__5755__auto__;\nreturn (memo.cljs$core$IFn$_invoke$arity$2 ? memo.cljs$core$IFn$_invoke$arity$2(f,rum.core.memo_compare_props) : memo.call(null,f,rum.core.memo_compare_props));\n}\n});\nrum.core.build_defc = (function rum$core$build_defc(render_body,mixins,display_name){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(mixins,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [rum.core.static$], null))){\nvar class$ = (function (props){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(render_body,(props[\":rum/args\"]));\n});\nvar _ = (class$[\"displayName\"] = display_name);\nvar memo_class = rum.core.react_memo(class$);\nvar ctor = (function() { \nvar G__31887__delegate = function (args){\nreturn React.createElement(memo_class,({\":rum/args\": args}));\n};\nvar G__31887 = function (var_args){\nvar args = null;\nif (arguments.length > 0) {\nvar G__31888__i = 0, G__31888__a = new Array(arguments.length -  0);\nwhile (G__31888__i < G__31888__a.length) {G__31888__a[G__31888__i] = arguments[G__31888__i + 0]; ++G__31888__i;}\n  args = new cljs.core.IndexedSeq(G__31888__a,0,null);\n} \nreturn G__31887__delegate.call(this,args);};\nG__31887.cljs$lang$maxFixedArity = 0;\nG__31887.cljs$lang$applyTo = (function (arglist__31889){\nvar args = cljs.core.seq(arglist__31889);\nreturn G__31887__delegate(args);\n});\nG__31887.cljs$core$IFn$_invoke$arity$variadic = G__31887__delegate;\nreturn G__31887;\n})()\n;\nreturn cljs.core.with_meta(ctor,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"rum\",\"class\",\"rum/class\",-2030775258),memo_class], null));\n} else {\nif(cljs.core.empty_QMARK_(mixins)){\nvar class$ = (function (props){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(render_body,(props[\":rum/args\"]));\n});\nvar _ = (class$[\"displayName\"] = display_name);\nvar ctor = (function() { \nvar G__31890__delegate = function (args){\nreturn React.createElement(class$,({\":rum/args\": args}));\n};\nvar G__31890 = function (var_args){\nvar args = null;\nif (arguments.length > 0) {\nvar G__31891__i = 0, G__31891__a = new Array(arguments.length -  0);\nwhile (G__31891__i < G__31891__a.length) {G__31891__a[G__31891__i] = arguments[G__31891__i + 0]; ++G__31891__i;}\n  args = new cljs.core.IndexedSeq(G__31891__a,0,null);\n} \nreturn G__31890__delegate.call(this,args);};\nG__31890.cljs$lang$maxFixedArity = 0;\nG__31890.cljs$lang$applyTo = (function (arglist__31892){\nvar args = cljs.core.seq(arglist__31892);\nreturn G__31890__delegate(args);\n});\nG__31890.cljs$core$IFn$_invoke$arity$variadic = G__31890__delegate;\nreturn G__31890;\n})()\n;\nreturn cljs.core.with_meta(ctor,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"rum\",\"class\",\"rum/class\",-2030775258),class$], null));\n} else {\nvar render = (function (state){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$2(render_body,new cljs.core.Keyword(\"rum\",\"args\",\"rum/args\",1315791754).cljs$core$IFn$_invoke$arity$1(state)),state], null);\n});\nreturn rum.core.build_ctor(render,mixins,display_name);\n\n}\n}\n});\nrum.core.build_defcs = (function rum$core$build_defcs(render_body,mixins,display_name){\nvar render = (function (state){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$3(render_body,state,new cljs.core.Keyword(\"rum\",\"args\",\"rum/args\",1315791754).cljs$core$IFn$_invoke$arity$1(state)),state], null);\n});\nreturn rum.core.build_ctor(render,mixins,display_name);\n});\nrum.core.build_defcc = (function rum$core$build_defcc(render_body,mixins,display_name){\nvar render = (function (state){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$3(render_body,new cljs.core.Keyword(\"rum\",\"react-component\",\"rum/react-component\",-1879897248).cljs$core$IFn$_invoke$arity$1(state),new cljs.core.Keyword(\"rum\",\"args\",\"rum/args\",1315791754).cljs$core$IFn$_invoke$arity$1(state)),state], null);\n});\nreturn rum.core.build_ctor(render,mixins,display_name);\n});\nrum.core.schedule = (function (){var or__4212__auto__ = (function (){var and__4210__auto__ = (typeof window !== 'undefined');\nif(and__4210__auto__){\nvar or__4212__auto__ = window.requestAnimationFrame;\nif(cljs.core.truth_(or__4212__auto__)){\nreturn or__4212__auto__;\n} else {\nvar or__4212__auto____$1 = window.webkitRequestAnimationFrame;\nif(cljs.core.truth_(or__4212__auto____$1)){\nreturn or__4212__auto____$1;\n} else {\nvar or__4212__auto____$2 = window.mozRequestAnimationFrame;\nif(cljs.core.truth_(or__4212__auto____$2)){\nreturn or__4212__auto____$2;\n} else {\nreturn window.msRequestAnimationFrame;\n}\n}\n}\n} else {\nreturn and__4210__auto__;\n}\n})();\nif(cljs.core.truth_(or__4212__auto__)){\nreturn or__4212__auto__;\n} else {\nreturn (function (p1__31529_SHARP_){\nreturn setTimeout(p1__31529_SHARP_,(16));\n});\n}\n})();\nrum.core.batch = (function (){var or__4212__auto__ = (((typeof ReactNative !== 'undefined'))?ReactNative.unstable_batchedUpdates:null);\nif(cljs.core.truth_(or__4212__auto__)){\nreturn or__4212__auto__;\n} else {\nvar or__4212__auto____$1 = (((typeof ReactDOM !== 'undefined'))?ReactDOM.unstable_batchedUpdates:null);\nif(cljs.core.truth_(or__4212__auto____$1)){\nreturn or__4212__auto____$1;\n} else {\nreturn (function (f,a){\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(a) : f.call(null,a));\n});\n}\n}\n})();\nrum.core.empty_queue = cljs.core.PersistentVector.EMPTY;\nrum.core.render_queue = cljs.core.volatile_BANG_(rum.core.empty_queue);\nrum.core.render_one = (function rum$core$render_one(comp){\nif((((!((comp == null)))) && (cljs.core.not(goog.object.get(comp,\":rum/unmounted?\"))))){\nreturn comp.forceUpdate();\n} else {\nreturn null;\n}\n});\nrum.core.render_all = (function rum$core$render_all(queue){\nreturn cljs.core.run_BANG_(rum.core.render_one,queue);\n});\nrum.core.render = (function rum$core$render(){\nvar queue = cljs.core.deref(rum.core.render_queue);\ncljs.core.vreset_BANG_(rum.core.render_queue,rum.core.empty_queue);\n\nreturn (rum.core.batch.cljs$core$IFn$_invoke$arity$2 ? rum.core.batch.cljs$core$IFn$_invoke$arity$2(rum.core.render_all,queue) : rum.core.batch.call(null,rum.core.render_all,queue));\n});\nrum.core.sync_update_QMARK_ = cljs.core.volatile_BANG_(false);\n/**\n * Schedules react component to be rendered on next animation frame,\n *   unless the requested update happens to be in a sync-update phase.\n */\nrum.core.request_render = (function rum$core$request_render(component){\nif(cljs.core.truth_(cljs.core.deref(rum.core.sync_update_QMARK_))){\nreturn rum.core.render_one(component);\n} else {\nif(cljs.core.empty_QMARK_(cljs.core.deref(rum.core.render_queue))){\n(rum.core.schedule.cljs$core$IFn$_invoke$arity$1 ? rum.core.schedule.cljs$core$IFn$_invoke$arity$1(rum.core.render) : rum.core.schedule.call(null,rum.core.render));\n} else {\n}\n\nreturn rum.core.render_queue.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(rum.core.render_queue.cljs$core$IDeref$_deref$arity$1(null),component));\n}\n});\nrum.core.mark_sync_update = (function rum$core$mark_sync_update(f){\nif(cljs.core.fn_QMARK_(f)){\nreturn (function rum$core$mark_sync_update_$_wrapped_handler(e){\nvar _ = cljs.core.vreset_BANG_(rum.core.sync_update_QMARK_,true);\nvar ret = (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(e) : f.call(null,e));\nvar ___$1 = cljs.core.vreset_BANG_(rum.core.sync_update_QMARK_,false);\nreturn ret;\n});\n} else {\nreturn f;\n}\n});\ngoog.exportSymbol('rum.core.mark_sync_update', rum.core.mark_sync_update);\n/**\n * Add element to the DOM tree. Idempotent. Subsequent mounts will just update element.\n */\nrum.core.mount = (function rum$core$mount(element,node){\nReactDOM.render(element,node);\n\nreturn null;\n});\n/**\n * Removes component from the DOM tree.\n */\nrum.core.unmount = (function rum$core$unmount(node){\nreturn ReactDOM.unmountComponentAtNode(node);\n});\n/**\n * Same as [[mount]] but must be called on DOM tree already rendered by a server via [[render-html]].\n */\nrum.core.hydrate = (function rum$core$hydrate(element,node){\nreturn ReactDOM.hydrate(element,node);\n});\n/**\n * Render `element` in a DOM `node` that is ouside of current DOM hierarchy.\n */\nrum.core.portal = (function rum$core$portal(element,node){\nreturn ReactDOM.createPortal(element,node);\n});\nrum.core.create_context = (function rum$core$create_context(default_value){\nreturn React.createContext(default_value);\n});\n/**\n * Adds React key to element.\n * \n * ```\n * (rum/defc label [text] [:div text])\n * \n * (-> (label)\n *     (rum/with-key \"abc\")\n *     (rum/mount js/document.body))\n * ```\n */\nrum.core.with_key = (function rum$core$with_key(element,key){\nreturn React.cloneElement(element,({\"key\": key}),null);\n});\n/**\n * Adds React ref (string or callback) to element.\n * \n * ```\n * (rum/defc label [text] [:div text])\n * \n * (-> (label)\n *     (rum/with-ref \"abc\")\n *     (rum/mount js/document.body))\n * ```\n */\nrum.core.with_ref = (function rum$core$with_ref(element,ref){\nreturn React.cloneElement(element,({\"ref\": ref}),null);\n});\n/**\n * Usage of this function is discouraged. Use :ref callback instead.\n *   Given state, returns top-level DOM node of component. Call it during lifecycle callbacks. Can’t be called during render.\n */\nrum.core.dom_node = (function rum$core$dom_node(state){\nreturn ReactDOM.findDOMNode(new cljs.core.Keyword(\"rum\",\"react-component\",\"rum/react-component\",-1879897248).cljs$core$IFn$_invoke$arity$1(state));\n});\n/**\n * DEPRECATED: Use :ref (fn [dom-or-nil]) callback instead. See rum issue #124\n *   Given state and ref handle, returns React component.\n */\nrum.core.ref = (function rum$core$ref(state,key){\nreturn ((new cljs.core.Keyword(\"rum\",\"react-component\",\"rum/react-component\",-1879897248).cljs$core$IFn$_invoke$arity$1(state)[\"refs\"])[cljs.core.name(key)]);\n});\n/**\n * DEPRECATED: Use :ref (fn [dom-or-nil]) callback instead. See rum issue #124\n *   Given state and ref handle, returns DOM node associated with ref.\n */\nrum.core.ref_node = (function rum$core$ref_node(state,key){\nreturn ReactDOM.findDOMNode(rum.core.ref(state,cljs.core.name(key)));\n});\n/**\n * Mixin. Will avoid re-render if none of component’s arguments have changed. Does equality check (`=`) on all arguments.\n *   \n * ```\n * (rum/defc label < rum/static\n *   [text]\n *   [:div text])\n *   \n * (rum/mount (label \"abc\") js/document.body)\n * \n * ;; def != abc, will re-render\n * (rum/mount (label \"def\") js/document.body)\n * \n * ;; def == def, won’t re-render\n * (rum/mount (label \"def\") js/document.body)\n * ```\n */\nrum.core.static$ = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"should-update\",\"should-update\",-1292781795),(function (old_state,new_state){\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"rum\",\"args\",\"rum/args\",1315791754).cljs$core$IFn$_invoke$arity$1(old_state),new cljs.core.Keyword(\"rum\",\"args\",\"rum/args\",1315791754).cljs$core$IFn$_invoke$arity$1(new_state));\n})], null);\n/**\n * Mixin constructor. Adds an atom to component’s state that can be used to keep stuff during component’s lifecycle. Component will be re-rendered if atom’s value changes. Atom is stored under user-provided key or under `:rum/local` by default.\n *   \n * ```\n * (rum/defcs counter < (rum/local 0 :cnt)\n *   [state label]\n *   (let [*cnt (:cnt state)]\n *     [:div {:on-click (fn [_] (swap! *cnt inc))}\n *       label @*cnt]))\n * \n * (rum/mount (counter \"Click count: \"))\n * ```\n */\nrum.core.local = (function rum$core$local(var_args){\nvar G__31604 = arguments.length;\nswitch (G__31604) {\ncase 1:\nreturn rum.core.local.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rum.core.local.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rum.core.local.cljs$core$IFn$_invoke$arity$1 = (function (initial){\nreturn rum.core.local.cljs$core$IFn$_invoke$arity$2(initial,new cljs.core.Keyword(\"rum\",\"local\",\"rum/local\",-1497916586));\n}));\n\n(rum.core.local.cljs$core$IFn$_invoke$arity$2 = (function (initial,key){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"will-mount\",\"will-mount\",-434633071),(function (state){\nvar local_state = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(initial);\nvar component = new cljs.core.Keyword(\"rum\",\"react-component\",\"rum/react-component\",-1879897248).cljs$core$IFn$_invoke$arity$1(state);\ncljs.core.add_watch(local_state,key,(function (_,___$1,p,n){\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(p,n)){\nreturn rum.core.request_render(component);\n} else {\nreturn null;\n}\n}));\n\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(state,key,local_state);\n})], null);\n}));\n\n(rum.core.local.cljs$lang$maxFixedArity = 2);\n\n/**\n * Mixin. Works in conjunction with [[react]].\n *   \n * ```\n * (rum/defc comp < rum/reactive\n *   [*counter]\n *   [:div (rum/react counter)])\n * \n * (def *counter (atom 0))\n * (rum/mount (comp *counter) js/document.body)\n * (swap! *counter inc) ;; will force comp to re-render\n * ```\n */\nrum.core.reactive = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"init\",\"init\",-1875481434),(function (state,props){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(state,new cljs.core.Keyword(\"rum.reactive\",\"key\",\"rum.reactive/key\",-803425142),cljs.core.random_uuid());\n}),new cljs.core.Keyword(null,\"wrap-render\",\"wrap-render\",1782000986),(function (render_fn){\nreturn (function (state){\nvar _STAR_reactions_STAR__orig_val__31611 = rum.core._STAR_reactions_STAR_;\nvar _STAR_reactions_STAR__temp_val__31612 = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);\n(rum.core._STAR_reactions_STAR_ = _STAR_reactions_STAR__temp_val__31612);\n\ntry{var comp = new cljs.core.Keyword(\"rum\",\"react-component\",\"rum/react-component\",-1879897248).cljs$core$IFn$_invoke$arity$1(state);\nvar old_reactions = new cljs.core.Keyword(\"rum.reactive\",\"refs\",\"rum.reactive/refs\",-814076325).cljs$core$IFn$_invoke$arity$2(state,cljs.core.PersistentHashSet.EMPTY);\nvar vec__31633 = (render_fn.cljs$core$IFn$_invoke$arity$1 ? render_fn.cljs$core$IFn$_invoke$arity$1(state) : render_fn.call(null,state));\nvar dom = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31633,(0),null);\nvar next_state = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31633,(1),null);\nvar new_reactions = cljs.core.deref(rum.core._STAR_reactions_STAR_);\nvar key = new cljs.core.Keyword(\"rum.reactive\",\"key\",\"rum.reactive/key\",-803425142).cljs$core$IFn$_invoke$arity$1(state);\nvar seq__31650_31913 = cljs.core.seq(old_reactions);\nvar chunk__31651_31914 = null;\nvar count__31652_31915 = (0);\nvar i__31653_31916 = (0);\nwhile(true){\nif((i__31653_31916 < count__31652_31915)){\nvar ref_31917 = chunk__31651_31914.cljs$core$IIndexed$_nth$arity$2(null,i__31653_31916);\nif(cljs.core.contains_QMARK_(new_reactions,ref_31917)){\n} else {\ncljs.core.remove_watch(ref_31917,key);\n}\n\n\nvar G__31919 = seq__31650_31913;\nvar G__31920 = chunk__31651_31914;\nvar G__31921 = count__31652_31915;\nvar G__31922 = (i__31653_31916 + (1));\nseq__31650_31913 = G__31919;\nchunk__31651_31914 = G__31920;\ncount__31652_31915 = G__31921;\ni__31653_31916 = G__31922;\ncontinue;\n} else {\nvar temp__5753__auto___31923 = cljs.core.seq(seq__31650_31913);\nif(temp__5753__auto___31923){\nvar seq__31650_31924__$1 = temp__5753__auto___31923;\nif(cljs.core.chunked_seq_QMARK_(seq__31650_31924__$1)){\nvar c__4638__auto___31925 = cljs.core.chunk_first(seq__31650_31924__$1);\nvar G__31926 = cljs.core.chunk_rest(seq__31650_31924__$1);\nvar G__31927 = c__4638__auto___31925;\nvar G__31928 = cljs.core.count(c__4638__auto___31925);\nvar G__31929 = (0);\nseq__31650_31913 = G__31926;\nchunk__31651_31914 = G__31927;\ncount__31652_31915 = G__31928;\ni__31653_31916 = G__31929;\ncontinue;\n} else {\nvar ref_31930 = cljs.core.first(seq__31650_31924__$1);\nif(cljs.core.contains_QMARK_(new_reactions,ref_31930)){\n} else {\ncljs.core.remove_watch(ref_31930,key);\n}\n\n\nvar G__31932 = cljs.core.next(seq__31650_31924__$1);\nvar G__31933 = null;\nvar G__31934 = (0);\nvar G__31935 = (0);\nseq__31650_31913 = G__31932;\nchunk__31651_31914 = G__31933;\ncount__31652_31915 = G__31934;\ni__31653_31916 = G__31935;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nvar seq__31670_31940 = cljs.core.seq(new_reactions);\nvar chunk__31672_31941 = null;\nvar count__31674_31942 = (0);\nvar i__31676_31943 = (0);\nwhile(true){\nif((i__31676_31943 < count__31674_31942)){\nvar ref_31953 = chunk__31672_31941.cljs$core$IIndexed$_nth$arity$2(null,i__31676_31943);\nif(cljs.core.contains_QMARK_(old_reactions,ref_31953)){\n} else {\ncljs.core.add_watch(ref_31953,key,((function (seq__31670_31940,chunk__31672_31941,count__31674_31942,i__31676_31943,ref_31953,comp,old_reactions,vec__31633,dom,next_state,new_reactions,key,_STAR_reactions_STAR__orig_val__31611,_STAR_reactions_STAR__temp_val__31612){\nreturn (function (_,___$1,p,n){\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(p,n)){\nreturn rum.core.request_render(comp);\n} else {\nreturn null;\n}\n});})(seq__31670_31940,chunk__31672_31941,count__31674_31942,i__31676_31943,ref_31953,comp,old_reactions,vec__31633,dom,next_state,new_reactions,key,_STAR_reactions_STAR__orig_val__31611,_STAR_reactions_STAR__temp_val__31612))\n);\n}\n\n\nvar G__31954 = seq__31670_31940;\nvar G__31955 = chunk__31672_31941;\nvar G__31956 = count__31674_31942;\nvar G__31957 = (i__31676_31943 + (1));\nseq__31670_31940 = G__31954;\nchunk__31672_31941 = G__31955;\ncount__31674_31942 = G__31956;\ni__31676_31943 = G__31957;\ncontinue;\n} else {\nvar temp__5753__auto___31958 = cljs.core.seq(seq__31670_31940);\nif(temp__5753__auto___31958){\nvar seq__31670_31959__$1 = temp__5753__auto___31958;\nif(cljs.core.chunked_seq_QMARK_(seq__31670_31959__$1)){\nvar c__4638__auto___31960 = cljs.core.chunk_first(seq__31670_31959__$1);\nvar G__31961 = cljs.core.chunk_rest(seq__31670_31959__$1);\nvar G__31962 = c__4638__auto___31960;\nvar G__31963 = cljs.core.count(c__4638__auto___31960);\nvar G__31964 = (0);\nseq__31670_31940 = G__31961;\nchunk__31672_31941 = G__31962;\ncount__31674_31942 = G__31963;\ni__31676_31943 = G__31964;\ncontinue;\n} else {\nvar ref_31965 = cljs.core.first(seq__31670_31959__$1);\nif(cljs.core.contains_QMARK_(old_reactions,ref_31965)){\n} else {\ncljs.core.add_watch(ref_31965,key,((function (seq__31670_31940,chunk__31672_31941,count__31674_31942,i__31676_31943,ref_31965,seq__31670_31959__$1,temp__5753__auto___31958,comp,old_reactions,vec__31633,dom,next_state,new_reactions,key,_STAR_reactions_STAR__orig_val__31611,_STAR_reactions_STAR__temp_val__31612){\nreturn (function (_,___$1,p,n){\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(p,n)){\nreturn rum.core.request_render(comp);\n} else {\nreturn null;\n}\n});})(seq__31670_31940,chunk__31672_31941,count__31674_31942,i__31676_31943,ref_31965,seq__31670_31959__$1,temp__5753__auto___31958,comp,old_reactions,vec__31633,dom,next_state,new_reactions,key,_STAR_reactions_STAR__orig_val__31611,_STAR_reactions_STAR__temp_val__31612))\n);\n}\n\n\nvar G__31966 = cljs.core.next(seq__31670_31959__$1);\nvar G__31967 = null;\nvar G__31968 = (0);\nvar G__31969 = (0);\nseq__31670_31940 = G__31966;\nchunk__31672_31941 = G__31967;\ncount__31674_31942 = G__31968;\ni__31676_31943 = G__31969;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [dom,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(next_state,new cljs.core.Keyword(\"rum.reactive\",\"refs\",\"rum.reactive/refs\",-814076325),new_reactions)], null);\n}finally {(rum.core._STAR_reactions_STAR_ = _STAR_reactions_STAR__orig_val__31611);\n}});\n}),new cljs.core.Keyword(null,\"will-unmount\",\"will-unmount\",-808051550),(function (state){\nvar key_31971 = new cljs.core.Keyword(\"rum.reactive\",\"key\",\"rum.reactive/key\",-803425142).cljs$core$IFn$_invoke$arity$1(state);\nvar seq__31698_31972 = cljs.core.seq(new cljs.core.Keyword(\"rum.reactive\",\"refs\",\"rum.reactive/refs\",-814076325).cljs$core$IFn$_invoke$arity$1(state));\nvar chunk__31699_31973 = null;\nvar count__31700_31974 = (0);\nvar i__31701_31975 = (0);\nwhile(true){\nif((i__31701_31975 < count__31700_31974)){\nvar ref_31977 = chunk__31699_31973.cljs$core$IIndexed$_nth$arity$2(null,i__31701_31975);\ncljs.core.remove_watch(ref_31977,key_31971);\n\n\nvar G__31979 = seq__31698_31972;\nvar G__31980 = chunk__31699_31973;\nvar G__31981 = count__31700_31974;\nvar G__31982 = (i__31701_31975 + (1));\nseq__31698_31972 = G__31979;\nchunk__31699_31973 = G__31980;\ncount__31700_31974 = G__31981;\ni__31701_31975 = G__31982;\ncontinue;\n} else {\nvar temp__5753__auto___31983 = cljs.core.seq(seq__31698_31972);\nif(temp__5753__auto___31983){\nvar seq__31698_31985__$1 = temp__5753__auto___31983;\nif(cljs.core.chunked_seq_QMARK_(seq__31698_31985__$1)){\nvar c__4638__auto___31987 = cljs.core.chunk_first(seq__31698_31985__$1);\nvar G__31988 = cljs.core.chunk_rest(seq__31698_31985__$1);\nvar G__31989 = c__4638__auto___31987;\nvar G__31990 = cljs.core.count(c__4638__auto___31987);\nvar G__31991 = (0);\nseq__31698_31972 = G__31988;\nchunk__31699_31973 = G__31989;\ncount__31700_31974 = G__31990;\ni__31701_31975 = G__31991;\ncontinue;\n} else {\nvar ref_31992 = cljs.core.first(seq__31698_31985__$1);\ncljs.core.remove_watch(ref_31992,key_31971);\n\n\nvar G__31993 = cljs.core.next(seq__31698_31985__$1);\nvar G__31994 = null;\nvar G__31995 = (0);\nvar G__31996 = (0);\nseq__31698_31972 = G__31993;\nchunk__31699_31973 = G__31994;\ncount__31700_31974 = G__31995;\ni__31701_31975 = G__31996;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(state,new cljs.core.Keyword(\"rum.reactive\",\"refs\",\"rum.reactive/refs\",-814076325),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(\"rum.reactive\",\"key\",\"rum.reactive/key\",-803425142)], 0));\n})], null);\n/**\n * Works in conjunction with [[reactive]] mixin. Use this function instead of `deref` inside render, and your component will subscribe to changes happening to the derefed atom.\n */\nrum.core.react = (function rum$core$react(ref){\nif(cljs.core.truth_(rum.core._STAR_reactions_STAR_)){\n} else {\nthrow (new Error([\"Assert failed: \",\"rum.core/react is only supported in conjunction with rum.core/reactive\",\"\\n\",\"*reactions*\"].join('')));\n}\n\ncljs.core._vreset_BANG_(rum.core._STAR_reactions_STAR_,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core._deref(rum.core._STAR_reactions_STAR_),ref));\n\nreturn cljs.core.deref(ref);\n});\n/**\n * Use this to create “chains” and acyclic graphs of dependent atoms.\n * \n *           [[derived-atom]] will:\n *        \n *           - Take N “source” refs.\n *           - Set up a watch on each of them.\n *           - Create “sink” atom.\n *           - When any of source refs changes:\n *              - re-run function `f`, passing N dereferenced values of source refs.\n *              - `reset!` result of `f` to the sink atom.\n *           - Return sink atom.\n * \n *           Example:\n * \n *           ```\n *           (def *a (atom 0))\n *           (def *b (atom 1))\n *           (def *x (derived-atom [*a *b] ::key\n *                     (fn [a b]\n *                       (str a \":\" b))))\n *           \n *           (type *x)  ;; => clojure.lang.Atom\n *           (deref *x) ;; => \"0:1\"\n *           \n *           (swap! *a inc)\n *           (deref *x) ;; => \"1:1\"\n *           \n *           (reset! *b 7)\n *           (deref *x) ;; => \"1:7\"\n *           ```\n * \n *           Arguments:\n *        \n *           - `refs` - sequence of source refs,\n *           - `key`  - unique key to register watcher, same as in `clojure.core/add-watch`,\n *           - `f`    - function that must accept N arguments (same as number of source refs) and return a value to be written to the sink ref. Note: `f` will be called with already dereferenced values,\n *           - `opts` - optional. Map of:\n *             - `:ref` - use this as sink ref. By default creates new atom,\n *             - `:check-equals?` - Defaults to `true`. If equality check should be run on each source update: `(= @sink (f new-vals))`. When result of recalculating `f` equals to the old value, `reset!` won’t be called. Set to `false` if checking for equality can be expensive.\n */\nrum.core.derived_atom = rum.derived_atom.derived_atom;\n/**\n * Given atom with deep nested value and path inside it, creates an atom-like structure\n * that can be used separately from main atom, but will sync changes both ways:\n *   \n * ```\n * (def db (atom { :users { \"Ivan\" { :age 30 }}}))\n * \n * (def ivan (rum/cursor db [:users \"Ivan\"]))\n * (deref ivan) ;; => { :age 30 }\n * \n * (swap! ivan update :age inc) ;; => { :age 31 }\n * (deref db) ;; => { :users { \"Ivan\" { :age 31 }}}\n * \n * (swap! db update-in [:users \"Ivan\" :age] inc)\n * ;; => { :users { \"Ivan\" { :age 32 }}}\n * \n * (deref ivan) ;; => { :age 32 }\n * ```\n *   \n * Returned value supports `deref`, `swap!`, `reset!`, watches and metadata.\n *   \n * The only supported option is `:meta`\n */\nrum.core.cursor_in = (function rum$core$cursor_in(var_args){\nvar args__4824__auto__ = [];\nvar len__4818__auto___32002 = arguments.length;\nvar i__4819__auto___32003 = (0);\nwhile(true){\nif((i__4819__auto___32003 < len__4818__auto___32002)){\nargs__4824__auto__.push((arguments[i__4819__auto___32003]));\n\nvar G__32006 = (i__4819__auto___32003 + (1));\ni__4819__auto___32003 = G__32006;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4825__auto__ = ((((2) < args__4824__auto__.length))?(new cljs.core.IndexedSeq(args__4824__auto__.slice((2)),(0),null)):null);\nreturn rum.core.cursor_in.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4825__auto__);\n});\n\n(rum.core.cursor_in.cljs$core$IFn$_invoke$arity$variadic = (function (ref,path,p__31744){\nvar map__31745 = p__31744;\nvar map__31745__$1 = cljs.core.__destructure_map(map__31745);\nvar options = map__31745__$1;\nif((ref instanceof rum.cursor.Cursor)){\nreturn (new rum.cursor.Cursor(ref.ref,cljs.core.into.cljs$core$IFn$_invoke$arity$2(ref.path,path),new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964).cljs$core$IFn$_invoke$arity$1(options)));\n} else {\nreturn (new rum.cursor.Cursor(ref,path,new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964).cljs$core$IFn$_invoke$arity$1(options)));\n}\n}));\n\n(rum.core.cursor_in.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(rum.core.cursor_in.cljs$lang$applyTo = (function (seq31741){\nvar G__31742 = cljs.core.first(seq31741);\nvar seq31741__$1 = cljs.core.next(seq31741);\nvar G__31743 = cljs.core.first(seq31741__$1);\nvar seq31741__$2 = cljs.core.next(seq31741__$1);\nvar self__4805__auto__ = this;\nreturn self__4805__auto__.cljs$core$IFn$_invoke$arity$variadic(G__31742,G__31743,seq31741__$2);\n}));\n\n/**\n * Same as [[cursor-in]] but accepts single key instead of path vector.\n */\nrum.core.cursor = (function rum$core$cursor(var_args){\nvar args__4824__auto__ = [];\nvar len__4818__auto___32008 = arguments.length;\nvar i__4819__auto___32009 = (0);\nwhile(true){\nif((i__4819__auto___32009 < len__4818__auto___32008)){\nargs__4824__auto__.push((arguments[i__4819__auto___32009]));\n\nvar G__32010 = (i__4819__auto___32009 + (1));\ni__4819__auto___32009 = G__32010;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4825__auto__ = ((((2) < args__4824__auto__.length))?(new cljs.core.IndexedSeq(args__4824__auto__.slice((2)),(0),null)):null);\nreturn rum.core.cursor.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4825__auto__);\n});\n\n(rum.core.cursor.cljs$core$IFn$_invoke$arity$variadic = (function (ref,key,options){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(rum.core.cursor_in,ref,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [key], null),options);\n}));\n\n(rum.core.cursor.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(rum.core.cursor.cljs$lang$applyTo = (function (seq31750){\nvar G__31751 = cljs.core.first(seq31750);\nvar seq31750__$1 = cljs.core.next(seq31750);\nvar G__31752 = cljs.core.first(seq31750__$1);\nvar seq31750__$2 = cljs.core.next(seq31750__$1);\nvar self__4805__auto__ = this;\nreturn self__4805__auto__.cljs$core$IFn$_invoke$arity$variadic(G__31751,G__31752,seq31750__$2);\n}));\n\n/**\n * Takes initial value or value returning fn and returns a tuple of [value set-value!],\n *   where `value` is current state value and `set-value!` is a function that schedules re-render.\n * \n *   (let [[value set-state!] (rum/use-state 0)]\n *  [:button {:on-click #(set-state! (inc value))}\n *    value])\n */\nrum.core.use_state = (function rum$core$use_state(value_or_fn){\nreturn React.useState(value_or_fn);\n});\n/**\n * Takes reducing function and initial state value.\n *   Returns a tuple of [value dispatch!], where `value` is current state value and `dispatch` is a function that schedules re-render.\n * \n *   (defmulti value-reducer (fn [value event] event))\n * \n *   (defmethod value-reducer :inc [value _]\n *  (inc value))\n * \n *   (let [[value dispatch!] (rum/use-reducer value-reducer 0)]\n *  [:button {:on-click #(dispatch! :inc)}\n *    value])\n * \n *   Read more at https://reactjs.org/docs/hooks-reference.html#usereducer\n */\nrum.core.use_reducer = (function rum$core$use_reducer(reducer_fn,initial_value){\nreturn React.useReducer((function (p1__31757_SHARP_,p2__31758_SHARP_){\nreturn (reducer_fn.cljs$core$IFn$_invoke$arity$2 ? reducer_fn.cljs$core$IFn$_invoke$arity$2(p1__31757_SHARP_,p2__31758_SHARP_) : reducer_fn.call(null,p1__31757_SHARP_,p2__31758_SHARP_));\n}),initial_value,cljs.core.identity);\n});\n/**\n * Takes setup-fn that executes either on the first render or after every update.\n *   The function may return cleanup-fn to cleanup the effect, either before unmount or before every next update.\n *   Calling behavior is controlled by deps argument.\n * \n *   (rum/use-effect!\n *  (fn []\n *    (.addEventListener js/window \"load\" handler)\n *    #(.removeEventListener js/window \"load\" handler))\n *  []) ;; empty deps collection instructs React to run setup-fn only once on initial render\n *      ;; and cleanup-fn only once before unmounting\n * \n *   Read more at https://reactjs.org/docs/hooks-effect.html\n */\nrum.core.use_effect_BANG_ = (function rum$core$use_effect_BANG_(var_args){\nvar G__31765 = arguments.length;\nswitch (G__31765) {\ncase 1:\nreturn rum.core.use_effect_BANG_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rum.core.use_effect_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rum.core.use_effect_BANG_.cljs$core$IFn$_invoke$arity$1 = (function (setup_fn){\nreturn React.useEffect((function (){\nvar or__4212__auto__ = (setup_fn.cljs$core$IFn$_invoke$arity$0 ? setup_fn.cljs$core$IFn$_invoke$arity$0() : setup_fn.call(null));\nif(cljs.core.truth_(or__4212__auto__)){\nreturn or__4212__auto__;\n} else {\nreturn undefined;\n}\n}));\n}));\n\n(rum.core.use_effect_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (setup_fn,deps){\nreturn React.useEffect((function (){\nvar or__4212__auto__ = (setup_fn.cljs$core$IFn$_invoke$arity$0 ? setup_fn.cljs$core$IFn$_invoke$arity$0() : setup_fn.call(null));\nif(cljs.core.truth_(or__4212__auto__)){\nreturn or__4212__auto__;\n} else {\nreturn undefined;\n}\n}),((cljs.core.array_QMARK_(deps))?deps:cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(deps)));\n}));\n\n(rum.core.use_effect_BANG_.cljs$lang$maxFixedArity = 2);\n\n/**\n * (rum/use-layout-effect!\n *  (fn []\n *    (.addEventListener js/window \"load\" handler)\n *    #(.removeEventListener js/window \"load\" handler))\n *  []) ;; empty deps collection instructs React to run setup-fn only once on initial render\n *      ;; and cleanup-fn only once before unmounting\n * \n *   Read more at https://reactjs.org/docs/hooks-effect.html\n */\nrum.core.use_layout_effect_BANG_ = (function rum$core$use_layout_effect_BANG_(var_args){\nvar G__31778 = arguments.length;\nswitch (G__31778) {\ncase 1:\nreturn rum.core.use_layout_effect_BANG_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rum.core.use_layout_effect_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rum.core.use_layout_effect_BANG_.cljs$core$IFn$_invoke$arity$1 = (function (setup_fn){\nreturn React.useLayoutEffect((function (){\nvar or__4212__auto__ = (setup_fn.cljs$core$IFn$_invoke$arity$0 ? setup_fn.cljs$core$IFn$_invoke$arity$0() : setup_fn.call(null));\nif(cljs.core.truth_(or__4212__auto__)){\nreturn or__4212__auto__;\n} else {\nreturn undefined;\n}\n}));\n}));\n\n(rum.core.use_layout_effect_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (setup_fn,deps){\nreturn React.useLayoutEffect((function (){\nvar or__4212__auto__ = (setup_fn.cljs$core$IFn$_invoke$arity$0 ? setup_fn.cljs$core$IFn$_invoke$arity$0() : setup_fn.call(null));\nif(cljs.core.truth_(or__4212__auto__)){\nreturn or__4212__auto__;\n} else {\nreturn undefined;\n}\n}),((cljs.core.array_QMARK_(deps))?deps:cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(deps)));\n}));\n\n(rum.core.use_layout_effect_BANG_.cljs$lang$maxFixedArity = 2);\n\n/**\n * Takes callback function and returns memoized variant, memoization is done based on provided deps collection.\n * \n *   (rum/defc button < rum/static\n *  [{:keys [on-click]} text]\n *  [:button {:on-click on-click}\n *    text])\n * \n *   (rum/defc app [v]\n *  (let [on-click (rum/use-callback #(do-stuff v) [v])]\n *    ;; because on-click callback is memoized here based on v argument\n *    ;; the callback won't be re-created on every render, unless v changes\n *    ;; which means that underlying `button` component won't re-render wastefully\n *    [button {:on-click on-click}\n *      \"press me\"]))\n * \n *   Read more at https://reactjs.org/docs/hooks-reference.html#usecallback\n */\nrum.core.use_callback = (function rum$core$use_callback(var_args){\nvar G__31788 = arguments.length;\nswitch (G__31788) {\ncase 1:\nreturn rum.core.use_callback.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rum.core.use_callback.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rum.core.use_callback.cljs$core$IFn$_invoke$arity$1 = (function (callback){\nreturn React.useCallback(callback);\n}));\n\n(rum.core.use_callback.cljs$core$IFn$_invoke$arity$2 = (function (callback,deps){\nreturn React.useCallback(callback,((cljs.core.array_QMARK_(deps))?deps:cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(deps)));\n}));\n\n(rum.core.use_callback.cljs$lang$maxFixedArity = 2);\n\n/**\n * Takes a function, memoizes it based on provided deps collection and executes immediately returning a result.\n *   Read more at https://reactjs.org/docs/hooks-reference.html#usememo\n */\nrum.core.use_memo = (function rum$core$use_memo(var_args){\nvar G__31799 = arguments.length;\nswitch (G__31799) {\ncase 1:\nreturn rum.core.use_memo.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rum.core.use_memo.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rum.core.use_memo.cljs$core$IFn$_invoke$arity$1 = (function (f){\nreturn React.useMemo(f);\n}));\n\n(rum.core.use_memo.cljs$core$IFn$_invoke$arity$2 = (function (f,deps){\nreturn React.useMemo(f,((cljs.core.array_QMARK_(deps))?deps:cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(deps)));\n}));\n\n(rum.core.use_memo.cljs$lang$maxFixedArity = 2);\n\n/**\n * Takes a value and puts it into a mutable container which is persisted for the full lifetime of the component.\n *   https://reactjs.org/docs/hooks-reference.html#useref\n */\nrum.core.use_ref = (function rum$core$use_ref(initial_value){\nreturn React.useRef(initial_value);\n});\nrum.core.create_ref = (function rum$core$create_ref(){\nreturn React.createRef();\n});\n/**\n * Takes a ref returned from use-ref and returns its current value.\n */\nrum.core.deref = (function rum$core$deref(ref){\nreturn ref.current;\n});\nrum.core.set_ref_BANG_ = (function rum$core$set_ref_BANG_(ref,value){\nreturn (ref.current = value);\n});\n/**\n * Main server-side rendering method. Given component, returns HTML string with static markup of that component.\n *   Serve that string to the browser and [[hydrate]] same Rum component over it. React will be able to reuse already existing DOM and will initialize much faster.\n *   No opts are supported at the moment.\n */\nrum.core.render_html = (function rum$core$render_html(var_args){\nvar G__31806 = arguments.length;\nswitch (G__31806) {\ncase 1:\nreturn rum.core.render_html.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rum.core.render_html.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rum.core.render_html.cljs$core$IFn$_invoke$arity$1 = (function (element){\nreturn rum.core.render_html.cljs$core$IFn$_invoke$arity$2(element,null);\n}));\n\n(rum.core.render_html.cljs$core$IFn$_invoke$arity$2 = (function (element,opts){\nif((!((cljs.core._STAR_target_STAR_ === \"nodejs\")))){\nreturn ReactDOMServer.renderToString(element);\n} else {\nvar react_dom_server = require(\"react-dom/server\");\nreturn react_dom_server.renderToString(element);\n}\n}));\n\n(rum.core.render_html.cljs$lang$maxFixedArity = 2);\n\n/**\n * Same as [[render-html]] but returned string has nothing React-specific.\n *   This allows Rum to be used as traditional server-side templating engine.\n */\nrum.core.render_static_markup = (function rum$core$render_static_markup(src){\nif((!((cljs.core._STAR_target_STAR_ === \"nodejs\")))){\nreturn ReactDOMServer.renderToStaticMarkup(src);\n} else {\nvar react_dom_server = require(\"react-dom/server\");\nreturn react_dom_server.renderToStaticMarkup(src);\n}\n});\nrum.core.adapt_class_helper = (function rum$core$adapt_class_helper(type,attrs,children){\nvar args = [type,attrs].concat(children);\nreturn React.createElement.apply(React,args);\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","rum/core.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",13],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",["~$ref","~$deref"]],"~:macros",["^ ","~$defcontext",["^ ","~:arglists",["~#list",[["~$name"],["^K","~$value"]]],"~:doc","cljs: Creates React context with initial value set to `value`.\n  clj: Create dynamic var bound to `value`.","^7",336,"^8",1,"^6","rum/core.clj","~:name","~$rum.core/defcontext","~:ns","~$rum.core","~:macro",true],"~$defc",["^ ","^I",["^J",[["~$&","~$body"]]],"^M","~```\n   (defc name doc-string? (< mixins+)? [ params* ] render-body+)\n   ```\n  \n   Defc does couple of things:\n   \n     1. Wraps body into daiquiri/compile-html\n     2. Generates render function from that\n     3. Takes render function and mixins, builds React class from them\n     4. Using that class, generates constructor fn [args]->ReactElement\n     5. Defines top-level var with provided name and assigns ctor to it\n  \n   Usage:\n   \n   ```\n   (rum/defc label < rum/static [t]\n     [:div t])\n  \n   ;; creates React class\n   ;; adds mixin rum/static\n   ;; defines ctor fn (defn label [t] ...) => element\n  \n   (label \"text\") ;; => returns React element built with label class\n   ```","^7",71,"^8",1,"^6","rum/core.clj","^N","~$rum.core/defc","^P","^Q","^R",true],"~$fragment",["^ ","^I",["^J",[["~$attrs","~$&","~$children"]]],"^M","(rum/fragment [button] [input] ...)","^7",432,"^8",1,"^6","rum/core.clj","^N","~$rum.core/fragment","^P","^Q","^R",true],"~$defcs",["^ ","^I",["^J",[["~$&","^T"]]],"^M","~```\n   (defcs name doc-string? (< mixins+)? [ state-arg params* ] render-body+)\n   ```\n   \n   Same as [[defc]], but render will take additional first argument: component state.","^7",99,"^8",1,"^6","rum/core.clj","^N","~$rum.core/defcs","^P","^Q","^R",true],"~$adapt-class",["^ ","^I",["^J",[["~$type","^W","~$&","^X"]]],"^M","Adapts JavaScript React component for usage in Rum components.\n\n  [:div\n    (rum/adapt-class js/Button {:on-click f} \"press me\")]\n\n  When using in Clojure JVM calls *render-js-component* to render a fallback.\n  See example in rum.examples.js-components ns","^7",451,"^8",1,"^6","rum/core.clj","^N","~$rum.core/adapt-class","^P","^Q","^R",true],"~$suspense",["^ ","^I",["^J",[[["^ ","~:keys",["~$fallback"]],"~$child"]]],"^M","(rum/require-lazy '[app.components :refer [alert]])\n\n  (rum/defc root []\n    (suspense {:fallback \"Hello!\"}\n      (alert \"ARGUMENT\")))\n\n  See a complete example here https://github.com/roman01la/rum-code-splitting","^7",414,"^8",1,"^6","rum/core.clj","^N","~$rum.core/suspense","^P","^Q","^R",true],"~$set-warn-on-interpretation!",["^ ","^I",["^J",[["~$v"]]],"^7",15,"^8",1,"^6","rum/core.clj","^N","~$rum.core/set-warn-on-interpretation!","^P","^Q","^R",true],"~$with-context",["^ ","^I",["^J",[[["~$sym","~$context"],"~$&","^T"]]],"^M","(with-context [value ctx]\n     [:div value])","^7",352,"^8",1,"^6","rum/core.clj","^N","~$rum.core/with-context","^P","^Q","^R",true],"~$bind-context",["^ ","^I",["^J",[[["^1<","^L"],"~$&","^T"]]],"^M","(bind-context [context value]\n    ...)","^7",361,"^8",1,"^6","rum/core.clj","^N","~$rum.core/bind-context","^P","^Q","^R",true],"~$defcc",["^ ","^I",["^J",[["~$&","^T"]]],"^M","~```\n   (defcc name doc-string? (< mixins+)? [ comp-arg params* ] render-body+)\n   ```\n\n   Same as [[defc]], but render will take additional first argument: react component.","^7",108,"^8",1,"^6","rum/core.clj","^N","~$rum.core/defcc","^P","^Q","^R",true]],"^N","^Q","~:reader-aliases",["^ "],"~:op","^P","~:imports",null,"~:requires",["^ ","~$set","~$clojure.set","~$goog.functions","^1H","~$rum.cursor","^1I","~$fns","^1H","~$cljs.core","^1K","~$gobj","~$goog.object","~$goog","^1N","^1M","^1M","~$cljsjs.react","^1O","~$rum.derived-atom","^1P","^1G","^1G","~$cljsjs.react.dom","^1Q","~$util","~$rum.util","^1S","^1S","~$cursor","^1I","~$daiquiri.core","^1U","~$rum.specs","^1V","~$derived-atom","^1P"],"~:seen",["^D",["~:require","~:require-macros"]],"~:uses",["^ ","~$collect","^1S","~$collect*","^1S","~$call-all","^1S"],"^1Z",["^ ","^Q","^Q","^1K","^1K"],"~:form",["^J",["~$ns","^Q",["^J",["~:refer-clojure","~:exclude",["^E","^F"]]],["^J",["^1Z","^Q"]],["^J",["^1Y",["^1O"],["^1Q"],["^1M","~:as","^1L"],["^1H","^27","^1J"],["^1G","^27","^1F"],["^1V"],["^1U"],["^1I","^27","^1T"],["^1S","^27","^1R","~:refer",["^20","^21","^22"]],["^1P","^27","^1W"]]]]],"~:flags",["^ ","^1Z",["^D",[]],"^1Y",["^D",[]]],"~:js-deps",["^ "],"~:deps",["^1N","^1K","^1O","^1Q","^1M","^1H","^1G","^1V","^1U","^1I","^1S","^1P"]],"^P","^Q","~:resource-id",["~:shadow.build.classpath/resource","rum/core.cljs"],"~:compiled-at",1648461633876,"^1B",["^ ","^1F","^1G","^1H","^1H","^1I","^1I","^1J","^1H","^Q","^Q","^1K","^1K","^1L","^1M","^1N","^1N","^1M","^1M","^1O","^1O","^1P","^1P","^1G","^1G","^1Q","^1Q","^1R","^1S","^1S","^1S","^1T","^1I","^1U","^1U","^1V","^1V","^1W","^1P"],"~:resource-name","rum/core.cljs","~:warnings",[],"~:source","(ns rum.core\n  (:refer-clojure :exclude [ref deref])\n  (:require-macros rum.core)\n  (:require\n   [cljsjs.react]\n   [cljsjs.react.dom]\n   [goog.object :as gobj]\n   [goog.functions :as fns]\n   [clojure.set :as set]\n   [rum.specs]\n   [daiquiri.core]\n   [rum.cursor :as cursor]\n   [rum.util :as util :refer [collect collect* call-all]]\n   [rum.derived-atom :as derived-atom]))\n\n(defn state\n  \"Given React component, returns Rum state associated with it.\"\n  [^js/React.Component comp]\n  (gobj/get (.-state comp) \":rum/state\"))\n\n(defn- extend! [obj props]\n  (doseq [[k v] props\n          :when (some? v)]\n    (gobj/set obj (name k) (clj->js v))))\n\n(defn- build-class [render mixins display-name]\n  (when ^boolean goog.DEBUG\n    (let [mixins (->> mixins (mapcat keys) set)]\n      (assert (set/subset? mixins rum.specs/mixins)\n              (str display-name \" declares invalid mixin keys \"\n                   (set/difference mixins rum.specs/mixins) \", \"\n                   \"did you mean one of \" rum.specs/mixins))\n      (->> (select-keys rum.specs/deprecated-mixins mixins)\n           vals\n           (run! #(.warn js/console %)))))\n  (let [init           (collect   :init mixins)             ;; state props -> state\n        before-render  (collect* [:will-mount\n                                  :unsafe/will-mount\n                                  :before-render] mixins)   ;; state -> state\n        render         render                               ;; state -> [dom state]\n        wrap-render    (collect   :wrap-render mixins)      ;; render-fn -> render-fn\n        wrapped-render (reduce #(%2 %1) render wrap-render)\n        did-mount      (collect* [:did-mount                ;; state -> state\n                                  :after-render] mixins)    ;; state -> state\n        will-remount    (collect* [:did-remount             ;; state -> state\n                                   :will-remount] mixins)   ;; old-state state -> state\n        should-update  (collect   :should-update mixins)    ;; old-state state -> boolean\n        before-update  (collect* [:unsafe/will-update\n                                  :unsafe/will-update\n                                  :before-render] mixins)   ;; state -> state\n        did-update     (collect* [:did-update               ;; state -> state\n                                  :after-render] mixins)    ;; state -> state\n        did-catch      (collect   :did-catch mixins)        ;; state error info -> state\n        will-unmount   (collect   :will-unmount mixins)     ;; state -> state\n        child-context  (collect   :child-context mixins)    ;; state -> child-context\n        class-props    (reduce merge (collect :class-properties mixins))  ;; custom prototype properties and methods\n        static-props   (reduce merge (collect :static-properties mixins)) ;; custom static properties and methods\n\n        ctor           (fn [props]\n                         (this-as this\n                                  (gobj/set this \"state\"\n                                            #js {\":rum/state\"\n                                                 (-> (gobj/get props \":rum/initial-state\")\n                                                     (assoc :rum/react-component this)\n                                                     (call-all init props)\n                                                     volatile!)})\n                                  (.call js/React.Component this props)))\n        _              (goog/inherits ctor js/React.Component)\n        prototype      (gobj/get ctor \"prototype\")]\n\n    (when-not (empty? before-render)\n      (gobj/set prototype \"UNSAFE_componentWillMount\"\n                (fn []\n                  (this-as this\n                    (vswap! (state this) call-all before-render)))))\n\n    (when-not (empty? did-mount)\n      (gobj/set prototype \"componentDidMount\"\n                (fn []\n                  (this-as this\n                           (vswap! (state this) call-all did-mount)))))\n\n    (gobj/set prototype \"UNSAFE_componentWillReceiveProps\"\n              (fn [next-props]\n                (this-as this\n                         (let [old-state  @(state this)\n                               state      (merge old-state\n                                                 (gobj/get next-props \":rum/initial-state\"))\n                               next-state (reduce #(%2 old-state %1) state will-remount)]\n            ;; allocate new volatile so that we can access both old and new states in shouldComponentUpdate\n                           (.setState ^js/React.Component this #js {\":rum/state\" (volatile! next-state)})))))\n\n    (when-not (empty? should-update)\n      (gobj/set prototype \"shouldComponentUpdate\"\n                (fn [next-props next-state]\n                  (this-as this\n                           (let [old-state @(state this)\n                                 new-state @(gobj/get next-state \":rum/state\")]\n                             (or (some #(% old-state new-state) should-update) false))))))\n\n    (when-not (empty? before-update)\n      (gobj/set prototype \"UNSAFE_componentWillUpdate\"\n                (fn [_ next-state]\n                  (this-as this\n                    (let [new-state (gobj/get next-state \":rum/state\")]\n                      (vswap! new-state call-all before-update))))))\n\n    (gobj/set prototype \"render\"\n              (fn []\n                (this-as this\n                         (let [state (state this)\n                               [dom next-state] (wrapped-render @state)]\n                           (vreset! state next-state)\n                           dom))))\n\n    (when-not (empty? did-update)\n      (gobj/set prototype \"componentDidUpdate\"\n                (fn [_ _]\n                  (this-as this\n                           (vswap! (state this) call-all did-update)))))\n\n    (when-not (empty? did-catch)\n      (gobj/set prototype \"componentDidCatch\"\n                (fn [error info]\n                  (this-as this\n                           (vswap! (state this) call-all did-catch error {:rum/component-stack (gobj/get info \"componentStack\")})\n                           (.forceUpdate ^js/React.Component this)))))\n\n    (gobj/set prototype \"componentWillUnmount\"\n              (fn []\n                (this-as this\n                         (when-not (empty? will-unmount)\n                           (vswap! (state this) call-all will-unmount))\n                         (gobj/set this \":rum/unmounted?\" true))))\n\n    (when-not (empty? child-context)\n      (gobj/set prototype \"getChildContext\"\n                (fn []\n                  (this-as this\n                           (let [state @(state this)]\n                             (clj->js (transduce (map #(% state)) merge {} child-context)))))))\n\n    (extend! prototype class-props)\n    (gobj/set ctor \"displayName\" display-name)\n    (extend! ctor static-props)\n    ctor))\n\n(defn- set-meta! [c]\n  (let [f #(let [^js ctr (c)]\n             (.apply ctr ctr (js-arguments)))]\n    (specify! f IMeta (-meta [_] (meta (c))))\n    f))\n\n(defn lazy-build\n  \"Wraps component construction in a way so that Google Closure Compiler\n   can properly recognize and elide unused components. The extra `set-meta`\n   fn is needed so that the compiler can properly detect that all functions\n   are side effect free.\"\n  [ctor render mixins display-name]\n  (let [bf #(ctor render mixins display-name) ;; Avoid IIFE\n        c  (fns/cacheReturnValue bf)]\n    (set-meta! c)))\n\n(defn- build-ctor [render mixins display-name]\n  (let [class  (build-class render mixins display-name)\n        key-fn (first (collect :key-fn mixins))\n        ctor   (if (some? key-fn)\n                 (fn [& args]\n                   (let [props #js {\":rum/initial-state\" {:rum/args args}\n                                    \"key\" (apply key-fn args)}]\n                     (js/React.createElement class props)))\n                 (fn [& args]\n                   (let [props #js {\":rum/initial-state\" {:rum/args args}}]\n                     (js/React.createElement class props))))]\n    (with-meta ctor {:rum/class class})))\n\n(declare static)\n\n(defn- memo-compare-props [prev-props next-props]\n  (= (aget prev-props \":rum/args\")\n     (aget next-props \":rum/args\")))\n\n(defn react-memo [f]\n  (if-some [memo (.-memo js/React)]\n    (memo f memo-compare-props)\n    f))\n\n(defn ^:no-doc build-defc [render-body mixins display-name]\n  (cond\n    (= mixins [static])\n    (let [class (fn [props]\n                  (apply render-body (aget props \":rum/args\")))\n          _     (aset class \"displayName\" display-name)\n          memo-class (react-memo class)\n          ctor  (fn [& args]\n                  (.createElement js/React memo-class #js {\":rum/args\" args}))]\n      (with-meta ctor {:rum/class memo-class}))\n\n    (empty? mixins)\n    (let [class (fn [props]\n                  (apply render-body (aget props \":rum/args\")))\n          _     (aset class \"displayName\" display-name)\n          ctor  (fn [& args]\n                  (.createElement js/React class #js {\":rum/args\" args}))]\n      (with-meta ctor {:rum/class class}))\n\n    :else\n    (let [render (fn [state] [(apply render-body (:rum/args state)) state])]\n      (build-ctor render mixins display-name))))\n\n(defn ^:no-doc build-defcs [render-body mixins display-name]\n  (let [render (fn [state] [(apply render-body state (:rum/args state)) state])]\n    (build-ctor render mixins display-name)))\n\n(defn ^:no-doc build-defcc [render-body mixins display-name]\n  (let [render (fn [state] [(apply render-body (:rum/react-component state) (:rum/args state)) state])]\n    (build-ctor render mixins display-name)))\n\n;; render queue\n\n\n(def ^:private schedule\n  (or (and (exists? js/window)\n           (or js/window.requestAnimationFrame\n               js/window.webkitRequestAnimationFrame\n               js/window.mozRequestAnimationFrame\n               js/window.msRequestAnimationFrame))\n      #(js/setTimeout % 16)))\n\n(def ^:private batch\n  (or (when (exists? js/ReactNative) js/ReactNative.unstable_batchedUpdates)\n      (when (exists? js/ReactDOM) js/ReactDOM.unstable_batchedUpdates)\n      (fn [f a] (f a))))\n\n(def ^:private empty-queue [])\n(def ^:private render-queue (volatile! empty-queue))\n\n(defn- render-one [comp]\n  (when (and (some? comp) (not (gobj/get comp \":rum/unmounted?\")))\n    (.forceUpdate comp)))\n\n(defn- render-all [queue]\n  (run! render-one queue))\n\n(defn- render []\n  (let [queue @render-queue]\n    (vreset! render-queue empty-queue)\n    (batch render-all queue)))\n\n(def ^:private sync-update? (volatile! false))\n\n(defn request-render\n  \"Schedules react component to be rendered on next animation frame,\n  unless the requested update happens to be in a sync-update phase.\"\n  [component]\n  (if @sync-update?\n    (render-one component)\n    (do\n      (when (empty? @render-queue)\n        (schedule render))\n      (vswap! render-queue conj component))))\n\n;; exporting to work around circular deps\n(defn ^:export mark-sync-update [f]\n  (if (fn? f)\n    (fn wrapped-handler [e]\n      (let [_ (vreset! sync-update? true)\n            ret (f e)\n            _ (vreset! sync-update? false)]\n        ret))\n    f))\n\n(defn mount\n  \"Add element to the DOM tree. Idempotent. Subsequent mounts will just update element.\"\n  [element node]\n  (js/ReactDOM.render element node)\n  nil)\n\n(defn unmount\n  \"Removes component from the DOM tree.\"\n  [node]\n  (js/ReactDOM.unmountComponentAtNode node))\n\n(defn hydrate\n  \"Same as [[mount]] but must be called on DOM tree already rendered by a server via [[render-html]].\"\n  [element node]\n  (js/ReactDOM.hydrate element node))\n\n(defn portal\n  \"Render `element` in a DOM `node` that is ouside of current DOM hierarchy.\"\n  [element node]\n  (js/ReactDOM.createPortal element node))\n\n(defn create-context [default-value]\n  (.createContext js/React default-value))\n\n\n;; initialization\n\n\n(defn with-key\n  \"Adds React key to element.\n   \n   ```\n   (rum/defc label [text] [:div text])\n\n   (-> (label)\n       (rum/with-key \\\"abc\\\")\n       (rum/mount js/document.body))\n   ```\"\n  [element key]\n  (js/React.cloneElement element #js {\"key\" key} nil))\n\n(defn with-ref\n  \"Adds React ref (string or callback) to element.\n   \n   ```\n   (rum/defc label [text] [:div text])\n\n   (-> (label)\n       (rum/with-ref \\\"abc\\\")\n       (rum/mount js/document.body))\n   ```\"\n  [element ref]\n  (js/React.cloneElement element #js {\"ref\" ref} nil))\n\n(defn dom-node\n  \"Usage of this function is discouraged. Use :ref callback instead.\n  Given state, returns top-level DOM node of component. Call it during lifecycle callbacks. Can’t be called during render.\"\n  [state]\n  (js/ReactDOM.findDOMNode (:rum/react-component state)))\n\n(defn ref\n  \"DEPRECATED: Use :ref (fn [dom-or-nil]) callback instead. See rum issue #124\n  Given state and ref handle, returns React component.\"\n  [state key]\n  (-> state :rum/react-component (aget \"refs\") (aget (name key))))\n\n(defn ref-node\n  \"DEPRECATED: Use :ref (fn [dom-or-nil]) callback instead. See rum issue #124\n  Given state and ref handle, returns DOM node associated with ref.\"\n  [state key]\n  (js/ReactDOM.findDOMNode (ref state (name key))))\n\n\n;; static mixin\n\n\n(def static\n  \"Mixin. Will avoid re-render if none of component’s arguments have changed. Does equality check (`=`) on all arguments.\n  \n   ```\n   (rum/defc label < rum/static\n     [text]\n     [:div text])\n     \n   (rum/mount (label \\\"abc\\\") js/document.body)\n\n   ;; def != abc, will re-render\n   (rum/mount (label \\\"def\\\") js/document.body)\n\n   ;; def == def, won’t re-render\n   (rum/mount (label \\\"def\\\") js/document.body)\n   ```\"\n  {:should-update\n   (fn [old-state new-state]\n     (not= (:rum/args old-state) (:rum/args new-state)))})\n\n\n;; local mixin\n\n\n(defn local\n  \"Mixin constructor. Adds an atom to component’s state that can be used to keep stuff during component’s lifecycle. Component will be re-rendered if atom’s value changes. Atom is stored under user-provided key or under `:rum/local` by default.\n  \n   ```\n   (rum/defcs counter < (rum/local 0 :cnt)\n     [state label]\n     (let [*cnt (:cnt state)]\n       [:div {:on-click (fn [_] (swap! *cnt inc))}\n         label @*cnt]))\n   \n   (rum/mount (counter \\\"Click count: \\\"))\n   ```\"\n  ([initial] (local initial :rum/local))\n  ([initial key]\n   {:will-mount\n    (fn [state]\n      (let [local-state (atom initial)\n            ^js/React.Component component (:rum/react-component state)]\n        (add-watch local-state key\n                   (fn [_ _ p n]\n                     (when (not= p n)\n                       (request-render component))))\n        (assoc state key local-state)))}))\n\n\n;; reactive mixin\n\n\n(def ^:private ^:dynamic *reactions*)\n\n(def reactive\n  \"Mixin. Works in conjunction with [[react]].\n  \n   ```\n   (rum/defc comp < rum/reactive\n     [*counter]\n     [:div (rum/react counter)])\n\n   (def *counter (atom 0))\n   (rum/mount (comp *counter) js/document.body)\n   (swap! *counter inc) ;; will force comp to re-render\n   ```\"\n  {:init\n   (fn [state props]\n     (assoc state :rum.reactive/key (random-uuid)))\n   :wrap-render\n   (fn [render-fn]\n     (fn [state]\n       (binding [*reactions* (volatile! #{})]\n         (let [comp             (:rum/react-component state)\n               old-reactions    (:rum.reactive/refs state #{})\n               [dom next-state] (render-fn state)\n               new-reactions    @*reactions*\n               key              (:rum.reactive/key state)]\n           (doseq [ref old-reactions]\n             (when-not (contains? new-reactions ref)\n               (remove-watch ref key)))\n           (doseq [ref new-reactions]\n             (when-not (contains? old-reactions ref)\n               (add-watch ref key\n                          (fn [_ _ p n]\n                            (when (not= p n)\n                              (request-render comp))))))\n           [dom (assoc next-state :rum.reactive/refs new-reactions)]))))\n   :will-unmount\n   (fn [state]\n     (let [key (:rum.reactive/key state)]\n       (doseq [ref (:rum.reactive/refs state)]\n         (remove-watch ref key)))\n     (dissoc state :rum.reactive/refs :rum.reactive/key))})\n\n(defn react\n  \"Works in conjunction with [[reactive]] mixin. Use this function instead of `deref` inside render, and your component will subscribe to changes happening to the derefed atom.\"\n  [ref]\n  (assert *reactions* \"rum.core/react is only supported in conjunction with rum.core/reactive\")\n  (vswap! *reactions* conj ref)\n  @ref)\n\n\n;; derived-atom\n\n\n(def ^{:style/indent 2\n       :arglists '([refs key f] [refs key f opts])\n       :doc \"Use this to create “chains” and acyclic graphs of dependent atoms.\n   \n             [[derived-atom]] will:\n          \n             - Take N “source” refs.\n             - Set up a watch on each of them.\n             - Create “sink” atom.\n             - When any of source refs changes:\n                - re-run function `f`, passing N dereferenced values of source refs.\n                - `reset!` result of `f` to the sink atom.\n             - Return sink atom.\n\n             Example:\n\n             ```\n             (def *a (atom 0))\n             (def *b (atom 1))\n             (def *x (derived-atom [*a *b] ::key\n                       (fn [a b]\n                         (str a \\\":\\\" b))))\n             \n             (type *x)  ;; => clojure.lang.Atom\n             (deref *x) ;; => \\\"0:1\\\"\n             \n             (swap! *a inc)\n             (deref *x) ;; => \\\"1:1\\\"\n             \n             (reset! *b 7)\n             (deref *x) ;; => \\\"1:7\\\"\n             ```\n\n             Arguments:\n          \n             - `refs` - sequence of source refs,\n             - `key`  - unique key to register watcher, same as in `clojure.core/add-watch`,\n             - `f`    - function that must accept N arguments (same as number of source refs) and return a value to be written to the sink ref. Note: `f` will be called with already dereferenced values,\n             - `opts` - optional. Map of:\n               - `:ref` - use this as sink ref. By default creates new atom,\n               - `:check-equals?` - Defaults to `true`. If equality check should be run on each source update: `(= @sink (f new-vals))`. When result of recalculating `f` equals to the old value, `reset!` won’t be called. Set to `false` if checking for equality can be expensive.\"}\n  derived-atom derived-atom/derived-atom)\n\n\n;; cursors\n\n\n(defn cursor-in\n  \"Given atom with deep nested value and path inside it, creates an atom-like structure\n   that can be used separately from main atom, but will sync changes both ways:\n  \n   ```\n   (def db (atom { :users { \\\"Ivan\\\" { :age 30 }}}))\n   \n   (def ivan (rum/cursor db [:users \\\"Ivan\\\"]))\n   (deref ivan) ;; => { :age 30 }\n   \n   (swap! ivan update :age inc) ;; => { :age 31 }\n   (deref db) ;; => { :users { \\\"Ivan\\\" { :age 31 }}}\n   \n   (swap! db update-in [:users \\\"Ivan\\\" :age] inc)\n   ;; => { :users { \\\"Ivan\\\" { :age 32 }}}\n   \n   (deref ivan) ;; => { :age 32 }\n   ```\n  \n   Returned value supports `deref`, `swap!`, `reset!`, watches and metadata.\n  \n   The only supported option is `:meta`\"\n  [ref path & {:as options}]\n  (if (instance? cursor/Cursor ref)\n    (cursor/Cursor. (.-ref ref) (into (.-path ref) path) (:meta options))\n    (cursor/Cursor. ref path (:meta options))))\n\n(defn cursor\n  \"Same as [[cursor-in]] but accepts single key instead of path vector.\"\n  [ref key & options]\n  (apply cursor-in ref [key] options))\n\n;; hooks\n\n(defn ^array use-state\n  \"Takes initial value or value returning fn and returns a tuple of [value set-value!],\n  where `value` is current state value and `set-value!` is a function that schedules re-render.\n\n  (let [[value set-state!] (rum/use-state 0)]\n    [:button {:on-click #(set-state! (inc value))}\n      value])\"\n  [value-or-fn]\n  (.useState js/React value-or-fn))\n\n(defn ^array use-reducer\n  \"Takes reducing function and initial state value.\n  Returns a tuple of [value dispatch!], where `value` is current state value and `dispatch` is a function that schedules re-render.\n\n  (defmulti value-reducer (fn [value event] event))\n\n  (defmethod value-reducer :inc [value _]\n    (inc value))\n\n  (let [[value dispatch!] (rum/use-reducer value-reducer 0)]\n    [:button {:on-click #(dispatch! :inc)}\n      value])\n\n  Read more at https://reactjs.org/docs/hooks-reference.html#usereducer\"\n  ([reducer-fn initial-value]\n   (.useReducer js/React #(reducer-fn %1 %2) initial-value identity)))\n\n(defn use-effect!\n  \"Takes setup-fn that executes either on the first render or after every update.\n  The function may return cleanup-fn to cleanup the effect, either before unmount or before every next update.\n  Calling behavior is controlled by deps argument.\n\n  (rum/use-effect!\n    (fn []\n      (.addEventListener js/window \\\"load\\\" handler)\n      #(.removeEventListener js/window \\\"load\\\" handler))\n    []) ;; empty deps collection instructs React to run setup-fn only once on initial render\n        ;; and cleanup-fn only once before unmounting\n\n  Read more at https://reactjs.org/docs/hooks-effect.html\"\n  ([setup-fn]\n   (.useEffect js/React #(or (setup-fn) js/undefined)))\n  ([setup-fn deps]\n   (->> (if (array? deps) deps (into-array deps))\n        (.useEffect js/React #(or (setup-fn) js/undefined)))))\n\n(defn use-layout-effect!\n  \"(rum/use-layout-effect!\n    (fn []\n      (.addEventListener js/window \\\"load\\\" handler)\n      #(.removeEventListener js/window \\\"load\\\" handler))\n    []) ;; empty deps collection instructs React to run setup-fn only once on initial render\n        ;; and cleanup-fn only once before unmounting\n\n  Read more at https://reactjs.org/docs/hooks-effect.html\"\n  ([setup-fn]\n   (.useLayoutEffect js/React #(or (setup-fn) js/undefined)))\n  ([setup-fn deps]\n   (->> (if (array? deps) deps (into-array deps))\n        (.useLayoutEffect js/React #(or (setup-fn) js/undefined)))))\n\n(defn use-callback\n  \"Takes callback function and returns memoized variant, memoization is done based on provided deps collection.\n\n  (rum/defc button < rum/static\n    [{:keys [on-click]} text]\n    [:button {:on-click on-click}\n      text])\n\n  (rum/defc app [v]\n    (let [on-click (rum/use-callback #(do-stuff v) [v])]\n      ;; because on-click callback is memoized here based on v argument\n      ;; the callback won't be re-created on every render, unless v changes\n      ;; which means that underlying `button` component won't re-render wastefully\n      [button {:on-click on-click}\n        \\\"press me\\\"]))\n\n  Read more at https://reactjs.org/docs/hooks-reference.html#usecallback\"\n  ([callback]\n   (.useCallback js/React callback))\n  ([callback deps]\n   (->> (if (array? deps) deps (into-array deps))\n        (.useCallback js/React callback))))\n\n(defn use-memo\n  \"Takes a function, memoizes it based on provided deps collection and executes immediately returning a result.\n  Read more at https://reactjs.org/docs/hooks-reference.html#usememo\"\n  ([f]\n   (.useMemo js/React f))\n  ([f deps]\n   (->> (if (array? deps) deps (into-array deps))\n        (.useMemo js/React f))))\n\n(defn use-ref\n  \"Takes a value and puts it into a mutable container which is persisted for the full lifetime of the component.\n  https://reactjs.org/docs/hooks-reference.html#useref\"\n  ([initial-value]\n   (.useRef js/React initial-value)))\n\n;; Refs\n\n(defn create-ref []\n  (.createRef js/React))\n\n(defn deref\n  \"Takes a ref returned from use-ref and returns its current value.\"\n  [^js ref]\n  (.-current ref))\n\n(defn set-ref! [^js ref value]\n  (set! (.-current ref) value))\n\n;;; Server-side rendering\n\n;; Roman. For Node.js runtime we require \"react-dom/server\" for you\n;; In the browser you have to add cljsjs/react-dom-server yourself\n\n(defn render-html\n  \"Main server-side rendering method. Given component, returns HTML string with static markup of that component.\n  Serve that string to the browser and [[hydrate]] same Rum component over it. React will be able to reuse already existing DOM and will initialize much faster.\n  No opts are supported at the moment.\"\n  ([element]\n   (render-html element nil))\n  ([element opts]\n   (if-not (identical? *target* \"nodejs\")\n     (.renderToString js/ReactDOMServer element)\n     (let [^js/ReactDOMServer react-dom-server (js/require \"react-dom/server\")]\n       (.renderToString react-dom-server element)))))\n\n(defn render-static-markup\n  \"Same as [[render-html]] but returned string has nothing React-specific.\n  This allows Rum to be used as traditional server-side templating engine.\"\n  [src]\n  (if-not (identical? *target* \"nodejs\")\n    (.renderToStaticMarkup js/ReactDOMServer src)\n    (let [^js/ReactDOMServer react-dom-server (js/require \"react-dom/server\")]\n      (.renderToStaticMarkup react-dom-server src))))\n\n;; JS components adapter\n(defn adapt-class-helper [type attrs children]\n  (let [args (.concat #js [type attrs] children)]\n    (.apply (.-createElement js/React) js/React args)))\n","~:reader-features",["^D",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["rum.core/state","comp","goog.object/get","rum.core/extend!","obj","props","seq__31421","cljs.core/seq","chunk__31423","count__31424","i__31425","vec__31433","cljs.core.nth","temp__5753__auto__","cljs.core/chunked-seq?","c__4638__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","vec__31447","cljs.core/first","cljs.core/next","k","v","goog.object/set","cljs.core/name","cljs.core/clj->js","rum.core/build-class","render","mixins","display-name","js/goog.DEBUG","cljs.core.mapcat","cljs.core/keys","cljs.core/set","js/Error","clojure.set/subset?","rum.specs/mixins","clojure.set.difference","cljs.core/select-keys","rum.specs/deprecated-mixins","cljs.core/vals","p1__31458#","cljs.core/run!","js/console","init","rum.util/collect","before-render","rum.util/collect*","wrap-render","wrapped-render","p1__31460#","p2__31459#","cljs.core.reduce","did-mount","will-remount","should-update","before-update","did-update","did-catch","will-unmount","child-context","class-props","cljs.core/merge","static-props","ctor","this","cljs.core.assoc","rum.util.call_all","cljs.core/volatile!","js/React.Component","_","goog/inherits","prototype","cljs.core/empty?","cljs.core/-vreset!","cljs.core/-deref","rum.util/call-all","next-props","cljs.core/deref","old-state","state","cljs.core.merge","next-state","p1__31462#","p2__31461#","new-state","or__4212__auto__","p1__31463#","cljs.core/some","vec__31473","dom","G__31476","cljs.core/vreset!","error","info","cljs.core.transduce","p1__31464#","cljs.core.map","rum.core/set-meta!","c","f","ctr","x31481","cljs.core/PROTOCOL_SENTINEL","cljs.core/meta","rum.core/lazy-build","bf","goog.functions/cacheReturnValue","rum.core/build-ctor","class","key-fn","args","cljs.core.apply","js/React.createElement","cljs.core/with-meta","rum.core/memo-compare-props","prev-props","cljs.core._EQ_","rum.core/react-memo","temp__5755__auto__","memo","js/React","rum.core/build-defc","render-body","rum.core/static","memo-class","rum.core/build-defcs","rum.core/build-defcc","rum.core/schedule","p1__31529#","and__4210__auto__","js/window","js/window.requestAnimationFrame","js/window.webkitRequestAnimationFrame","js/window.mozRequestAnimationFrame","js/window.msRequestAnimationFrame","js/setTimeout","rum.core/batch","js/ReactNative","js/ReactNative.unstable_batchedUpdates","js/ReactDOM","js/ReactDOM.unstable_batchedUpdates","a","rum.core/empty-queue","rum.core/render-queue","rum.core/render-one","cljs.core/not","rum.core/render-all","queue","rum.core/render","rum.core/sync-update?","rum.core/request-render","component","cljs.core.conj","rum.core/mark-sync-update","cljs.core/fn?","e","ret","rum.core/mount","element","node","js/ReactDOM.render","rum.core/unmount","js/ReactDOM.unmountComponentAtNode","rum.core/hydrate","js/ReactDOM.hydrate","rum.core/portal","js/ReactDOM.createPortal","rum.core/create-context","default-value","rum.core/with-key","key","js/React.cloneElement","rum.core/with-ref","ref","rum.core/dom-node","js/ReactDOM.findDOMNode","rum.core/ref","rum.core/ref-node","cljs.core.not_EQ_","var_args","G__31604","rum.core/local","initial","rum.core.local","local-state","cljs.core.atom","cljs.core/add-watch","p","n","rum.core/reactive","cljs.core/random-uuid","render-fn","*reactions*-orig-val__31611","*reactions*-temp-val__31612","rum.core/*reactions*","vec__31633","old-reactions","new-reactions","seq__31650","chunk__31651","count__31652","i__31653","cljs.core/contains?","cljs.core/remove-watch","seq__31670","chunk__31672","count__31674","i__31676","seq__31698","chunk__31699","count__31700","i__31701","cljs.core.dissoc","rum.core/react","rum.core/derived-atom","rum.derived-atom/derived-atom","args__4824__auto__","len__4818__auto__","i__4819__auto__","argseq__4825__auto__","cljs.core/IndexedSeq","rum.core/cursor-in","p__31744","map__31745","cljs.core/--destructure-map","seq31741","G__31742","G__31743","self__4805__auto__","path","options","rum.cursor/Cursor","cljs.core.into","rum.core/cursor","seq31750","G__31751","G__31752","rum.core/use-state","value-or-fn","rum.core/use-reducer","reducer-fn","initial-value","p1__31757#","p2__31758#","cljs.core/identity","G__31765","rum.core/use-effect!","setup-fn","js/undefined","deps","cljs.core/array?","cljs.core.into_array","G__31778","rum.core/use-layout-effect!","G__31788","rum.core/use-callback","callback","G__31799","rum.core/use-memo","rum.core/use-ref","rum.core/create-ref","rum.core/deref","rum.core/set-ref!","value","G__31806","rum.core/render-html","rum.core.render_html","opts","cljs.core/*target*","js/ReactDOMServer","react-dom-server","js/require","rum.core/render-static-markup","src","rum.core/adapt-class-helper","type","attrs","children"]],"~:used-vars",["^D",["~$cljs.core/array?","~$cljs.core/mapcat","~$cljs.core/--destructure-map","~$rum.core/extend!","~$js/ReactNative.unstable_batchedUpdates","~$js/window.requestAnimationFrame","~$cljs.core/PROTOCOL_SENTINEL","~$rum.core/portal","~$rum.util/collect*","~$rum.core/react-memo","~$js/React","~$js/undefined","~$js/ReactNative","~$rum.core/memo-compare-props","~$rum.core/mount","~$rum.core/use-state","~$cljs.core/=","~$js/window.webkitRequestAnimationFrame","~$rum.core/create-ref","~$cljs.core/keys","~$cljs.core/into-array","~$rum.core/use-ref","~$rum.core/adapt-class-helper","~$cljs.core/IndexedSeq","~$cljs.core/-deref","~$rum.core/create-context","~$rum.core/set-meta!","~$rum.core/local","~$cljs.core/count","~$cljs.core/deref","~$cljs.core/transduce","~$cljs.core/reduce","~$cljs.core/seq","~$cljs.core/chunk-first","~$cljs.core/apply","~$cljs.core/identity","~$rum.core/set-ref!","~$rum.core/render-all","~$rum.core/use-effect!","~$cljs.core/vreset!","~$cljs.core/not=","~$cljs.core/dissoc","~$rum.core/use-reducer","~$rum.core/ref","~$cljs.core/chunk-rest","~$cljs.core/atom","~$goog.functions/cacheReturnValue","~$js/React.cloneElement","~$rum.specs/mixins","~$js/console","~$js/ReactDOM.unmountComponentAtNode","~$rum.core/with-key","~$js/setTimeout","~$cljs.core/set","~$rum.core/schedule","~$rum.core/render-static-markup","~$cljs.core/empty?","~$rum.core/build-defcs","~$rum.core/*reactions*","~$cljs.core/contains?","~$rum.core/use-layout-effect!","~$cljs.core/into","~$rum.core/unmount","~$cljs.core/conj","~$goog/inherits","~$rum.core/request-render","~$cljs.core/run!","~$cljs.core/with-meta","~$js/ReactDOM.createPortal","~$rum.core/render-queue","~$cljs.core/map","~$rum.core/lazy-build","~$cljs.core/fn?","~$cljs.core/volatile!","~$js/window.mozRequestAnimationFrame","~$js/ReactDOM.unstable_batchedUpdates","~$cljs.core/vals","~$rum.core/static","~$goog.object/set","~$rum.specs/deprecated-mixins","~$cljs.core/-nth","~$rum.core/render-one","~$cljs.core/clj->js","~$clojure.set/difference","~$js/ReactDOM.findDOMNode","~$cljs.core/-vreset!","~$rum.core/with-ref","~$rum.core/batch","~$rum.derived-atom/derived-atom","~$js/ReactDOM.render","~$cljs.core/nth","~$cljs.core/meta","~$rum.core/cursor-in","~$rum.core/react","~$js/ReactDOMServer","~$js/goog.DEBUG","~$clojure.set/subset?","~$cljs.core/*target*","~$cljs.core/next","~$js/ReactDOM.hydrate","~$cljs.core/select-keys","~$rum.core/reactive","~$rum.core/use-memo","~$rum.util/call-all","~$cljs.core/not","~$rum.core/sync-update?","~$rum.cursor/Cursor","~$js/React.createElement","~$rum.core/state","~$cljs.core/assoc","~$rum.core/build-defcc","~$js/window.msRequestAnimationFrame","~$rum.core/derived-atom","~$rum.core/ref-node","~$rum.core/dom-node","~$js/require","~$rum.core/cursor","~$rum.util/collect","~$cljs.core/first","~$js/window","~$rum.core/render","~$js/React.Component","~$rum.core/hydrate","~$rum.core/render-html","~$cljs.core/name","~$rum.core/build-defc","~$cljs.core/merge","~$js/ReactDOM","~$js/Error","~$cljs.core/random-uuid","~$rum.core/build-class","~$cljs.core/add-watch","~$rum.core/build-ctor","~$cljs.core/some","~$rum.core/deref","~$cljs.core/remove-watch","~$rum.core/empty-queue","~$rum.core/use-callback","~$rum.core/mark-sync-update","~$goog.object/get","~$cljs.core/chunked-seq?"]]],"~:cache-keys",["~#cmap",[["~:shadow.build.npm/resource","node_modules/react-dom/index.js"],["e8091a4577ab6b32c9fa13d5dfc59db052218e1e","4e9614cdc0e2c223ef717009a8fd70c2c8df01cc","dc3011a0ee823c91a565237d17cbc3c0856de8a6","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^D",[]],"~:deps-syms",["~$shadow.js","~$module$node_modules$react_dom$cjs$react_dom_production_min","~$module$node_modules$react_dom$cjs$react_dom_development"]]],["^2=","goog/dom/tagname.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N","~$goog.dom.HtmlElement"]]],["^2=","rum/util.cljc"],["569584f2f07641708e6d9b858cff5e804bf5e329","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N","^1K"]]],["^2=","goog/math/math.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N","~$goog.array","~$goog.asserts"]]],["^2=","goog/html/trustedtypes.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N"]]],["^2=","goog/labs/useragent/browser.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N","^61","~$goog.labs.userAgent.util","^1M","~$goog.string.internal"]]],["^2=","goog/html/safeurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N","^62","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^64"]]],["^2=","goog/array/array.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N","^62"]]],["^2=","goog/debug/error.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N"]]],["^2=","daiquiri/normalize.cljc"],["569584f2f07641708e6d9b858cff5e804bf5e329","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N","^1K","~$clojure.string","~$daiquiri.util"]]],["^2=","rum/derived_atom.cljc"],["569584f2f07641708e6d9b858cff5e804bf5e329","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N","^1K"]]],["^2=","goog/dom/nodetype.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N"]]],["^2=","daiquiri/interpreter.cljs"],["569584f2f07641708e6d9b858cff5e804bf5e329","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N","^1K","^6;","~$daiquiri.normalize","^6<","^1O","^1M"]]],["^5T","node_modules/scheduler/cjs/scheduler.development.js"],["e8091a4577ab6b32c9fa13d5dfc59db052218e1e","4e9614cdc0e2c223ef717009a8fd70c2c8df01cc","f683a524b03498a1510e8212cb7ad7992728f04a","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^5Y"]]],["^5T","node_modules/scheduler/cjs/scheduler.production.min.js"],["e8091a4577ab6b32c9fa13d5dfc59db052218e1e","4e9614cdc0e2c223ef717009a8fd70c2c8df01cc","9472969a489f23335a05beb90573f81a73239194","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^5Y"]]],["^2=","daiquiri/util.cljc"],["569584f2f07641708e6d9b858cff5e804bf5e329","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N","^1K","^1G","^6;"]]],["^2=","goog/string/typedstring.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N"]]],["^5T","node_modules/scheduler/cjs/scheduler-tracing.production.min.js"],["e8091a4577ab6b32c9fa13d5dfc59db052218e1e","4e9614cdc0e2c223ef717009a8fd70c2c8df01cc","d1e7bb5f7c53667de84b51d7535a959d16b917a5","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^5Y"]]],["^5T","node_modules/react/index.js"],["e8091a4577ab6b32c9fa13d5dfc59db052218e1e","4e9614cdc0e2c223ef717009a8fd70c2c8df01cc","a69a7f3d4a4636bf9035bc53c05b2d99a7b8af7f","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^5Y","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^2=","shadow/js.js"],["3d6ef2b6e978cc2c657d918e731bb6e374fbfd65","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N"]]],["^2=","goog/object/object.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N"]]],["^2=","goog/dom/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N","^62"]]],["^5T","node_modules/react-dom/cjs/react-dom.production.min.js"],["e8091a4577ab6b32c9fa13d5dfc59db052218e1e","4e9614cdc0e2c223ef717009a8fd70c2c8df01cc","94bb474c079e06a407e4fa922e58d3c69ee2b649","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^5Y","~$module$node_modules$react$index","~$module$node_modules$object_assign$index","~$module$node_modules$scheduler$index"]]],"~:SHADOW-TIMESTAMP",[1647940543000,1647940543000,1633031471000],["^5T","node_modules/react/cjs/react.development.js"],["e8091a4577ab6b32c9fa13d5dfc59db052218e1e","4e9614cdc0e2c223ef717009a8fd70c2c8df01cc","754b7a48941975257c8955f6d5e511cb3a878737","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^5Y","^6A"]]],["^2=","goog/math/long.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N","^62","~$goog.reflect"]]],["^2=","goog/html/trustedresourceurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N","^62","~$goog.fs.blob","^65","~$goog.html.SafeScript","~$goog.html.trustedtypes","^67","^68","^69","^6:"]]],["^2=","goog/string/internal.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N"]]],["^5T","node_modules/scheduler/cjs/scheduler-tracing.development.js"],["e8091a4577ab6b32c9fa13d5dfc59db052218e1e","4e9614cdc0e2c223ef717009a8fd70c2c8df01cc","12fb110a42ab39177d6ab3e0a205e4a8ef350ae2","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^5Y"]]],["^2=","goog/functions/functions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N"]]],["^2=","goog/html/safestyle.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N","^61","^62","~$goog.html.SafeUrl","^69","^6:","^64"]]],["^2=","goog/dom/safe.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N","^62","~$goog.dom.asserts","^1H","~$goog.html.SafeHtml","^6F","~$goog.html.SafeStyle","^6H","^66","~$goog.html.uncheckedconversions","^69","^64"]]],["^2=","goog/structs/map.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^2=","goog/html/safehtml.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N","^61","^62","~$goog.dom.TagName","~$goog.dom.tags","^6F","^6K","~$goog.html.SafeStyleSheet","^6H","^66","^6G","^67","^68","~$goog.labs.userAgent.browser","^1M","^69","^6:","^64"]]],["^2=","goog/dom/tags.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N","^1M"]]],["^5T","node_modules/scheduler/index.js"],["e8091a4577ab6b32c9fa13d5dfc59db052218e1e","4e9614cdc0e2c223ef717009a8fd70c2c8df01cc","408126fc2241739168bcaf5965ae56a7df143144","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^5Y","~$module$node_modules$scheduler$cjs$scheduler_production_min","~$module$node_modules$scheduler$cjs$scheduler_development"]]],["^2=","goog/fs/blob.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N","^61"]]],["^2=","goog/asserts/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^2=","goog/uri/uri.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N","^61","^62","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^2=","goog/i18n/bidi.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N"]]],["^5T","node_modules/object-assign/index.js"],["e8091a4577ab6b32c9fa13d5dfc59db052218e1e","4e9614cdc0e2c223ef717009a8fd70c2c8df01cc","519ffd5a4c91b67302cc9947b794966d629860cd","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^5Y"]]],["^2=","goog/fs/url.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N"]]],["^2=","goog/base.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",[]]],["^2=","goog/structs/structs.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N","^61","^1M"]]],["^2=","cljsjs/react.cljs"],["4323f8e603a952cae34c4c6db04141e97928434f","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N","^1K","^6@"]]],["^2=","clojure/string.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N","^1K","^6W","~$goog.string.StringBuffer"]]],["^2=","rum/specs.cljc"],["569584f2f07641708e6d9b858cff5e804bf5e329","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N","^1K"]]],["^5T","node_modules/react/cjs/react.production.min.js"],["e8091a4577ab6b32c9fa13d5dfc59db052218e1e","4e9614cdc0e2c223ef717009a8fd70c2c8df01cc","0a81b45abe33f0ad39b726512604018f94261db9","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^5Y","^6A"]]],["^2=","goog/string/string.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N","~$goog.dom.safe","^6L","^69","^64"]]],["^2=","goog/reflect/reflect.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N"]]],["^2=","goog/labs/useragent/util.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N","^64"]]],["^2=","goog/string/stringbuffer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N"]]],["^2=","goog/iter/iter.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N","^61","^62","^1H","~$goog.math"]]],["^2=","rum/cursor.cljs"],["569584f2f07641708e6d9b858cff5e804bf5e329","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N","^1K"]]],["^2=","goog/html/uncheckedconversions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N","^62","^6J","^6F","^6K","^6Q","^6H","^66","^69","^64","^67"]]],["^2=","goog/dom/htmlelement.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N"]]],["^2=","cljs/core.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N","~$goog.math.Long","~$goog.math.Integer","^6W","^1M","^61","~$goog.Uri","^71"]]],["^2=","goog/html/safescript.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N","^69","^6:","^6G","^62"]]],["^2=","goog/html/safestylesheet.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N","^69","^6K","^6:","^61","^1M","^62","^64"]]],["^2=","cljsjs/react/dom.cljs"],["4323f8e603a952cae34c4c6db04141e97928434f","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N","^1K","^6@","~$module$node_modules$react_dom$index"]]],["^2=","goog/math/integer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N","^6D"]]],["^5T","node_modules/scheduler/tracing.js"],["e8091a4577ab6b32c9fa13d5dfc59db052218e1e","4e9614cdc0e2c223ef717009a8fd70c2c8df01cc","4a7a89de5eaa5548bfc85da9e5243b3c7e444a34","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^5Y","~$module$node_modules$scheduler$cjs$scheduler_tracing_production_min","~$module$node_modules$scheduler$cjs$scheduler_tracing_development"]]],["^5T","node_modules/react-dom/cjs/react-dom.development.js"],["e8091a4577ab6b32c9fa13d5dfc59db052218e1e","4e9614cdc0e2c223ef717009a8fd70c2c8df01cc","9e0e7f2f8475431f2b4b8c517c6fabc2273c7857","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^5Y","^6@","^6A","^6B","~$module$node_modules$scheduler$tracing"]]],["^2=","clojure/set.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N","^1K"]]],["^2=","goog/uri/utils.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N","^62","^6W"]]],["^2=","goog/string/const.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N","^62","^6:"]]],["^2=","rum/core.cljs"],["569584f2f07641708e6d9b858cff5e804bf5e329","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N","^1K","^1O","^1Q","^1M","^1H","^1G","^1V","^1U","^1I","^1S","^1P"]]],["^2=","daiquiri/core.cljs"],["569584f2f07641708e6d9b858cff5e804bf5e329","^5U",["^ ","^5V",null,"^5W",["^D",[]],"^5X",["^1N","^1K","~$daiquiri.interpreter","^1O"]]]]],"~:clj-info",["^ ","jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/core.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/rum/rum/0.12.8/rum-0.12.8.jar!/daiquiri/normalize.cljc",1644311977000,"jar:file:/Users/mehdi/.m2/repository/rum/rum/0.12.8/rum-0.12.8.jar!/daiquiri/util.cljc",1644311977000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/env.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/js_deps.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/rum/rum/0.12.8/rum-0.12.8.jar!/daiquiri/compiler.clj",1644311977000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/inspect.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/reader_types.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/passes.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/default_data_readers.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/errors.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map/base64_vlq.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/passes/and_or.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/rum/rum/0.12.8/rum-0.12.8.jar!/rum/cursor.clj",1644311977000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1633011066000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/tagged_literals.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/instant.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1633011066000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/compiler.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/impl.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1633011066000,"jar:file:/Users/mehdi/.m2/repository/rum/rum/0.12.8/rum-0.12.8.jar!/rum/server_render.clj",1644311977000,"jar:file:/Users/mehdi/.m2/repository/rum/rum/0.12.8/rum-0.12.8.jar!/rum/derived_atom.cljc",1644311977000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/util.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1633011066000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map/base64.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1633011066000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1633011066000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/data.json/2.4.0/data.json-2.4.0.jar!/clojure/data/json.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/rum/rum/0.12.8/rum-0.12.8.jar!/rum/core.clj",1644311977000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/externs.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1633011066000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","rum/core.cljs","^7",1,"^8",5,"^9",1,"^:",13],"^;",["^ ","^<","^=","^>","^?","^@","^A"],"^B",null,"^C",["^D",["^E","^F"]],"^G",["^ ","^H",["^ ","^I",["^J",[["^K"],["^K","^L"]]],"^M","cljs: Creates React context with initial value set to `value`.\n  clj: Create dynamic var bound to `value`.","^7",336,"^8",1,"^6","rum/core.clj","^N","^O","^P","^Q","^R",true],"^S",["^ ","^I",["^J",[["~$&","^T"]]],"^M","~```\n   (defc name doc-string? (< mixins+)? [ params* ] render-body+)\n   ```\n  \n   Defc does couple of things:\n   \n     1. Wraps body into daiquiri/compile-html\n     2. Generates render function from that\n     3. Takes render function and mixins, builds React class from them\n     4. Using that class, generates constructor fn [args]->ReactElement\n     5. Defines top-level var with provided name and assigns ctor to it\n  \n   Usage:\n   \n   ```\n   (rum/defc label < rum/static [t]\n     [:div t])\n  \n   ;; creates React class\n   ;; adds mixin rum/static\n   ;; defines ctor fn (defn label [t] ...) => element\n  \n   (label \"text\") ;; => returns React element built with label class\n   ```","^7",71,"^8",1,"^6","rum/core.clj","^N","^U","^P","^Q","^R",true],"^V",["^ ","^I",["^J",[["^W","~$&","^X"]]],"^M","(rum/fragment [button] [input] ...)","^7",432,"^8",1,"^6","rum/core.clj","^N","^Y","^P","^Q","^R",true],"^Z",["^ ","^I",["^J",[["~$&","^T"]]],"^M","~```\n   (defcs name doc-string? (< mixins+)? [ state-arg params* ] render-body+)\n   ```\n   \n   Same as [[defc]], but render will take additional first argument: component state.","^7",99,"^8",1,"^6","rum/core.clj","^N","^[","^P","^Q","^R",true],"^10",["^ ","^I",["^J",[["^11","^W","~$&","^X"]]],"^M","Adapts JavaScript React component for usage in Rum components.\n\n  [:div\n    (rum/adapt-class js/Button {:on-click f} \"press me\")]\n\n  When using in Clojure JVM calls *render-js-component* to render a fallback.\n  See example in rum.examples.js-components ns","^7",451,"^8",1,"^6","rum/core.clj","^N","^12","^P","^Q","^R",true],"^13",["^ ","^I",["^J",[[["^ ","^14",["^15"]],"^16"]]],"^M","(rum/require-lazy '[app.components :refer [alert]])\n\n  (rum/defc root []\n    (suspense {:fallback \"Hello!\"}\n      (alert \"ARGUMENT\")))\n\n  See a complete example here https://github.com/roman01la/rum-code-splitting","^7",414,"^8",1,"^6","rum/core.clj","^N","^17","^P","^Q","^R",true],"^18",["^ ","^I",["^J",[["~$v"]]],"^7",15,"^8",1,"^6","rum/core.clj","^N","^19","^P","^Q","^R",true],"^1:",["^ ","^I",["^J",[[["^1;","^1<"],"~$&","^T"]]],"^M","(with-context [value ctx]\n     [:div value])","^7",352,"^8",1,"^6","rum/core.clj","^N","^1=","^P","^Q","^R",true],"^1>",["^ ","^I",["^J",[[["^1<","^L"],"~$&","^T"]]],"^M","(bind-context [context value]\n    ...)","^7",361,"^8",1,"^6","rum/core.clj","^N","^1?","^P","^Q","^R",true],"^1@",["^ ","^I",["^J",[["~$&","^T"]]],"^M","~```\n   (defcc name doc-string? (< mixins+)? [ comp-arg params* ] render-body+)\n   ```\n\n   Same as [[defc]], but render will take additional first argument: react component.","^7",108,"^8",1,"^6","rum/core.clj","^N","^1A","^P","^Q","^R",true]],"~:shadow/js-access-properties",["^D",["unstable_batchedUpdates","requestAnimationFrame","webkitRequestAnimationFrame","createElement","msRequestAnimationFrame","hydrate","createPortal","renderToStaticMarkup","cloneElement","findDOMNode","render","unmountComponentAtNode","Component","renderToString","mozRequestAnimationFrame"]],"^N","^Q","^1B",["^ "],"~:shadow/js-requires",["^D",["react-dom/server"]],"^1D",null,"^1E",["^ ","^1F","^1G","^1H","^1H","^1I","^1I","^1J","^1H","^1K","^1K","^1L","^1M","^1N","^1N","^1M","^1M","^1O","^1O","^1P","^1P","^1G","^1G","^1Q","^1Q","^1R","^1S","^1S","^1S","^1T","^1I","^1U","^1U","^1V","^1V","^1W","^1P"],"^1X",["^D",["^1Y","^1Z"]],"~:shadow/js-access-global",["^D",["window","require","ReactDOMServer","React","ReactDOM","ReactNative","undefined","Error","setTimeout"]],"^1[",["^ ","^20","^1S","^21","^1S","^22","^1S"],"~:defs",["^ ","~$adapt-class-helper",["^ ","~:protocol-inline",null,"^5",["^ ","^6","rum/core.cljs","^7",675,"^8",7,"^9",675,"^:",25,"^I",["^J",["~$quote",["^J",[["^11","^W","^X"]]]]]],"^N","^33","^6","rum/core.cljs","^:",25,"~:method-params",["^J",[["^11","^W","^X"]]],"~:protocol-impl",null,"~:arglists-meta",["^J",[null,null]],"^8",1,"~:variadic?",false,"^7",675,"~:ret-tag","~$js","^9",675,"~:max-fixed-arity",3,"~:fn-var",true,"^I",["^J",["^8;",["^J",[["^11","^W","^X"]]]]]],"~$use-ref",["^ ","^8:",null,"^5",["^ ","^6","rum/core.cljs","^7",629,"^8",7,"^9",629,"^:",14,"^I",["^J",["^8;",["^J",[["~$initial-value"]]]]],"^M","Takes a value and puts it into a mutable container which is persisted for the full lifetime of the component.\n  https://reactjs.org/docs/hooks-reference.html#useref"],"^N","^32","^6","rum/core.cljs","^:",14,"^8<",["^J",[["^8E"]]],"^8=",null,"^8>",["^J",[null,null]],"^8",1,"^8?",false,"^7",629,"^8@","^8A","^9",629,"^8B",1,"^8C",true,"^I",["^J",["^8;",["^J",[["^8E"]]]]],"^M","Takes a value and puts it into a mutable container which is persisted for the full lifetime of the component.\n  https://reactjs.org/docs/hooks-reference.html#useref"],"~$mount",["^ ","^8:",null,"^5",["^ ","^6","rum/core.cljs","^7",273,"^8",7,"^9",273,"^:",12,"^I",["^J",["^8;",["^J",[["~$element","~$node"]]]]],"^M","Add element to the DOM tree. Idempotent. Subsequent mounts will just update element."],"^N","^2W","^6","rum/core.cljs","^:",12,"^8<",["^J",[["^8G","^8H"]]],"^8=",null,"^8>",["^J",[null,null]],"^8",1,"^8?",false,"^7",273,"^8@","~$clj-nil","^9",273,"^8B",2,"^8C",true,"^I",["^J",["^8;",["^J",[["^8G","^8H"]]]]],"^M","Add element to the DOM tree. Idempotent. Subsequent mounts will just update element."],"~$react-memo",["^ ","^8:",null,"^5",["^ ","^6","rum/core.cljs","^7",183,"^8",7,"^9",183,"^:",17,"^I",["^J",["^8;",["^J",[["~$f"]]]]]],"^N","^2R","^6","rum/core.cljs","^:",17,"^8<",["^J",[["~$f"]]],"^8=",null,"^8>",["^J",[null,null]],"^8",1,"^8?",false,"^7",183,"^8@",["^D",[null,"~$any"]],"^9",183,"^8B",1,"^8C",true,"^I",["^J",["^8;",["^J",[["~$f"]]]]]],"~$unmount",["^ ","^8:",null,"^5",["^ ","^6","rum/core.cljs","^7",279,"^8",7,"^9",279,"^:",14,"^I",["^J",["^8;",["^J",[["^8H"]]]]],"^M","Removes component from the DOM tree."],"^N","^3[","^6","rum/core.cljs","^:",14,"^8<",["^J",[["^8H"]]],"^8=",null,"^8>",["^J",[null,null]],"^8",1,"^8?",false,"^7",279,"^8@","^8A","^9",279,"^8B",1,"^8C",true,"^I",["^J",["^8;",["^J",[["^8H"]]]]],"^M","Removes component from the DOM tree."],"~$local",["^ ","^8:",null,"^5",["^ ","^6","rum/core.cljs","^7",373,"^8",7,"^9",373,"^:",12,"^I",["^J",["^8;",["^J",[["~$initial"],["^8N","~$key"]]]]],"^M","Mixin constructor. Adds an atom to component’s state that can be used to keep stuff during component’s lifecycle. Component will be re-rendered if atom’s value changes. Atom is stored under user-provided key or under `:rum/local` by default.\n  \n   ```\n   (rum/defcs counter < (rum/local 0 :cnt)\n     [state label]\n     (let [*cnt (:cnt state)]\n       [:div {:on-click (fn [_] (swap! *cnt inc))}\n         label @*cnt]))\n   \n   (rum/mount (counter \"Click count: \"))\n   ```","~:top-fn",["^ ","^8?",false,"~:fixed-arity",2,"^8B",2,"^8<",[["^8N"],["^8N","^8O"]],"^I",["^J",[["^8N"],["^8N","^8O"]]],"^8>",["^J",[null,null]]]],"^N","^38","^6","rum/core.cljs","^:",12,"^8P",["^ ","^8?",false,"^8Q",2,"^8B",2,"^8<",[["^8N"],["^8N","^8O"]],"^I",["^J",[["^8N"],["^8N","^8O"]]],"^8>",["^J",[null,null]]],"^8<",[["^8N"],["^8N","^8O"]],"^8=",null,"^8Q",2,"^8>",["^J",[null,null]],"^8",1,"^8?",false,"~:methods",[["^ ","^8Q",1,"^8?",false,"~:tag","^8K"],["^ ","^8Q",2,"^8?",false,"^8S","~$cljs.core/IMap"]],"^7",373,"^9",373,"^8B",2,"^8C",true,"^I",["^J",[["^8N"],["^8N","^8O"]]],"^M","Mixin constructor. Adds an atom to component’s state that can be used to keep stuff during component’s lifecycle. Component will be re-rendered if atom’s value changes. Atom is stored under user-provided key or under `:rum/local` by default.\n  \n   ```\n   (rum/defcs counter < (rum/local 0 :cnt)\n     [state label]\n     (let [*cnt (:cnt state)]\n       [:div {:on-click (fn [_] (swap! *cnt inc))}\n         label @*cnt]))\n   \n   (rum/mount (counter \"Click count: \"))\n   ```"],"~$create-context",["^ ","^8:",null,"^5",["^ ","^6","rum/core.cljs","^7",294,"^8",7,"^9",294,"^:",21,"^I",["^J",["^8;",["^J",[["~$default-value"]]]]]],"^N","^36","^6","rum/core.cljs","^:",21,"^8<",["^J",[["^8V"]]],"^8=",null,"^8>",["^J",[null,null]],"^8",1,"^8?",false,"^7",294,"^8@","^8A","^9",294,"^8B",1,"^8C",true,"^I",["^J",["^8;",["^J",[["^8V"]]]]]],"~$use-reducer",["^ ","^8:",null,"^5",["^ ","^6","rum/core.cljs","^7",546,"^8",14,"^9",546,"^:",25,"^8S","~$array","^I",["^J",["^8;",["^J",[["~$reducer-fn","^8E"]]]]],"^M","Takes reducing function and initial state value.\n  Returns a tuple of [value dispatch!], where `value` is current state value and `dispatch` is a function that schedules re-render.\n\n  (defmulti value-reducer (fn [value event] event))\n\n  (defmethod value-reducer :inc [value _]\n    (inc value))\n\n  (let [[value dispatch!] (rum/use-reducer value-reducer 0)]\n    [:button {:on-click #(dispatch! :inc)}\n      value])\n\n  Read more at https://reactjs.org/docs/hooks-reference.html#usereducer"],"^N","^3G","^6","rum/core.cljs","^:",25,"^8<",["^J",[["^8Y","^8E"]]],"^8=",null,"^8>",["^J",[null,null]],"^8",1,"^8?",false,"^7",546,"^8@","^8X","^9",546,"^8B",2,"^8S","^8X","^8C",true,"^I",["^J",["^8;",["^J",[["^8Y","^8E"]]]]],"^M","Takes reducing function and initial state value.\n  Returns a tuple of [value dispatch!], where `value` is current state value and `dispatch` is a function that schedules re-render.\n\n  (defmulti value-reducer (fn [value event] event))\n\n  (defmethod value-reducer :inc [value _]\n    (inc value))\n\n  (let [[value dispatch!] (rum/use-reducer value-reducer 0)]\n    [:button {:on-click #(dispatch! :inc)}\n      value])\n\n  Read more at https://reactjs.org/docs/hooks-reference.html#usereducer"],"~$memo-compare-props",["^ ","^8:",null,"^5",["^ ","^6","rum/core.cljs","^7",179,"^8",8,"^9",179,"^:",26,"~:private",true,"^I",["^J",["^8;",["^J",[["~$prev-props","~$next-props"]]]]]],"^8[",true,"^N","^2V","^6","rum/core.cljs","^:",26,"^8<",["^J",[["^90","^91"]]],"^8=",null,"^8>",["^J",[null,null]],"^8",1,"^8?",false,"^7",179,"^8@","~$boolean","^9",179,"^8B",2,"^8C",true,"^I",["^J",["^8;",["^J",[["^90","^91"]]]]]],"~$use-memo",["^ ","^8:",null,"^5",["^ ","^6","rum/core.cljs","^7",620,"^8",7,"^9",620,"^:",15,"^I",["^J",["^8;",["^J",[["~$f"],["~$f","~$deps"]]]]],"^M","Takes a function, memoizes it based on provided deps collection and executes immediately returning a result.\n  Read more at https://reactjs.org/docs/hooks-reference.html#usememo","^8P",["^ ","^8?",false,"^8Q",2,"^8B",2,"^8<",[["~$f"],["~$f","^94"]],"^I",["^J",[["~$f"],["~$f","^94"]]],"^8>",["^J",[null,null]]]],"^N","^4W","^6","rum/core.cljs","^:",15,"^8P",["^ ","^8?",false,"^8Q",2,"^8B",2,"^8<",[["~$f"],["~$f","^94"]],"^I",["^J",[["~$f"],["~$f","^94"]]],"^8>",["^J",[null,null]]],"^8<",[["~$f"],["~$f","^94"]],"^8=",null,"^8Q",2,"^8>",["^J",[null,null]],"^8",1,"^8?",false,"^8R",[["^ ","^8Q",1,"^8?",false,"^8S","^8A"],["^ ","^8Q",2,"^8?",false,"^8S","^8A"]],"^7",620,"^9",620,"^8B",2,"^8C",true,"^I",["^J",[["~$f"],["~$f","^94"]]],"^M","Takes a function, memoizes it based on provided deps collection and executes immediately returning a result.\n  Read more at https://reactjs.org/docs/hooks-reference.html#usememo"],"~$reactive",["^ ","^5",["^ ","^6","rum/core.cljs","^7",403,"^8",6,"^9",403,"^:",14],"^N","^4V","^6","rum/core.cljs","^:",14,"^8",1,"^7",403,"^9",403,"^8S","^8T","^M","Mixin. Works in conjunction with [[react]].\n  \n   ```\n   (rum/defc comp < rum/reactive\n     [*counter]\n     [:div (rum/react counter)])\n\n   (def *counter (atom 0))\n   (rum/mount (comp *counter) js/document.body)\n   (swap! *counter inc) ;; will force comp to re-render\n   ```"],"~$render-all",["^ ","^8:",null,"^5",["^ ","^6","rum/core.cljs","^7",242,"^8",8,"^9",242,"^:",18,"^8[",true,"^I",["^J",["^8;",["^J",[["~$queue"]]]]]],"^8[",true,"^N","^3B","^6","rum/core.cljs","^:",18,"^8<",["^J",[["^97"]]],"^8=",null,"^8>",["^J",[null,null]],"^8",1,"^8?",false,"^7",242,"^8@","^8I","^9",242,"^8B",1,"^8C",true,"^I",["^J",["^8;",["^J",[["^97"]]]]]],"~$set-meta!",["^ ","^8:",null,"^5",["^ ","^6","rum/core.cljs","^7",148,"^8",8,"^9",148,"^:",17,"^8[",true,"^I",["^J",["^8;",["^J",[["~$c"]]]]]],"^8[",true,"^N","^37","^6","rum/core.cljs","^:",17,"^8<",["^J",[["~$c"]]],"^8=",null,"^8>",["^J",[null,null]],"^8",1,"^8?",false,"^7",148,"^8@","~$function","^9",148,"^8B",1,"^8C",true,"^I",["^J",["^8;",["^J",[["~$c"]]]]]],"~$ref-node",["^ ","^8:",null,"^5",["^ ","^6","rum/core.cljs","^7",339,"^8",7,"^9",339,"^:",15,"^I",["^J",["^8;",["^J",[["~$state","^8O"]]]]],"^M","DEPRECATED: Use :ref (fn [dom-or-nil]) callback instead. See rum issue #124\n  Given state and ref handle, returns DOM node associated with ref."],"^N","^56","^6","rum/core.cljs","^:",15,"^8<",["^J",[["^9;","^8O"]]],"^8=",null,"^8>",["^J",[null,null]],"^8",1,"^8?",false,"^7",339,"^8@","^8A","^9",339,"^8B",2,"^8C",true,"^I",["^J",["^8;",["^J",[["^9;","^8O"]]]]],"^M","DEPRECATED: Use :ref (fn [dom-or-nil]) callback instead. See rum issue #124\n  Given state and ref handle, returns DOM node associated with ref."],"~$create-ref",["^ ","^8:",null,"^5",["^ ","^6","rum/core.cljs","^7",637,"^8",7,"^9",637,"^:",17,"^I",["^J",["^8;",["^J",[[]]]]]],"^N","^2[","^6","rum/core.cljs","^:",17,"^8<",["^J",[[]]],"^8=",null,"^8>",["^J",[null,null]],"^8",1,"^8?",false,"^7",637,"^8@","^8A","^9",637,"^8B",0,"^8C",true,"^I",["^J",["^8;",["^J",[[]]]]]],"~$use-layout-effect!",["^ ","^8:",null,"^5",["^ ","^6","rum/core.cljs","^7",582,"^8",7,"^9",582,"^:",25,"^I",["^J",["^8;",["^J",[["~$setup-fn"],["^9>","^94"]]]]],"^M","(rum/use-layout-effect!\n    (fn []\n      (.addEventListener js/window \"load\" handler)\n      #(.removeEventListener js/window \"load\" handler))\n    []) ;; empty deps collection instructs React to run setup-fn only once on initial render\n        ;; and cleanup-fn only once before unmounting\n\n  Read more at https://reactjs.org/docs/hooks-effect.html","^8P",["^ ","^8?",false,"^8Q",2,"^8B",2,"^8<",[["^9>"],["^9>","^94"]],"^I",["^J",[["^9>"],["^9>","^94"]]],"^8>",["^J",[null,null]]]],"^N","^3Y","^6","rum/core.cljs","^:",25,"^8P",["^ ","^8?",false,"^8Q",2,"^8B",2,"^8<",[["^9>"],["^9>","^94"]],"^I",["^J",[["^9>"],["^9>","^94"]]],"^8>",["^J",[null,null]]],"^8<",[["^9>"],["^9>","^94"]],"^8=",null,"^8Q",2,"^8>",["^J",[null,null]],"^8",1,"^8?",false,"^8R",[["^ ","^8Q",1,"^8?",false,"^8S","^8A"],["^ ","^8Q",2,"^8?",false,"^8S","^8A"]],"^7",582,"^9",582,"^8B",2,"^8C",true,"^I",["^J",[["^9>"],["^9>","^94"]]],"^M","(rum/use-layout-effect!\n    (fn []\n      (.addEventListener js/window \"load\" handler)\n      #(.removeEventListener js/window \"load\" handler))\n    []) ;; empty deps collection instructs React to run setup-fn only once on initial render\n        ;; and cleanup-fn only once before unmounting\n\n  Read more at https://reactjs.org/docs/hooks-effect.html"],"~$react",["^ ","^8:",null,"^5",["^ ","^6","rum/core.cljs","^7",444,"^8",7,"^9",444,"^:",12,"^I",["^J",["^8;",["^J",[["^E"]]]]],"^M","Works in conjunction with [[reactive]] mixin. Use this function instead of `deref` inside render, and your component will subscribe to changes happening to the derefed atom."],"^N","^4N","^6","rum/core.cljs","^:",12,"^8<",["^J",[["^E"]]],"^8=",null,"^8>",["^J",[null,null]],"^8",1,"^8?",false,"^7",444,"^8@","^8K","^9",444,"^8B",1,"^8C",true,"^I",["^J",["^8;",["^J",[["^E"]]]]],"^M","Works in conjunction with [[reactive]] mixin. Use this function instead of `deref` inside render, and your component will subscribe to changes happening to the derefed atom."],"~$render-static-markup",["^ ","^8:",null,"^5",["^ ","^6","rum/core.cljs","^7",665,"^8",7,"^9",665,"^:",27,"^I",["^J",["^8;",["^J",[["~$src"]]]]],"^M","Same as [[render-html]] but returned string has nothing React-specific.\n  This allows Rum to be used as traditional server-side templating engine."],"^N","^3T","^6","rum/core.cljs","^:",27,"^8<",["^J",[["^9A"]]],"^8=",null,"^8>",["^J",[null,null]],"^8",1,"^8?",false,"^7",665,"^8@","^8A","^9",665,"^8B",1,"^8C",true,"^I",["^J",["^8;",["^J",[["^9A"]]]]],"^M","Same as [[render-html]] but returned string has nothing React-specific.\n  This allows Rum to be used as traditional server-side templating engine."],"~$schedule",["^ ","^5",["^ ","^6","rum/core.cljs","^7",222,"^8",16,"^9",222,"^:",24,"^8[",true],"^8[",true,"^N","^3S","^6","rum/core.cljs","^:",24,"^8",1,"^7",222,"^9",222,"^8S",["^D",["^92","^8A","^99"]]],"~$lazy-build",["^ ","^8:",null,"^5",["^ ","^6","rum/core.cljs","^7",154,"^8",7,"^9",154,"^:",17,"^I",["^J",["^8;",["^J",[["~$ctor","~$render","~$mixins","~$display-name"]]]]],"^M","Wraps component construction in a way so that Google Closure Compiler\n   can properly recognize and elide unused components. The extra `set-meta`\n   fn is needed so that the compiler can properly detect that all functions\n   are side effect free."],"^N","^48","^6","rum/core.cljs","^:",17,"^8<",["^J",[["^9D","^9E","^9F","^9G"]]],"^8=",null,"^8>",["^J",[null,null]],"^8",1,"^8?",false,"^7",154,"^8@","^99","^9",154,"^8B",4,"^8C",true,"^I",["^J",["^8;",["^J",[["^9D","^9E","^9F","^9G"]]]]],"^M","Wraps component construction in a way so that Google Closure Compiler\n   can properly recognize and elide unused components. The extra `set-meta`\n   fn is needed so that the compiler can properly detect that all functions\n   are side effect free."],"~$request-render",["^ ","^8:",null,"^5",["^ ","^6","rum/core.cljs","^7",252,"^8",7,"^9",252,"^:",21,"^I",["^J",["^8;",["^J",[["~$component"]]]]],"^M","Schedules react component to be rendered on next animation frame,\n  unless the requested update happens to be in a sync-update phase."],"^N","^42","^6","rum/core.cljs","^:",21,"^8<",["^J",[["^9I"]]],"^8=",null,"^8>",["^J",[null,null]],"^8",1,"^8?",false,"^7",252,"^8@",["^D",["^8K","^8I"]],"^9",252,"^8B",1,"^8C",true,"^I",["^J",["^8;",["^J",[["^9I"]]]]],"^M","Schedules react component to be rendered on next animation frame,\n  unless the requested update happens to be in a sync-update phase."],"~$render-queue",["^ ","^5",["^ ","^6","rum/core.cljs","^7",236,"^8",16,"^9",236,"^:",28,"^8[",true],"^8[",true,"^N","^46","^6","rum/core.cljs","^:",28,"^8",1,"^7",236,"^9",236,"^8S","~$cljs.core/Volatile"],"~$portal",["^ ","^8:",null,"^5",["^ ","^6","rum/core.cljs","^7",289,"^8",7,"^9",289,"^:",13,"^I",["^J",["^8;",["^J",[["^8G","^8H"]]]]],"^M","Render `element` in a DOM `node` that is ouside of current DOM hierarchy."],"^N","^2P","^6","rum/core.cljs","^:",13,"^8<",["^J",[["^8G","^8H"]]],"^8=",null,"^8>",["^J",[null,null]],"^8",1,"^8?",false,"^7",289,"^8@","^8A","^9",289,"^8B",2,"^8C",true,"^I",["^J",["^8;",["^J",[["^8G","^8H"]]]]],"^M","Render `element` in a DOM `node` that is ouside of current DOM hierarchy."],"~$with-key",["^ ","^8:",null,"^5",["^ ","^6","rum/core.cljs","^7",301,"^8",7,"^9",301,"^:",15,"^I",["^J",["^8;",["^J",[["^8G","^8O"]]]]],"^M","Adds React key to element.\n   \n   ```\n   (rum/defc label [text] [:div text])\n\n   (-> (label)\n       (rum/with-key \"abc\")\n       (rum/mount js/document.body))\n   ```"],"^N","^3P","^6","rum/core.cljs","^:",15,"^8<",["^J",[["^8G","^8O"]]],"^8=",null,"^8>",["^J",[null,null]],"^8",1,"^8?",false,"^7",301,"^8@","^8A","^9",301,"^8B",2,"^8C",true,"^I",["^J",["^8;",["^J",[["^8G","^8O"]]]]],"^M","Adds React key to element.\n   \n   ```\n   (rum/defc label [text] [:div text])\n\n   (-> (label)\n       (rum/with-key \"abc\")\n       (rum/mount js/document.body))\n   ```"],"~$extend!",["^ ","^8:",null,"^5",["^ ","^6","rum/core.cljs","^7",21,"^8",8,"^9",21,"^:",15,"^8[",true,"^I",["^J",["^8;",["^J",[["~$obj","~$props"]]]]]],"^8[",true,"^N","^2L","^6","rum/core.cljs","^:",15,"^8<",["^J",[["^9O","^9P"]]],"^8=",null,"^8>",["^J",[null,null]],"^8",1,"^8?",false,"^7",21,"^8@","^8I","^9",21,"^8B",2,"^8C",true,"^I",["^J",["^8;",["^J",[["^9O","^9P"]]]]]],"~$build-defcs",["^ ","~:no-doc",true,"^8:",null,"^5",["^ ","^6","rum/core.cljs","^7",211,"^8",16,"^9",211,"^:",27,"^9R",true,"^I",["^J",["^8;",["^J",[["~$render-body","^9F","^9G"]]]]]],"^N","^3V","^6","rum/core.cljs","^:",27,"^8<",["^J",[["^9S","^9F","^9G"]]],"^8=",null,"^8>",["^J",[null,null]],"^8",1,"^8?",false,"^7",211,"^8@",["^D",["~$clj","~$cljs.core/MetaFn","^8I"]],"^9",211,"^8B",3,"^8C",true,"^I",["^J",["^8;",["^J",[["^9S","^9F","^9G"]]]]]],"~$*reactions*",["^ ","^5",["^ ","^6","rum/core.cljs","^7",401,"^8",26,"^9",401,"^:",37,"~:dynamic",true,"^8[",true],"^8[",true,"^N","^3W","^6","rum/core.cljs","^:",37,"^8",1,"^9W",true,"^7",401,"^9",401,"^8S","^8K"],"^E",["^ ","^8:",null,"^5",["^ ","^6","rum/core.cljs","^7",333,"^8",7,"^9",333,"^:",10,"^I",["^J",["^8;",["^J",[["^9;","^8O"]]]]],"^M","DEPRECATED: Use :ref (fn [dom-or-nil]) callback instead. See rum issue #124\n  Given state and ref handle, returns React component."],"^N","^3H","^6","rum/core.cljs","^:",10,"^8<",["^J",[["^9;","^8O"]]],"^8=",null,"^8>",["^J",[null,null]],"^8",1,"^8?",false,"^7",333,"^8@","^8K","^9",333,"^8B",2,"^8C",true,"^I",["^J",["^8;",["^J",[["^9;","^8O"]]]]],"^M","DEPRECATED: Use :ref (fn [dom-or-nil]) callback instead. See rum issue #124\n  Given state and ref handle, returns React component."],"~$set-ref!",["^ ","^8:",null,"^5",["^ ","^6","rum/core.cljs","^7",645,"^8",7,"^9",645,"^:",15,"^I",["^J",["^8;",["^J",[["^E","^L"]]]]]],"^N","^3A","^6","rum/core.cljs","^:",15,"^8<",["^J",[["^E","^L"]]],"^8=",null,"^8>",["^J",[null,null]],"^8",1,"^8?",false,"^7",645,"^9",645,"^8B",2,"^8C",true,"^I",["^J",["^8;",["^J",[["^E","^L"]]]]]],"~$static",["^ ","^5",["^ ","^6","rum/core.cljs","^7",349,"^8",6,"^9",349,"^:",12],"^N","^4>","^6","rum/core.cljs","^:",12,"^8",1,"^7",349,"^9",349,"^8S","^8T","^M","Mixin. Will avoid re-render if none of component’s arguments have changed. Does equality check (`=`) on all arguments.\n  \n   ```\n   (rum/defc label < rum/static\n     [text]\n     [:div text])\n     \n   (rum/mount (label \"abc\") js/document.body)\n\n   ;; def != abc, will re-render\n   (rum/mount (label \"def\") js/document.body)\n\n   ;; def == def, won’t re-render\n   (rum/mount (label \"def\") js/document.body)\n   ```"],"^1T",["^ ","^8:",null,"^5",["^ ","^6","rum/core.cljs","^7",529,"^8",7,"^9",529,"^:",13,"^I",["^J",["^8;",["^J",[["^E","^8O","~$&","~$options"]]]]],"^M","Same as [[cursor-in]] but accepts single key instead of path vector.","^8P",["^ ","^8?",true,"^8Q",2,"^8B",2,"^8<",[["^J",["^E","^8O","^9Z"]]],"^I",["^J",[["^E","^8O","~$&","^9Z"]]],"^8>",["^J",[null]]]],"^N","^59","^6","rum/core.cljs","^:",13,"^8P",["^ ","^8?",true,"^8Q",2,"^8B",2,"^8<",[["^J",["^E","^8O","^9Z"]]],"^I",["^J",[["^E","^8O","~$&","^9Z"]]],"^8>",["^J",[null]]],"^8<",[["^J",["^E","^8O","^9Z"]]],"^8=",null,"^8Q",2,"^8>",["^J",[null]],"^8",1,"^8?",true,"^8R",[["^ ","^8Q",2,"^8?",true,"^8S","^8K"]],"^7",529,"^8@","^8K","^9",529,"^8B",2,"^8C",true,"^I",["^J",[["^E","^8O","~$&","^9Z"]]],"^M","Same as [[cursor-in]] but accepts single key instead of path vector."],"^9;",["^ ","^8:",null,"^5",["^ ","^6","rum/core.cljs","^7",16,"^8",7,"^9",16,"^:",12,"^I",["^J",["^8;",["^J",[["~$comp"]]]]],"^M","Given React component, returns Rum state associated with it."],"^N","^51","^6","rum/core.cljs","^:",12,"^8<",["^J",[["^9["]]],"^8=",null,"^8>",["^J",[null,null]],"^8",1,"^8?",false,"^7",16,"^8@","^8K","^9",16,"^8B",1,"^8C",true,"^I",["^J",["^8;",["^J",[["^9["]]]]],"^M","Given React component, returns Rum state associated with it."],"~$cursor-in",["^ ","^8:",null,"^5",["^ ","^6","rum/core.cljs","^7",502,"^8",7,"^9",502,"^:",16,"^I",["^J",["^8;",["^J",[["^E","~$path","~$&",["^ ","^27","^9Z"]]]]]],"^M","Given atom with deep nested value and path inside it, creates an atom-like structure\n   that can be used separately from main atom, but will sync changes both ways:\n  \n   ```\n   (def db (atom { :users { \"Ivan\" { :age 30 }}}))\n   \n   (def ivan (rum/cursor db [:users \"Ivan\"]))\n   (deref ivan) ;; => { :age 30 }\n   \n   (swap! ivan update :age inc) ;; => { :age 31 }\n   (deref db) ;; => { :users { \"Ivan\" { :age 31 }}}\n   \n   (swap! db update-in [:users \"Ivan\" :age] inc)\n   ;; => { :users { \"Ivan\" { :age 32 }}}\n   \n   (deref ivan) ;; => { :age 32 }\n   ```\n  \n   Returned value supports `deref`, `swap!`, `reset!`, watches and metadata.\n  \n   The only supported option is `:meta`","^8P",["^ ","^8?",true,"^8Q",2,"^8B",2,"^8<",[["^J",["^E","^:1",["^ ","^27","^9Z"]]]],"^I",["^J",[["^E","^:1","~$&",["^ ","^27","^9Z"]]]],"^8>",["^J",[null]]]],"^N","^4M","^6","rum/core.cljs","^:",16,"^8P",["^ ","^8?",true,"^8Q",2,"^8B",2,"^8<",[["^J",["^E","^:1",["^ ","^27","^9Z"]]]],"^I",["^J",[["^E","^:1","~$&",["^ ","^27","^9Z"]]]],"^8>",["^J",[null]]],"^8<",[["^J",["^E","^:1",["^ ","^27","^9Z"]]]],"^8=",null,"^8Q",2,"^8>",["^J",[null]],"^8",1,"^8?",true,"^8R",[["^ ","^8Q",2,"^8?",true,"^8S","^4["]],"^7",502,"^8@","^8K","^9",502,"^8B",2,"^8C",true,"^I",["^J",[["^E","^:1","~$&",["^ ","^27","^9Z"]]]],"^M","Given atom with deep nested value and path inside it, creates an atom-like structure\n   that can be used separately from main atom, but will sync changes both ways:\n  \n   ```\n   (def db (atom { :users { \"Ivan\" { :age 30 }}}))\n   \n   (def ivan (rum/cursor db [:users \"Ivan\"]))\n   (deref ivan) ;; => { :age 30 }\n   \n   (swap! ivan update :age inc) ;; => { :age 31 }\n   (deref db) ;; => { :users { \"Ivan\" { :age 31 }}}\n   \n   (swap! db update-in [:users \"Ivan\" :age] inc)\n   ;; => { :users { \"Ivan\" { :age 32 }}}\n   \n   (deref ivan) ;; => { :age 32 }\n   ```\n  \n   Returned value supports `deref`, `swap!`, `reset!`, watches and metadata.\n  \n   The only supported option is `:meta`"],"~$use-effect!",["^ ","^8:",null,"^5",["^ ","^6","rum/core.cljs","^7",563,"^8",7,"^9",563,"^:",18,"^I",["^J",["^8;",["^J",[["^9>"],["^9>","^94"]]]]],"^M","Takes setup-fn that executes either on the first render or after every update.\n  The function may return cleanup-fn to cleanup the effect, either before unmount or before every next update.\n  Calling behavior is controlled by deps argument.\n\n  (rum/use-effect!\n    (fn []\n      (.addEventListener js/window \"load\" handler)\n      #(.removeEventListener js/window \"load\" handler))\n    []) ;; empty deps collection instructs React to run setup-fn only once on initial render\n        ;; and cleanup-fn only once before unmounting\n\n  Read more at https://reactjs.org/docs/hooks-effect.html","^8P",["^ ","^8?",false,"^8Q",2,"^8B",2,"^8<",[["^9>"],["^9>","^94"]],"^I",["^J",[["^9>"],["^9>","^94"]]],"^8>",["^J",[null,null]]]],"^N","^3C","^6","rum/core.cljs","^:",18,"^8P",["^ ","^8?",false,"^8Q",2,"^8B",2,"^8<",[["^9>"],["^9>","^94"]],"^I",["^J",[["^9>"],["^9>","^94"]]],"^8>",["^J",[null,null]]],"^8<",[["^9>"],["^9>","^94"]],"^8=",null,"^8Q",2,"^8>",["^J",[null,null]],"^8",1,"^8?",false,"^8R",[["^ ","^8Q",1,"^8?",false,"^8S","^8A"],["^ ","^8Q",2,"^8?",false,"^8S","^8A"]],"^7",563,"^9",563,"^8B",2,"^8C",true,"^I",["^J",[["^9>"],["^9>","^94"]]],"^M","Takes setup-fn that executes either on the first render or after every update.\n  The function may return cleanup-fn to cleanup the effect, either before unmount or before every next update.\n  Calling behavior is controlled by deps argument.\n\n  (rum/use-effect!\n    (fn []\n      (.addEventListener js/window \"load\" handler)\n      #(.removeEventListener js/window \"load\" handler))\n    []) ;; empty deps collection instructs React to run setup-fn only once on initial render\n        ;; and cleanup-fn only once before unmounting\n\n  Read more at https://reactjs.org/docs/hooks-effect.html"],"~$dom-node",["^ ","^8:",null,"^5",["^ ","^6","rum/core.cljs","^7",327,"^8",7,"^9",327,"^:",15,"^I",["^J",["^8;",["^J",[["^9;"]]]]],"^M","Usage of this function is discouraged. Use :ref callback instead.\n  Given state, returns top-level DOM node of component. Call it during lifecycle callbacks. Can’t be called during render."],"^N","^57","^6","rum/core.cljs","^:",15,"^8<",["^J",[["^9;"]]],"^8=",null,"^8>",["^J",[null,null]],"^8",1,"^8?",false,"^7",327,"^8@","^8A","^9",327,"^8B",1,"^8C",true,"^I",["^J",["^8;",["^J",[["^9;"]]]]],"^M","Usage of this function is discouraged. Use :ref callback instead.\n  Given state, returns top-level DOM node of component. Call it during lifecycle callbacks. Can’t be called during render."],"~$batch",["^ ","^5",["^ ","^6","rum/core.cljs","^7",230,"^8",16,"^9",230,"^:",21,"^8[",true],"^8[",true,"^N","^4H","^6","rum/core.cljs","^:",21,"^8",1,"^7",230,"^9",230,"^8S",["^D",["^8A","^99"]]],"~$with-ref",["^ ","^8:",null,"^5",["^ ","^6","rum/core.cljs","^7",314,"^8",7,"^9",314,"^:",15,"^I",["^J",["^8;",["^J",[["^8G","^E"]]]]],"^M","Adds React ref (string or callback) to element.\n   \n   ```\n   (rum/defc label [text] [:div text])\n\n   (-> (label)\n       (rum/with-ref \"abc\")\n       (rum/mount js/document.body))\n   ```"],"^N","^4G","^6","rum/core.cljs","^:",15,"^8<",["^J",[["^8G","^E"]]],"^8=",null,"^8>",["^J",[null,null]],"^8",1,"^8?",false,"^7",314,"^8@","^8A","^9",314,"^8B",2,"^8C",true,"^I",["^J",["^8;",["^J",[["^8G","^E"]]]]],"^M","Adds React ref (string or callback) to element.\n   \n   ```\n   (rum/defc label [text] [:div text])\n\n   (-> (label)\n       (rum/with-ref \"abc\")\n       (rum/mount js/document.body))\n   ```"],"~$build-defc",["^ ","^9R",true,"^8:",null,"^5",["^ ","^6","rum/core.cljs","^7",188,"^8",16,"^9",188,"^:",26,"^9R",true,"^I",["^J",["^8;",["^J",[["^9S","^9F","^9G"]]]]]],"^N","^5B","^6","rum/core.cljs","^:",26,"^8<",["^J",[["^9S","^9F","^9G"]]],"^8=",null,"^8>",["^J",[null,null]],"^8",1,"^8?",false,"^7",188,"^8@",["^D",["^9T","^9U","^8I"]],"^9",188,"^8B",3,"^8C",true,"^I",["^J",["^8;",["^J",[["^9S","^9F","^9G"]]]]]],"~$render-html",["^ ","^8:",null,"^5",["^ ","^6","rum/core.cljs","^7",653,"^8",7,"^9",653,"^:",18,"^I",["^J",["^8;",["^J",[["^8G"],["^8G","~$opts"]]]]],"^M","Main server-side rendering method. Given component, returns HTML string with static markup of that component.\n  Serve that string to the browser and [[hydrate]] same Rum component over it. React will be able to reuse already existing DOM and will initialize much faster.\n  No opts are supported at the moment.","^8P",["^ ","^8?",false,"^8Q",2,"^8B",2,"^8<",[["^8G"],["^8G","^:8"]],"^I",["^J",[["^8G"],["^8G","^:8"]]],"^8>",["^J",[null,null]]]],"^N","^5@","^6","rum/core.cljs","^:",18,"^8P",["^ ","^8?",false,"^8Q",2,"^8B",2,"^8<",[["^8G"],["^8G","^:8"]],"^I",["^J",[["^8G"],["^8G","^:8"]]],"^8>",["^J",[null,null]]],"^8<",[["^8G"],["^8G","^:8"]],"^8=",null,"^8Q",2,"^8>",["^J",[null,null]],"^8",1,"^8?",false,"^8R",[["^ ","^8Q",1,"^8?",false,"^8S","^8K"],["^ ","^8Q",2,"^8?",false,"^8S","^8A"]],"^7",653,"^9",653,"^8B",2,"^8C",true,"^I",["^J",[["^8G"],["^8G","^:8"]]],"^M","Main server-side rendering method. Given component, returns HTML string with static markup of that component.\n  Serve that string to the browser and [[hydrate]] same Rum component over it. React will be able to reuse already existing DOM and will initialize much faster.\n  No opts are supported at the moment."],"~$hydrate",["^ ","^8:",null,"^5",["^ ","^6","rum/core.cljs","^7",284,"^8",7,"^9",284,"^:",14,"^I",["^J",["^8;",["^J",[["^8G","^8H"]]]]],"^M","Same as [[mount]] but must be called on DOM tree already rendered by a server via [[render-html]]."],"^N","^5?","^6","rum/core.cljs","^:",14,"^8<",["^J",[["^8G","^8H"]]],"^8=",null,"^8>",["^J",[null,null]],"^8",1,"^8?",false,"^7",284,"^8@","^8A","^9",284,"^8B",2,"^8C",true,"^I",["^J",["^8;",["^J",[["^8G","^8H"]]]]],"^M","Same as [[mount]] but must be called on DOM tree already rendered by a server via [[render-html]]."],"~$build-defcc",["^ ","^9R",true,"^8:",null,"^5",["^ ","^6","rum/core.cljs","^7",215,"^8",16,"^9",215,"^:",27,"^9R",true,"^I",["^J",["^8;",["^J",[["^9S","^9F","^9G"]]]]]],"^N","^53","^6","rum/core.cljs","^:",27,"^8<",["^J",[["^9S","^9F","^9G"]]],"^8=",null,"^8>",["^J",[null,null]],"^8",1,"^8?",false,"^7",215,"^8@",["^D",["^9T","^9U","^8I"]],"^9",215,"^8B",3,"^8C",true,"^I",["^J",["^8;",["^J",[["^9S","^9F","^9G"]]]]]],"^1W",["^ ","^5",["^ ","^6","rum/core.cljs","^7",496,"^8",3,"^9",496,"^:",15,"~:style/indent",2,"^I",["^J",["^8;",["^J",[["~$refs","^8O","~$f"],["^:<","^8O","~$f","^:8"]]]]],"^M","Use this to create “chains” and acyclic graphs of dependent atoms.\n   \n             [[derived-atom]] will:\n          \n             - Take N “source” refs.\n             - Set up a watch on each of them.\n             - Create “sink” atom.\n             - When any of source refs changes:\n                - re-run function `f`, passing N dereferenced values of source refs.\n                - `reset!` result of `f` to the sink atom.\n             - Return sink atom.\n\n             Example:\n\n             ```\n             (def *a (atom 0))\n             (def *b (atom 1))\n             (def *x (derived-atom [*a *b] ::key\n                       (fn [a b]\n                         (str a \":\" b))))\n             \n             (type *x)  ;; => clojure.lang.Atom\n             (deref *x) ;; => \"0:1\"\n             \n             (swap! *a inc)\n             (deref *x) ;; => \"1:1\"\n             \n             (reset! *b 7)\n             (deref *x) ;; => \"1:7\"\n             ```\n\n             Arguments:\n          \n             - `refs` - sequence of source refs,\n             - `key`  - unique key to register watcher, same as in `clojure.core/add-watch`,\n             - `f`    - function that must accept N arguments (same as number of source refs) and return a value to be written to the sink ref. Note: `f` will be called with already dereferenced values,\n             - `opts` - optional. Map of:\n               - `:ref` - use this as sink ref. By default creates new atom,\n               - `:check-equals?` - Defaults to `true`. If equality check should be run on each source update: `(= @sink (f new-vals))`. When result of recalculating `f` equals to the old value, `reset!` won’t be called. Set to `false` if checking for equality can be expensive."],"^N","^55","^6","rum/core.cljs","^:",15,"^8",1,"^7",455,"^:;",2,"^9",496,"^I",["^J",["^8;",["^J",[["^:<","^8O","~$f"],["^:<","^8O","~$f","^:8"]]]]],"^M","Use this to create “chains” and acyclic graphs of dependent atoms.\n   \n             [[derived-atom]] will:\n          \n             - Take N “source” refs.\n             - Set up a watch on each of them.\n             - Create “sink” atom.\n             - When any of source refs changes:\n                - re-run function `f`, passing N dereferenced values of source refs.\n                - `reset!` result of `f` to the sink atom.\n             - Return sink atom.\n\n             Example:\n\n             ```\n             (def *a (atom 0))\n             (def *b (atom 1))\n             (def *x (derived-atom [*a *b] ::key\n                       (fn [a b]\n                         (str a \":\" b))))\n             \n             (type *x)  ;; => clojure.lang.Atom\n             (deref *x) ;; => \"0:1\"\n             \n             (swap! *a inc)\n             (deref *x) ;; => \"1:1\"\n             \n             (reset! *b 7)\n             (deref *x) ;; => \"1:7\"\n             ```\n\n             Arguments:\n          \n             - `refs` - sequence of source refs,\n             - `key`  - unique key to register watcher, same as in `clojure.core/add-watch`,\n             - `f`    - function that must accept N arguments (same as number of source refs) and return a value to be written to the sink ref. Note: `f` will be called with already dereferenced values,\n             - `opts` - optional. Map of:\n               - `:ref` - use this as sink ref. By default creates new atom,\n               - `:check-equals?` - Defaults to `true`. If equality check should be run on each source update: `(= @sink (f new-vals))`. When result of recalculating `f` equals to the old value, `reset!` won’t be called. Set to `false` if checking for equality can be expensive."],"^9E",["^ ","^8:",null,"^5",["^ ","^6","rum/core.cljs","^7",245,"^8",8,"^9",245,"^:",14,"^8[",true,"^I",["^J",["^8;",["^J",[[]]]]]],"^8[",true,"^N","^5=","^6","rum/core.cljs","^:",14,"^8<",["^J",[[]]],"^8=",null,"^8>",["^J",[null,null]],"^8",1,"^8?",false,"^7",245,"^8@","^8K","^9",245,"^8B",0,"^8C",true,"^I",["^J",["^8;",["^J",[[]]]]]],"~$empty-queue",["^ ","^5",["^ ","^6","rum/core.cljs","^7",235,"^8",16,"^9",235,"^:",27,"^8[",true],"^8[",true,"^N","^5M","^6","rum/core.cljs","^:",27,"^8",1,"^7",235,"^9",235,"^8S","~$cljs.core/IVector"],"~$use-state",["^ ","^8:",null,"^5",["^ ","^6","rum/core.cljs","^7",536,"^8",14,"^9",536,"^:",23,"^8S","^8X","^I",["^J",["^8;",["^J",[["~$value-or-fn"]]]]],"^M","Takes initial value or value returning fn and returns a tuple of [value set-value!],\n  where `value` is current state value and `set-value!` is a function that schedules re-render.\n\n  (let [[value set-state!] (rum/use-state 0)]\n    [:button {:on-click #(set-state! (inc value))}\n      value])"],"^N","^2X","^6","rum/core.cljs","^:",23,"^8<",["^J",[["^:@"]]],"^8=",null,"^8>",["^J",[null,null]],"^8",1,"^8?",false,"^7",536,"^8@","^8X","^9",536,"^8B",1,"^8S","^8X","^8C",true,"^I",["^J",["^8;",["^J",[["^:@"]]]]],"^M","Takes initial value or value returning fn and returns a tuple of [value set-value!],\n  where `value` is current state value and `set-value!` is a function that schedules re-render.\n\n  (let [[value set-state!] (rum/use-state 0)]\n    [:button {:on-click #(set-state! (inc value))}\n      value])"],"~$build-class",["^ ","^8:",null,"^5",["^ ","^6","rum/core.cljs","^7",26,"^8",8,"^9",26,"^:",19,"^8[",true,"^I",["^J",["^8;",["^J",[["^9E","^9F","^9G"]]]]]],"^8[",true,"^N","^5G","^6","rum/core.cljs","^:",19,"^8<",["^J",[["^9E","^9F","^9G"]]],"^8=",null,"^8>",["^J",[null,null]],"^8",1,"^8?",false,"^7",26,"^8@","^99","^9",26,"^8B",3,"^8C",true,"^I",["^J",["^8;",["^J",[["^9E","^9F","^9G"]]]]]],"~$use-callback",["^ ","^8:",null,"^5",["^ ","^6","rum/core.cljs","^7",597,"^8",7,"^9",597,"^:",19,"^I",["^J",["^8;",["^J",[["~$callback"],["^:C","^94"]]]]],"^M","Takes callback function and returns memoized variant, memoization is done based on provided deps collection.\n\n  (rum/defc button < rum/static\n    [{:keys [on-click]} text]\n    [:button {:on-click on-click}\n      text])\n\n  (rum/defc app [v]\n    (let [on-click (rum/use-callback #(do-stuff v) [v])]\n      ;; because on-click callback is memoized here based on v argument\n      ;; the callback won't be re-created on every render, unless v changes\n      ;; which means that underlying `button` component won't re-render wastefully\n      [button {:on-click on-click}\n        \"press me\"]))\n\n  Read more at https://reactjs.org/docs/hooks-reference.html#usecallback","^8P",["^ ","^8?",false,"^8Q",2,"^8B",2,"^8<",[["^:C"],["^:C","^94"]],"^I",["^J",[["^:C"],["^:C","^94"]]],"^8>",["^J",[null,null]]]],"^N","^5N","^6","rum/core.cljs","^:",19,"^8P",["^ ","^8?",false,"^8Q",2,"^8B",2,"^8<",[["^:C"],["^:C","^94"]],"^I",["^J",[["^:C"],["^:C","^94"]]],"^8>",["^J",[null,null]]],"^8<",[["^:C"],["^:C","^94"]],"^8=",null,"^8Q",2,"^8>",["^J",[null,null]],"^8",1,"^8?",false,"^8R",[["^ ","^8Q",1,"^8?",false,"^8S","^8A"],["^ ","^8Q",2,"^8?",false,"^8S","^8A"]],"^7",597,"^9",597,"^8B",2,"^8C",true,"^I",["^J",[["^:C"],["^:C","^94"]]],"^M","Takes callback function and returns memoized variant, memoization is done based on provided deps collection.\n\n  (rum/defc button < rum/static\n    [{:keys [on-click]} text]\n    [:button {:on-click on-click}\n      text])\n\n  (rum/defc app [v]\n    (let [on-click (rum/use-callback #(do-stuff v) [v])]\n      ;; because on-click callback is memoized here based on v argument\n      ;; the callback won't be re-created on every render, unless v changes\n      ;; which means that underlying `button` component won't re-render wastefully\n      [button {:on-click on-click}\n        \"press me\"]))\n\n  Read more at https://reactjs.org/docs/hooks-reference.html#usecallback"],"~$mark-sync-update",["^ ","^8:",null,"^5",["^ ","^6","rum/core.cljs","^7",264,"^8",16,"^9",264,"^:",32,"~:export",true,"^I",["^J",["^8;",["^J",[["~$f"]]]]]],"^N","^5O","^6","rum/core.cljs","^:",32,"^8<",["^J",[["~$f"]]],"^8=",null,"^:E",true,"^8>",["^J",[null,null]],"^8",1,"^8?",false,"^7",264,"^8@",["^D",[null,"^99"]],"^9",264,"^8B",1,"^8C",true,"^I",["^J",["^8;",["^J",[["~$f"]]]]]],"^F",["^ ","^8:",null,"^5",["^ ","^6","rum/core.cljs","^7",640,"^8",7,"^9",640,"^:",12,"^I",["^J",["^8;",["^J",[["^E"]]]]],"^M","Takes a ref returned from use-ref and returns its current value."],"^N","^5K","^6","rum/core.cljs","^:",12,"^8<",["^J",[["^E"]]],"^8=",null,"^8>",["^J",[null,null]],"^8",1,"^8?",false,"^7",640,"^8@","^8A","^9",640,"^8B",1,"^8C",true,"^I",["^J",["^8;",["^J",[["^E"]]]]],"^M","Takes a ref returned from use-ref and returns its current value."],"~$build-ctor",["^ ","^8:",null,"^5",["^ ","^6","rum/core.cljs","^7",164,"^8",8,"^9",164,"^:",18,"^8[",true,"^I",["^J",["^8;",["^J",[["^9E","^9F","^9G"]]]]]],"^8[",true,"^N","^5I","^6","rum/core.cljs","^:",18,"^8<",["^J",[["^9E","^9F","^9G"]]],"^8=",null,"^8>",["^J",[null,null]],"^8",1,"^8?",false,"^7",164,"^8@",["^D",["^9T","^9U","^8I"]],"^9",164,"^8B",3,"^8C",true,"^I",["^J",["^8;",["^J",[["^9E","^9F","^9G"]]]]]],"~$sync-update?",["^ ","^5",["^ ","^6","rum/core.cljs","^7",250,"^8",16,"^9",250,"^:",28,"^8[",true],"^8[",true,"^N","^4Z","^6","rum/core.cljs","^:",28,"^8",1,"^7",250,"^9",250,"^8S","^9K"],"~$render-one",["^ ","^8:",null,"^5",["^ ","^6","rum/core.cljs","^7",238,"^8",8,"^9",238,"^:",18,"^8[",true,"^I",["^J",["^8;",["^J",[["^9["]]]]]],"^8[",true,"^N","^4B","^6","rum/core.cljs","^:",18,"^8<",["^J",[["^9["]]],"^8=",null,"^8>",["^J",[null,null]],"^8",1,"^8?",false,"^7",238,"^8@",["^D",["^8K","^8I"]],"^9",238,"^8B",1,"^8C",true,"^I",["^J",["^8;",["^J",[["^9["]]]]]]],"^1Z",["^ ","^Q","^Q","^1K","^1K"],"~:cljs.analyzer/constants",["^ ","^1X",["^D",["~:rum/react-component","~:did-mount","~:will-unmount","^5","~:did-remount","~:rum/class","~:init","~:else","~:did-catch","~:child-context","~:rum.reactive/key","~:rum/args","~:before-render","~:unsafe/will-update","~:did-update","~:key-fn","~:will-mount","~:rum/component-stack","~:class-properties","~:rum/local","~:after-render","~:static-properties","~:wrap-render","~:unsafe/will-mount","~:will-remount","~:rum.reactive/refs","~:should-update"]],"~:order",["^:O","^:Y","^;4","^:U","^;3","^:K","^;1","^:M","^;5","^;7","^:V","^:W","^:Q","^:L","^:R","^:[","^;2","^:J","^:Z","^:X","^:T","^:N","^:P","^;0","^:S","^;6","^5"]],"^29",["^ ","^1Z",["^D",[]],"^1Y",["^D",[]]],"^2:",["^ "],"^2;",["^1N","^1K","^1O","^1Q","^1M","^1H","^1G","^1V","^1U","^1I","^1S","^1P"]],"^P","^Q","~:ns-specs",["^ "],"~:ns-spec-vars",["^D",[]],"~:compiler-options",["^5S",[["^;;","~:static-fns"],true,["^;;","~:shadow-tweaks"],null,["^;;","~:source-map-inline"],null,["^;;","~:elide-asserts"],false,["^;;","~:optimize-constants"],null,["^;;","^2@"],null,["^;;","~:external-config"],null,["^;;","~:tooling-config"],null,["^;;","~:emit-constants"],null,["^;;","~:load-tests"],null,["^;;","~:form-size-threshold"],null,["^;;","~:data-readers"],null,["^;;","~:infer-externs"],"~:auto",["^;;","^2B"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^;;","~:fn-invoke-direct"],null,["^;;","~:source-map"],"/dev/null"]]]