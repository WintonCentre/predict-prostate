["^ ","~:output",["^ ","~:js","goog.provide('wc_rum_lib.numeric_input');\nwc_rum_lib.numeric_input.style = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"numeric-input\",\"numeric-input\",1592356787),\"numeric-input--G__33642\"], null);\n\ncljs_css_modules.runtime.inject_style_BANG_(cljs.core.apply.cljs$core$IFn$_invoke$arity$3(garden.core.css,cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\".numeric-input--G__33642\",new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"width\",\"width\",-384071477),\"130px\",new cljs.core.Keyword(null,\"tab-index\",\"tab-index\",895755393),(1),new cljs.core.Keyword(null,\"selectable\",\"selectable\",370587038),true], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\".incdec\",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\".right\",new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"border-top-right-radius\",\"border-top-right-radius\",1678770792),\"10px\",new cljs.core.Keyword(null,\"border-bottom-right-radius\",\"border-bottom-right-radius\",414899772),\"10px\",new cljs.core.Keyword(null,\"width\",\"width\",-384071477),\"36px\"], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\".left\",new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"border-top-left-radius\",\"border-top-left-radius\",1361811342),\"10px\",new cljs.core.Keyword(null,\"border-bottom-left-radius\",\"border-bottom-left-radius\",-76446610),\"10px\",new cljs.core.Keyword(null,\"width\",\"width\",-384071477),\"36px\"], null)], null)], null)], null)], null)),\"wc-rum-lib.numeric-input\",\"style\");\nwc_rum_lib.numeric_input.error_QMARK_ = (function wc_rum_lib$numeric_input$error_QMARK_(value){\nvar or__4212__auto__ = (value == null);\nif(or__4212__auto__){\nreturn or__4212__auto__;\n} else {\nvar or__4212__auto____$1 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"\",value);\nif(or__4212__auto____$1){\nreturn or__4212__auto____$1;\n} else {\nreturn isNaN(value);\n}\n}\n});\n/**\n * convert str to num or to ##NaN if not possible\n */\nwc_rum_lib.numeric_input.str_to_num = (function wc_rum_lib$numeric_input$str_to_num(s){\nreturn parseFloat(s);\n});\nwc_rum_lib.numeric_input.epsilon = 1.0E-8;\nwc_rum_lib.numeric_input.near_integer_QMARK_ = (function wc_rum_lib$numeric_input$near_integer_QMARK_(n){\nreturn (Math.abs((n - Math.round(n))) < wc_rum_lib.numeric_input.epsilon);\n});\nwc_rum_lib.numeric_input.trim_trailing_zero = (function wc_rum_lib$numeric_input$trim_trailing_zero(s){\nvar temp__5751__auto__ = cljs.core.re_matches(/(.*\\.\\d)\\d+/,s);\nif(cljs.core.truth_(temp__5751__auto__)){\nvar vec__33646 = temp__5751__auto__;\nvar m = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33646,(0),null);\nvar m1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33646,(1),null);\nreturn m1;\n} else {\nreturn s;\n}\n});\nwc_rum_lib.numeric_input.at_precision = (function wc_rum_lib$numeric_input$at_precision(n,precision){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((0),precision)){\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(Math.ceil(n));\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((3),precision)){\nif(wc_rum_lib.numeric_input.near_integer_QMARK_(n)){\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(floor(n));\n} else {\nreturn wc_rum_lib.numeric_input.trim_trailing_zero(n.toPrecision((new Number((3)))));\n}\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((2),precision)){\nreturn (new Number(n)).toFixed((2));\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((1),precision)){\nreturn (new Number(n)).toFixed((1));\n} else {\nreturn null;\n}\n}\n}\n}\n});\nwc_rum_lib.numeric_input.num_to_str = (function wc_rum_lib$numeric_input$num_to_str(var_args){\nvar G__33654 = arguments.length;\nswitch (G__33654) {\ncase 1:\nreturn wc_rum_lib.numeric_input.num_to_str.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn wc_rum_lib.numeric_input.num_to_str.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(wc_rum_lib.numeric_input.num_to_str.cljs$core$IFn$_invoke$arity$1 = (function (n){\nreturn wc_rum_lib.numeric_input.num_to_str.cljs$core$IFn$_invoke$arity$2(n,(0));\n}));\n\n(wc_rum_lib.numeric_input.num_to_str.cljs$core$IFn$_invoke$arity$2 = (function (n,precision){\nif(typeof n === 'string'){\nreturn n;\n} else {\nif(cljs.core.truth_(isNaN(n))){\nreturn \"\";\n} else {\nif(wc_rum_lib.numeric_input.near_integer_QMARK_(n)){\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(Math.floor(n));\n} else {\nif(cljs.core.truth_(precision)){\nreturn wc_rum_lib.numeric_input.at_precision(n,precision);\n} else {\nreturn wc_rum_lib.numeric_input.at_precision(n,(0));\n}\n}\n}\n}\n}));\n\n(wc_rum_lib.numeric_input.num_to_str.cljs$lang$maxFixedArity = 2);\n\nwc_rum_lib.numeric_input.validate_input = (function wc_rum_lib$numeric_input$validate_input(value,nmin,nmax,step){\nvar value__$1 = wc_rum_lib.numeric_input.str_to_num(value);\nvar nmin__$1 = ((cljs.core.fn_QMARK_(nmin))?cljs.core.deref((nmin.cljs$core$IFn$_invoke$arity$0 ? nmin.cljs$core$IFn$_invoke$arity$0() : nmin.call(null))):nmin);\nvar nmax__$1 = ((cljs.core.fn_QMARK_(nmax))?cljs.core.deref((nmax.cljs$core$IFn$_invoke$arity$0 ? nmax.cljs$core$IFn$_invoke$arity$0() : nmax.call(null))):nmax);\nvar val_1 = (cljs.core.truth_(isNaN(value__$1))?(((step > (0)))?(nmin__$1 - (1)):(((step < (0)))?(nmax__$1 + (1)):nmin__$1)):value__$1);\nvar val_2 = (step + val_1);\nvar val_3 = (((val_2 < nmin__$1))?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(wc_rum_lib.numeric_input.num_to_str.cljs$core$IFn$_invoke$arity$1(val_2)),\":\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(val_2)].join(''):(((val_2 > nmax__$1))?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(wc_rum_lib.numeric_input.num_to_str.cljs$core$IFn$_invoke$arity$1(val_2)),\":\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(val_2)].join(''):val_2));\nif(cljs.core.truth_(isNaN(value__$1))){\nreturn \" :0\";\n} else {\nreturn val_3;\n}\n});\nwc_rum_lib.numeric_input.handle_inc = (function wc_rum_lib$numeric_input$handle_inc(value,onChange,nmin,nmax,precision,step){\nvar v = wc_rum_lib.numeric_input.validate_input(value,nmin,nmax,step);\nvar G__33671 = wc_rum_lib.numeric_input.num_to_str.cljs$core$IFn$_invoke$arity$2(v,precision);\nreturn (onChange.cljs$core$IFn$_invoke$arity$1 ? onChange.cljs$core$IFn$_invoke$arity$1(G__33671) : onChange.call(null,G__33671));\n});\nwc_rum_lib.numeric_input.handle_typed_input = (function wc_rum_lib$numeric_input$handle_typed_input(nmin,nmax,precision,onChange,e){\nvar value = e.target.value;\nif(cljs.core.truth_(cljs.core.re_matches(/\\s*\\d*\\.?\\d*\\s*/,value))){\nvar G__33674 = wc_rum_lib.numeric_input.num_to_str.cljs$core$IFn$_invoke$arity$2(wc_rum_lib.numeric_input.validate_input(wc_rum_lib.numeric_input.str_to_num(value),nmin,nmax,(0)),precision);\nreturn (onChange.cljs$core$IFn$_invoke$arity$1 ? onChange.cljs$core$IFn$_invoke$arity$1(G__33674) : onChange.call(null,G__33674));\n} else {\nreturn (onChange.cljs$core$IFn$_invoke$arity$1 ? onChange.cljs$core$IFn$_invoke$arity$1(\"\") : onChange.call(null,\"\"));\n}\n});\nwc_rum_lib.numeric_input.update_value = (function wc_rum_lib$numeric_input$update_value(value,nmin,nmax,precision,step,onChange){\nreturn wc_rum_lib.numeric_input.handle_inc(value,onChange,nmin,nmax,precision,step);\n});\nwc_rum_lib.numeric_input.inc_dec_button = rum.core.lazy_build(rum.core.build_defcs,(function (state,p__33688){\nvar map__33689 = p__33688;\nvar map__33689__$1 = cljs.core.__destructure_map(map__33689);\nvar props = map__33689__$1;\nvar cursor = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33689__$1,new cljs.core.Keyword(null,\"cursor\",\"cursor\",1011937484));\nvar increment = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33689__$1,new cljs.core.Keyword(null,\"increment\",\"increment\",-1558831484));\nvar onChange = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33689__$1,new cljs.core.Keyword(null,\"onChange\",\"onChange\",-312891301));\nvar min = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33689__$1,new cljs.core.Keyword(null,\"min\",\"min\",444991522));\nvar max = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33689__$1,new cljs.core.Keyword(null,\"max\",\"max\",61366548));\nvar nmin = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33689__$1,new cljs.core.Keyword(null,\"nmin\",\"nmin\",1751665282));\nvar nmax = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33689__$1,new cljs.core.Keyword(null,\"nmax\",\"nmax\",608994404));\nvar precision = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33689__$1,new cljs.core.Keyword(null,\"precision\",\"precision\",-1175707478));\nvar value = wc_rum_lib.numeric_input.str_to_num(rum.core.react(cursor));\nreturn daiquiri.core.create_element(\"span\",{'className':\"incdec\"},[daiquiri.core.create_element(\"button\",{'className':[(((increment > (0)))?\"right\":\"left\"),\" btn btn-default \"].join(''),'aria-hidden':\"true\",'disabled':(((increment > (0)))?(((value >= wc_rum_lib.numeric_input.str_to_num(((cljs.core.fn_QMARK_(max))?rum.core.react((max.cljs$core$IFn$_invoke$arity$0 ? max.cljs$core$IFn$_invoke$arity$0() : max.call(null))):max))))?\"disabled\":null):(((value <= nmin))?\"disabled\":null)),'tabIndex':(-1),'onClick':(function (){\nreturn wc_rum_lib.numeric_input.update_value(cljs.core.deref(cursor),nmin,nmax,precision,increment,onChange);\n})},[(((increment > (0)))?\"+\":\"\\u2013\")])]);\n}),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [rum.core.static$,rum.core.reactive], null),\"wc-rum-lib.numeric-input/inc-dec-button\");\nwc_rum_lib.numeric_input.numeric_input = rum.core.lazy_build(rum.core.build_defc,(function (p__33691){\nvar map__33692 = p__33691;\nvar map__33692__$1 = cljs.core.__destructure_map(map__33692);\nvar props = map__33692__$1;\nvar key = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33692__$1,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587));\nvar input_ref = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33692__$1,new cljs.core.Keyword(null,\"input-ref\",\"input-ref\",575432746));\nvar onChange = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33692__$1,new cljs.core.Keyword(null,\"onChange\",\"onChange\",-312891301));\nvar min = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33692__$1,new cljs.core.Keyword(null,\"min\",\"min\",444991522));\nvar max = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33692__$1,new cljs.core.Keyword(null,\"max\",\"max\",61366548));\nvar error_color = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__33692__$1,new cljs.core.Keyword(null,\"error-color\",\"error-color\",-332587474),\"red\");\nvar color = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__33692__$1,new cljs.core.Keyword(null,\"color\",\"color\",1011675173),\"black\");\nvar precision = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33692__$1,new cljs.core.Keyword(null,\"precision\",\"precision\",-1175707478));\nvar vec__33693 = clojure.string.split.cljs$core$IFn$_invoke$arity$2(rum.core.react(input_ref),/:/);\nvar good = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33693,(0),null);\nvar bad = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33693,(1),null);\nvar value = wc_rum_lib.numeric_input.str_to_num(good);\nvar nmin = wc_rum_lib.numeric_input.str_to_num(((cljs.core.fn_QMARK_(min))?rum.core.react((min.cljs$core$IFn$_invoke$arity$0 ? min.cljs$core$IFn$_invoke$arity$0() : min.call(null))):min));\nvar nmax = wc_rum_lib.numeric_input.str_to_num(((cljs.core.fn_QMARK_(max))?rum.core.react((max.cljs$core$IFn$_invoke$arity$0 ? max.cljs$core$IFn$_invoke$arity$0() : max.call(null))):max));\nvar mutate = (function (e){\nreturn wc_rum_lib.numeric_input.handle_typed_input(min,max,precision,onChange,e);\n});\nreturn daiquiri.core.create_element(\"div\",{'style':{'minWidth':\"100px\",'tabIndex':(1),'selectable':true},'onKeyDown':(function (p1__33690_SHARP_){\nvar key_code = p1__33690_SHARP_.nativeEvent.code;\nif(cljs.core.truth_((function (){var fexpr__33696 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [\"ArrowUp\",null,\"ArrowDown\",null], null), null);\nreturn (fexpr__33696.cljs$core$IFn$_invoke$arity$1 ? fexpr__33696.cljs$core$IFn$_invoke$arity$1(key_code) : fexpr__33696.call(null,key_code));\n})())){\np1__33690_SHARP_.preventDefault();\n} else {\n}\n\nreturn wc_rum_lib.numeric_input.update_value(value,nmin,nmax,precision,((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"ArrowUp\",key_code))?(1):((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"ArrowDown\",key_code))?(-1):(0)\n)),onChange);\n}),'className':\"numeric-input\"},[daiquiri.core.create_element(\"div\",{'className':\"button-group\"},[wc_rum_lib.numeric_input.inc_dec_button(cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(props,new cljs.core.Keyword(null,\"nmin\",\"nmin\",1751665282),nmin,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"nmax\",\"nmax\",608994404),nmax,new cljs.core.Keyword(null,\"precision\",\"precision\",-1175707478),precision,new cljs.core.Keyword(null,\"increment\",\"increment\",-1558831484),(-1),new cljs.core.Keyword(null,\"cursor\",\"cursor\",1011937484),input_ref], 0))),daiquiri.core.create_element(\"input\",{'type':\"text\",'value':good,'id':key,'onClick':mutate,'onChange':rum.core.mark_sync_update(mutate),'style':{'color':(((bad == null))?color:error_color),'borderTop':\"2px solid #ddd\",'width':\"58px\",'padding':\"0 0 4px 0\",'borderLeft':\"2px solid #ddd\",'textAlign':\"center\",'fontSize':\"14px\",'backgroundColor':(cljs.core.truth_(isNaN(value))?\"#fff\":\"#CCEEF8\"),'height':\"36px\"}},[]),wc_rum_lib.numeric_input.inc_dec_button(cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(props,new cljs.core.Keyword(null,\"nmin\",\"nmin\",1751665282),nmin,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"nmax\",\"nmax\",608994404),nmax,new cljs.core.Keyword(null,\"precision\",\"precision\",-1175707478),precision,new cljs.core.Keyword(null,\"increment\",\"increment\",-1558831484),(1),new cljs.core.Keyword(null,\"cursor\",\"cursor\",1011937484),input_ref], 0)))])]);\n}),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [rum.core.static$,rum.core.reactive], null),\"wc-rum-lib.numeric-input/numeric-input\");\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","wc_rum_lib/numeric_input.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",29],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",["^ ","~$defstyle","~$cljs-css-modules.macro"],"~:excludes",["~#set",["~$min","~$max"]],"~:name","~$wc-rum-lib.numeric-input","~:reader-aliases",["^ "],"~:op","~:ns","~:imports",null,"~:requires",["^ ","~$rum.core","^P","~$rum","^P","~$clojure.string","^R","^D","^D","~$cljs.core","^S","~$goog","^T"],"~:seen",["^F",["~:require"]],"~:uses",["^ ","~$split","^R","~$trim","^R","~$starts-with?","^R"],"~:require-macros",["^ ","^D","^D","^S","^S","^P","^P","^Q","^P"],"~:form",["~#list",["~$ns","^J",["^11",["~:refer-clojure","~:exclude",["^H","^G"]]],["^11",["^V",["^P","~:as","^Q"],["^R","~:refer",["^X","^Y","^Z"]],["^D","~:refer-macros",["^C"]]]]]],"~:flags",["^ ","^V",["^F",[]]],"~:js-deps",["^ "],"~:deps",["^T","^S","^P","^R","^D"]],"^M","^J","~:resource-id",["~:shadow.build.classpath/resource","wc_rum_lib/numeric_input.cljs"],"~:compiled-at",1648461634275,"^K",["^ ","^P","^P","^Q","^P","^R","^R","^D","^D","^S","^S","^T","^T"],"~:resource-name","wc_rum_lib/numeric_input.cljs","~:warnings",[],"~:source","(ns wc-rum-lib.numeric-input\n  (:refer-clojure :exclude [max min])\n  (:require [rum.core :as rum]\n            [clojure.string :refer [split trim starts-with?]]\n            [cljs-css-modules.macro :refer-macros [defstyle]]\n            #_[hashp.core]\n            ))\n\n(defstyle style\n  [\".numeric-input\" {:width      \"130px\"\n                     :tab-index  1\n                     :selectable true}\n   [\".incdec\"\n    [\".right\" {:border-top-right-radius    \"10px\"\n               :border-bottom-right-radius \"10px\"\n               :width                      \"36px\"}]\n    [\".left\" {:border-top-left-radius    \"10px\"\n              :border-bottom-left-radius \"10px\"\n              :width                     \"36px\"}]]])\n\n\n(defn error? [value] (or (nil? value) (= \"\" value) (js/isNaN value)))\n\n;;\n;; Numeric values are always stored in state as strings, but processed as numerics\n;;\n(defn str-to-num\n  \"convert str to num or to ##NaN if not possible\"\n  [s]\n  (js/parseFloat s))\n(comment\n  (str-to-num \"3.5\")                                        ;=> 3.5\n  (str-to-num 3.5)                                          ;=> 3.5\n  )\n\n(def epsilon 1e-8)\n\n(defn near-integer? [n]\n  (< (js/Math.abs (- n (js/Math.round n))) epsilon))\n\n(defn trim-trailing-zero [s]\n  (if-let [[m m1] (re-matches #\"(.*\\.\\d)\\d+\" s)]\n    m1 s))\n\n(defn at-precision [n precision]\n  (cond\n    (= 0 precision)\n    ; display as integer\n    (str (js/Math.ceil n))\n\n    (= 3 precision)\n    ; flexible display up to 3dp\n    (if (near-integer? n)\n      (str (js/floor n))\n      (-> n\n        (.toPrecision (js/Number. 3))\n        (trim-trailing-zero)))\n\n    (= 2 precision)\n    ; display with 2dp always\n    (.toFixed (js/Number. n) 2)\n\n    (= 1 precision)\n    ; display with 1dp always\n    (.toFixed (js/Number. n) 1)\n    )\n  )\n\n(defn num-to-str\n  ([n]\n   ; default to integer\n   (num-to-str n 0))\n  ([n precision]\n   (if (string? n)\n     (do\n       ;(println n \" returning unchanged string\")\n       n)\n     (if (js/isNaN n)\n       \"\"\n       (if (near-integer? n)\n         (str (js/Math.floor n))\n         (if precision\n           (do\n             ;(println \"num-to-str precision \" n precision)\n             (at-precision n precision))\n           (at-precision n 0))\n         #_(-> n\n             (.toPrecision (js/Number. 3))\n             (trim-trailing-zero)))))))\n\n; this can be global as there is only one input under focus at any one time\n;(def timer (atom nil))\n\n\n(comment\n  (validate-input \"\" 25 95 1) \" :0\"\n  (validate-input nil 25 95 1) \" :0\"\n  (validate-input ##NaN 25 95 1) \" :0\"\n  (validate-input \" \" 25 95 1) \" :0\"\n  (validate-input \"3\" 25 95 1) \"4:4\"\n  (validate-input \"8\" 25 95 1) \"9:9\"\n  (validate-input 8 25 95 1) \"9:9\"\n  (validate-input \":0\" 25 95 1) \" :0\"\n  (validate-input \" :0\" 25 95 1) \" :0\"\n  (validate-input \"4:4\" 25 95 1) \"5:5\"\n  (validate-input \"5:5\" 25 95 1) \"6:6\"\n  (validate-input \"24:24\" 25 95 1) 25\n  (validate-input \"96\" 25 95 1) \"97:97\"\n  (validate-input \"-1\" 25 95 1) \"0:0\"\n  (validate-input \"-2\" 25 95 1) \"-1:-1\"\n  )\n\n\n\n#_(defn validate-typed-input [value nmin nmax step]\n  (let [value (str-to-num value)\n        nmin (if (fn? nmin) @(nmin) nmin)\n        nmax (if (fn? nmax) @(nmax) nmax)                   ;(if (keyword? nmax) @(input-cursor nmax) nmax)\n        val-1 (if (js/isNaN value)                          ; is value blank? (Note: (= (str-to-num \"\") (str-to-num nil) ##NaN)\n                (if (pos? step)                             ; is it an increment?\n                  (dec nmin)                                ; yes - go to one less than minimum (we'll increment later)\n                  (if (neg? step)                           ; is it a decrement?\n                    (inc nmax)                              ; yes - got to one more than maximum (we'll decrement later)\n                    nmin                                    ; no ; TODO???\n                    ))\n                value)\n        val-2 val-1                                         ;(+ step val-1)                                ; do the increment\n        val-3 (if (< val-2 nmin)                            ; is it too small?\n                (str (num-to-str val-2) \":\" val-2)          ; yes\n                (if (> val-2 nmax)                          ; no; is it too big?\n                  (str (num-to-str val-2) \":\" val-2)        ; yes, return good and bad values, in colon separated string\n                  val-2))]                                  ; no\n    ;(println \"(validate \" value nmin nmax step \") = \" val-3)\n    #_(when (or (= val-3 35))\n      (js/alert (str \"tv \" value \" v1 \" val-1 \" v2 \" val-2 \" v3 \" val-3))) ; no\n    (if (js/isNaN value)                                    ; Case when user has deleted value using backspace.\n      \" :0\"                                                 ; and there is no input there.\n      val-3                                                 ; Otherwise return\n      )\n    ))\n\n#_(defn validate-button [value nmin nmax step]\n  (let [value (str-to-num value)\n        nmin (if (fn? nmin) @(nmin) nmin)\n        nmax (if (fn? nmax) @(nmax) nmax)                   ;(if (keyword? nmax) @(input-cursor nmax) nmax)\n        val-1 (if (js/isNaN value)                          ; is value blank?\n                (if (pos? step)                             ; is it an increment?\n                  (dec nmin)                                ; yes - go to one less than minimum (we'll increment later)\n                  (if (neg? step)                           ; is it a decrement?\n                    (inc nmax)                              ; yes - got to one more than maximum (we'll decrement later)\n                    nmin                                    ; no - todo: This inserts nmin into val-1\n                    ))\n                value)\n        val-2 (+ step val-1)                                ; do the increment\n\n        val-3 (if (< val-2 nmin)                            ; is it too small?\n                (str (num-to-str val-2) \":\" val-2)          ; yes\n                (if (> val-2 nmax)                          ; no; is it too big?\n                  (str (num-to-str val-2) \":\" val-2)        ; yes, return good and bad values, in colon separated string\n                  val-2))\n        ]\n    #_(when (or (= val-3 35))\n      (js/alert (str \"bv \" value \" v1 \" val-1 \" v2 \" val-2 \" v3 \" val-3))) ; no\n    (if (js/isNaN value)                                    ; Case when user has deleted value using backspace.\n      \" :0\"                                                 ; and there is no input there.\n      val-3                                                 ; Otherwise return\n      )))\n\n(defn validate-input [value nmin nmax step]\n  #_(js/console.log \"in value \" value)\n  #_(js/console.log \"nmin \" nmin)\n  #_(js/console.log \"nmax \" nmax)\n  #_(js/console.log \"step \" step)\n  (let [value (str-to-num value)\n        nmin (if (fn? nmin) @(nmin) nmin)\n        nmax (if (fn? nmax) @(nmax) nmax)                   ;(if (keyword? nmax) @(input-cursor nmax) nmax)\n        val-1 (if (js/isNaN value)                          ; is value blank?\n                (if (pos? step)                             ; is it an increment?\n                  (dec nmin)                                ; yes - go to one less than minimum (we'll increment later)\n                  (if (neg? step)                           ; is it a decrement?\n                    (inc nmax)                              ; yes - got to one more than maximum (we'll decrement later)\n                    nmin                                    ; no - check: This inserts nmin into val-1\n                    ))\n                value)\n        val-2 (+ step val-1)                                ; do the increment\n\n        val-3 (if (< val-2 nmin)                            ; is it too small?\n                (str (num-to-str val-2) \":\" val-2)          ; yes\n                (if (> val-2 nmax)                          ; no; is it too big?\n                  (str (num-to-str val-2) \":\" val-2)        ; yes, return good and bad values, in colon separated string\n                  val-2))\n        ]\n    #_(js/console.log \"out-value \" value)\n    (if (js/isNaN value)                                    ; Case when user has deleted value using backspace.\n      \" :0\"                                                 ; and there is no input there.\n      val-3                                                 ; Otherwise return\n      )))\n\n(defn handle-inc [value onChange nmin nmax precision step]\n  (let [v (validate-input value nmin nmax step)]\n    ;(js/console.log \"onChange \" v)\n    (onChange (num-to-str v #_(if (= v \" :0\") nmin v) precision))))\n\n\n(defn handle-typed-input [nmin nmax precision onChange e]\n  (let [value (.. (-> e .-target) -value)]\n    ;(.log js/console \"t:\" value)\n    (if (re-matches #\"\\s*\\d*\\.?\\d*\\s*\" value)               ; todo: should this be d+ rather than d*?\n      (onChange (num-to-str (validate-input (str-to-num value) nmin nmax 0) precision))\n      (onChange \"\"))                                        ; todo: should this be nil or ##NaN?\n    ))\n(comment\n  (re-matches #\"\\s*\\d*\\.?\\d*\\s*\" \"6\")                       ;\"6\"\n  (re-matches #\"\\s*\\d*\\.?\\d*\\s*\" \"\")                        ;\"\"\n  (re-matches #\"\\s*\\d*\\.?\\d*\\s*\" \"0.7\")                        ;\"0.7\"\n  (re-matches #\"\\s*\\d*\\.?\\d*\\s*\" \".7\")                        ;\".7\"\n  (re-matches #\"\\s*\\d*\\.?\\d*\\s*\" \"7.\")                        ;\"7.\"\n  (re-matches #\"\\s*\\d*\\.?\\d*\\s*\" \"a\")                       nil\n  )\n\n(defn update-value [value nmin nmax precision step onChange]\n  (handle-inc value onChange nmin nmax precision step))\n\n(rum/defcs inc-dec-button < rum/static rum/reactive         ;(rum/local nil ::timer)\n  [state\n   {:keys [cursor increment onChange min max nmin nmax precision]\n    :as   props}]\n  (let [value (str-to-num (rum/react cursor))]\n    [:span {:class-name \"incdec\"}\n     [:button {:class-name  (str (if (pos? increment) \"right\" \"left\") \" btn btn-default \")\n               :aria-hidden \"true\"\n               :disabled    (if (pos? increment)\n                              (if (>= value (str-to-num (if (fn? max) (rum/react (max)) max))) \"disabled\" nil)\n                              (if (<= value nmin) \"disabled\" nil))\n               :tab-index   -1\n               :on-click    #(update-value @cursor nmin nmax precision increment onChange)}\n      (if (pos? increment) \"+\" \"–\")]]))\n\n\n\n(rum/defc numeric-input < rum/static rum/reactive           ;echo-update\n  [{:keys [key input-ref onChange min max error-color color precision] :or {error-color \"red\" color \"black\"} :as props}]\n\n   (let [[good bad] (split (rum/react input-ref) #\":\")\n        value (str-to-num good)\n        nmin (str-to-num (if (fn? min) (rum/react (min)) min))\n        nmax (str-to-num (if (fn? max) (rum/react (max)) max))\n         ;_ (js/console.log \"store \" (rum/react input-ref))\n\n        mutate (fn [e]\n                 #_(js/console.log \"nativeEvent \" e)\n                 #_(js/console.log \"inputType \" (.. e -nativeEvent -inputType))\n                 (handle-typed-input\n                   min\n                   max\n                   precision\n                   onChange e))]\n\n    [:div {:class       \"numeric-input\"\n           :style       {:min-width      \"100px\"\n                         :tab-index  1\n                         :selectable true}\n           :on-key-down #(let [key-code (.. % -nativeEvent -code)]\n                           (when (#{\"ArrowUp\" \"ArrowDown\"} key-code)\n                             (.preventDefault %))\n                           (update-value value nmin nmax precision\n                             (cond\n                               (= \"ArrowUp\" key-code) 1\n                               (= \"ArrowDown\" key-code) -1\n                               :else 0)\n                             onChange))}\n     [:.button-group\n      (inc-dec-button (assoc props :nmin nmin :nmax nmax :precision precision :increment -1 :cursor input-ref))\n      [:input\n       {:type      \"text\"\n        :value     good\n        :id        key\n        :on-click  mutate\n        :on-change mutate\n        :style     {:width            \"58px\" :height \"36px\" :font-size \"14px\"\n                    :border-top       \"2px solid #ddd\"\n                    :border-left      \"2px solid #ddd\"\n                    :background-color (if (js/isNaN value) \"#fff\" \"#CCEEF8\")\n                    :color            (if (nil? bad) color error-color)\n                    :padding          \"0 0 4px 0\"\n                    :text-align       \"center\"\n                    #_#_:font-weight \"bold\"}\n        }]\n      (inc-dec-button (assoc props :nmin nmin :nmax nmax :precision precision :increment 1 :cursor input-ref))\n      ]]\n\n    ))\n","~:reader-features",["^F",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["cljs-css-modules.runtime/inject-style!","cljs.core.apply","garden.core/css","wc-rum-lib.numeric-input/style","wc-rum-lib.numeric-input/error?","value","or__4212__auto__","cljs.core._EQ_","js/isNaN","wc-rum-lib.numeric-input/str-to-num","s","js/parseFloat","wc-rum-lib.numeric-input/epsilon","wc-rum-lib.numeric-input/near-integer?","n","js/Math.abs","js/Math.round","wc-rum-lib.numeric-input/trim-trailing-zero","temp__5751__auto__","vec__33646","cljs.core.nth","m","m1","cljs.core/re-matches","wc-rum-lib.numeric-input/at-precision","precision","js/Math.ceil","js/floor","js/Number","var_args","G__33654","wc-rum-lib.numeric-input/num-to-str","js/Error","wc_rum_lib.numeric_input.num_to_str","js/Math.floor","wc-rum-lib.numeric-input/validate-input","nmin","nmax","step","cljs.core/deref","cljs.core/fn?","val-1","val-2","val-3","wc-rum-lib.numeric-input/handle-inc","onChange","v","G__33671","wc-rum-lib.numeric-input/handle-typed-input","e","G__33674","wc-rum-lib.numeric-input/update-value","rum.core/lazy-build","rum.core/build-defcs","p__33688","map__33689","cljs.core/--destructure-map","cljs.core.get","daiquiri.core/create-element","wc-rum-lib.numeric-input/inc-dec-button","rum.core/static","rum.core/reactive","state","cursor","increment","min","max","props","rum.core/react","rum.core/build-defc","p__33691","map__33692","vec__33693","p1__33690#","rum.core/mark-sync-update","wc-rum-lib.numeric-input/numeric-input","key","input-ref","error-color","color","good","bad","clojure.string.split","mutate","key-code","fexpr__33696","cljs.core.assoc"]],"~:used-vars",["^F",["~$cljs.core/--destructure-map","~$js/Math.floor","~$wc-rum-lib.numeric-input/at-precision","~$cljs-css-modules.runtime/inject-style!","~$wc-rum-lib.numeric-input/validate-input","~$clojure.string/split","~$cljs.core/=","~$cljs.core/re-matches","~$wc-rum-lib.numeric-input/error?","~$cljs.core/deref","~$cljs.core/apply","~$garden.core/css","~$js/floor","~$rum.core/build-defcs","~$js/Math.ceil","~$rum.core/lazy-build","~$js/Math.abs","~$cljs.core/fn?","~$wc-rum-lib.numeric-input/epsilon","~$rum.core/static","~$cljs.core/get","~$wc-rum-lib.numeric-input/handle-inc","~$wc-rum-lib.numeric-input/trim-trailing-zero","~$wc-rum-lib.numeric-input/update-value","~$js/isNaN","~$wc-rum-lib.numeric-input/style","~$cljs.core/nth","~$wc-rum-lib.numeric-input/handle-typed-input","~$wc-rum-lib.numeric-input/num-to-str","~$rum.core/react","~$wc-rum-lib.numeric-input/str-to-num","~$js/parseFloat","~$rum.core/reactive","~$wc-rum-lib.numeric-input/inc-dec-button","~$cljs.core/assoc","~$js/Math.round","~$daiquiri.core/create-element","~$js/Number","~$rum.core/build-defc","~$js/Error","~$wc-rum-lib.numeric-input/near-integer?","~$wc-rum-lib.numeric-input/numeric-input","~$rum.core/mark-sync-update"]]],"~:cache-keys",["~#cmap",[["~:shadow.build.npm/resource","node_modules/react-dom/index.js"],["e8091a4577ab6b32c9fa13d5dfc59db052218e1e","4e9614cdc0e2c223ef717009a8fd70c2c8df01cc","dc3011a0ee823c91a565237d17cbc3c0856de8a6","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^F",[]],"~:deps-syms",["~$shadow.js","~$module$node_modules$react_dom$cjs$react_dom_production_min","~$module$node_modules$react_dom$cjs$react_dom_development"]]],["^1<","goog/dom/tagname.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","~$goog.dom.HtmlElement"]]],["^1<","cljs/tools/reader/impl/utils.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^S","^R","~$goog.string"]]],["^1<","rum/util.cljc"],["569584f2f07641708e6d9b858cff5e804bf5e329","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^S"]]],["^1<","goog/math/math.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","~$goog.array","~$goog.asserts"]]],["^1<","goog/html/trustedtypes.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T"]]],["^1<","goog/string/stringformat.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^2R"]]],["^1<","goog/labs/useragent/browser.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^2S","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^1<","goog/html/safeurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^2T","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2W"]]],["^1<","goog/array/array.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^2T"]]],["^1<","garden/color.cljc"],["ee5fc50fad089581dd0cf1fd0f16e4ec745a57dd","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^S","^R","~$garden.util"]]],["^1<","goog/debug/error.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T"]]],["^1<","garden/units.cljc"],["ee5fc50fad089581dd0cf1fd0f16e4ec745a57dd","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^S","~$cljs.reader","~$garden.types","^32"]]],["^1<","daiquiri/normalize.cljc"],["569584f2f07641708e6d9b858cff5e804bf5e329","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^S","^R","~$daiquiri.util"]]],["^1<","rum/derived_atom.cljc"],["569584f2f07641708e6d9b858cff5e804bf5e329","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^S"]]],["^1<","cljs/tools/reader/edn.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^S","~$cljs.tools.reader.impl.errors","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^2R","~$goog.string.StringBuffer"]]],["^1<","goog/dom/nodetype.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T"]]],["^1<","cljs/tools/reader/impl/inspect.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^S"]]],["^1<","daiquiri/interpreter.cljs"],["569584f2f07641708e6d9b858cff5e804bf5e329","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^S","^R","~$daiquiri.normalize","^35","~$cljsjs.react","^2V"]]],["^1<","cljs/tools/reader.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^S","^37","^38","^39","^36","^2S","^2R","^3;"]]],["^2I","node_modules/scheduler/cjs/scheduler.development.js"],["e8091a4577ab6b32c9fa13d5dfc59db052218e1e","4e9614cdc0e2c223ef717009a8fd70c2c8df01cc","f683a524b03498a1510e8212cb7ad7992728f04a","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^2N"]]],["^1<","garden/stylesheet.cljc"],["ee5fc50fad089581dd0cf1fd0f16e4ec745a57dd","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^S","^32","~$garden.color","^34"]]],["^2I","node_modules/scheduler/cjs/scheduler.production.min.js"],["e8091a4577ab6b32c9fa13d5dfc59db052218e1e","4e9614cdc0e2c223ef717009a8fd70c2c8df01cc","9472969a489f23335a05beb90573f81a73239194","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^2N"]]],["^1<","daiquiri/util.cljc"],["569584f2f07641708e6d9b858cff5e804bf5e329","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^S","~$clojure.set","^R"]]],["^1<","wc_rum_lib/numeric_input.cljs"],["71347a09abf0c990f303c48ce0a295604282a437","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^S","^P","^R","^D"]]],["^1<","goog/string/typedstring.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T"]]],["^2I","node_modules/scheduler/cjs/scheduler-tracing.production.min.js"],["e8091a4577ab6b32c9fa13d5dfc59db052218e1e","4e9614cdc0e2c223ef717009a8fd70c2c8df01cc","d1e7bb5f7c53667de84b51d7535a959d16b917a5","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^2N"]]],["^2I","node_modules/react/index.js"],["e8091a4577ab6b32c9fa13d5dfc59db052218e1e","4e9614cdc0e2c223ef717009a8fd70c2c8df01cc","a69a7f3d4a4636bf9035bc53c05b2d99a7b8af7f","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^2N","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1<","shadow/js.js"],["3d6ef2b6e978cc2c657d918e731bb6e374fbfd65","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T"]]],["^1<","goog/object/object.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T"]]],["^1<","goog/dom/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^2T"]]],["^2I","node_modules/react-dom/cjs/react-dom.production.min.js"],["e8091a4577ab6b32c9fa13d5dfc59db052218e1e","4e9614cdc0e2c223ef717009a8fd70c2c8df01cc","94bb474c079e06a407e4fa922e58d3c69ee2b649","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^2N","~$module$node_modules$react$index","~$module$node_modules$object_assign$index","~$module$node_modules$scheduler$index"]]],"~:SHADOW-TIMESTAMP",[1647940543000,1647940543000,1633031471000],["^2I","node_modules/react/cjs/react.development.js"],["e8091a4577ab6b32c9fa13d5dfc59db052218e1e","4e9614cdc0e2c223ef717009a8fd70c2c8df01cc","754b7a48941975257c8955f6d5e511cb3a878737","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^2N","^3C"]]],["^1<","cljs_css_modules/macro.cljc"],["aa16088abf13627b6e847754432767ed39b3c8b2","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^S","~$garden.core","~$garden.stylesheet","~$cljs-css-modules.runtime"]]],["^1<","goog/math/long.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^2T","~$goog.reflect"]]],["^1<","goog/html/trustedresourceurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^2T","~$goog.fs.blob","^2X","~$goog.html.SafeScript","~$goog.html.trustedtypes","^2Z","^2[","^30","^31"]]],["^1<","goog/string/internal.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T"]]],["^2I","node_modules/scheduler/cjs/scheduler-tracing.development.js"],["e8091a4577ab6b32c9fa13d5dfc59db052218e1e","4e9614cdc0e2c223ef717009a8fd70c2c8df01cc","12fb110a42ab39177d6ab3e0a205e4a8ef350ae2","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^2N"]]],["^1<","goog/functions/functions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T"]]],["^1<","goog/html/safestyle.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^2S","^2T","~$goog.html.SafeUrl","^30","^31","^2W"]]],["^1<","goog/dom/safe.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^2T","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^3K","~$goog.html.SafeStyle","^3M","^2Y","~$goog.html.uncheckedconversions","^30","^2W"]]],["^1<","goog/structs/map.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1<","goog/html/safehtml.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^2S","^2T","~$goog.dom.TagName","~$goog.dom.tags","^3K","^3Q","~$goog.html.SafeStyleSheet","^3M","^2Y","^3L","^2Z","^2[","~$goog.labs.userAgent.browser","^2V","^30","^31","^2W"]]],["^1<","goog/dom/tags.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^2V"]]],["^2I","node_modules/scheduler/index.js"],["e8091a4577ab6b32c9fa13d5dfc59db052218e1e","4e9614cdc0e2c223ef717009a8fd70c2c8df01cc","408126fc2241739168bcaf5965ae56a7df143144","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^2N","~$module$node_modules$scheduler$cjs$scheduler_production_min","~$module$node_modules$scheduler$cjs$scheduler_development"]]],["^1<","garden/core.cljc"],["ee5fc50fad089581dd0cf1fd0f16e4ec745a57dd","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^S","~$garden.compiler"]]],["^1<","goog/fs/blob.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^2S"]]],["^1<","cljs/reader.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^S","^2V","^3:","~$cljs.tools.reader.edn","^3;"]]],["^1<","goog/asserts/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1<","garden/types.cljc"],["ee5fc50fad089581dd0cf1fd0f16e4ec745a57dd","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^S"]]],["^1<","goog/uri/uri.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^2S","^2T","^2R","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1<","goog/i18n/bidi.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T"]]],["^2I","node_modules/object-assign/index.js"],["e8091a4577ab6b32c9fa13d5dfc59db052218e1e","4e9614cdc0e2c223ef717009a8fd70c2c8df01cc","519ffd5a4c91b67302cc9947b794966d629860cd","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^2N"]]],["^1<","garden/selectors.cljc"],["ee5fc50fad089581dd0cf1fd0f16e4ec745a57dd","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^S","^R"]]],["^1<","goog/fs/url.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T"]]],["^1<","goog/base.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",[]]],["^1<","garden/util.cljc"],["ee5fc50fad089581dd0cf1fd0f16e4ec745a57dd","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^S","^R","^34","^2R","~$goog.string.format"]]],["^1<","garden/compression.cljc"],["ee5fc50fad089581dd0cf1fd0f16e4ec745a57dd","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^S"]]],["^1<","goog/structs/structs.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^2S","^2V"]]],["^1<","cljs/tools/reader/impl/errors.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^S","^37","^R","~$cljs.tools.reader.impl.inspect"]]],["^1<","cljsjs/react.cljs"],["4323f8e603a952cae34c4c6db04141e97928434f","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^S","^3B"]]],["^1<","clojure/string.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^S","^2R","^3;"]]],["^1<","rum/specs.cljc"],["569584f2f07641708e6d9b858cff5e804bf5e329","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^S"]]],["^2I","node_modules/react/cjs/react.production.min.js"],["e8091a4577ab6b32c9fa13d5dfc59db052218e1e","4e9614cdc0e2c223ef717009a8fd70c2c8df01cc","0a81b45abe33f0ad39b726512604018f94261db9","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^2N","^3C"]]],["^1<","goog/string/string.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","~$goog.dom.safe","^3R","^30","^2W"]]],["^1<","goog/reflect/reflect.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T"]]],["^1<","goog/labs/useragent/util.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^2W"]]],["^1<","goog/string/stringbuffer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T"]]],["^1<","cljs/tools/reader/reader_types.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^S","^38","^2R","^3;"]]],["^1<","goog/iter/iter.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^2S","^2T","^3O","~$goog.math"]]],["^1<","rum/cursor.cljs"],["569584f2f07641708e6d9b858cff5e804bf5e329","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^S"]]],["^1<","goog/html/uncheckedconversions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^2T","^3P","^3K","^3Q","^3W","^3M","^2Y","^30","^2W","^2Z"]]],["^1<","cljs/tools/reader/impl/commons.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^S","^36","^37","^38"]]],["^1<","goog/dom/htmlelement.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T"]]],["^1<","cljs/core.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","~$goog.math.Long","~$goog.math.Integer","^2R","^2V","^2S","~$goog.Uri","^3;"]]],["^1<","goog/html/safescript.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^30","^31","^3L","^2T"]]],["^1<","goog/html/safestylesheet.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^30","^3Q","^31","^2S","^2V","^2T","^2W"]]],["^1<","cljsjs/react/dom.cljs"],["4323f8e603a952cae34c4c6db04141e97928434f","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^S","^3B","~$module$node_modules$react_dom$index"]]],["^1<","goog/math/integer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^3I"]]],["^2I","node_modules/scheduler/tracing.js"],["e8091a4577ab6b32c9fa13d5dfc59db052218e1e","4e9614cdc0e2c223ef717009a8fd70c2c8df01cc","4a7a89de5eaa5548bfc85da9e5243b3c7e444a34","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^2N","~$module$node_modules$scheduler$cjs$scheduler_tracing_production_min","~$module$node_modules$scheduler$cjs$scheduler_tracing_development"]]],["^2I","node_modules/react-dom/cjs/react-dom.development.js"],["e8091a4577ab6b32c9fa13d5dfc59db052218e1e","4e9614cdc0e2c223ef717009a8fd70c2c8df01cc","9e0e7f2f8475431f2b4b8c517c6fabc2273c7857","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^2N","^3B","^3C","^3D","~$module$node_modules$scheduler$tracing"]]],["^1<","clojure/set.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^S"]]],["^1<","goog/uri/utils.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^2T","^2R"]]],["^1<","goog/string/const.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^2T","^31"]]],["^1<","cljs_css_modules/runtime.cljs"],["aa16088abf13627b6e847754432767ed39b3c8b2","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^S","^3F"]]],["^1<","rum/core.cljs"],["569584f2f07641708e6d9b858cff5e804bf5e329","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^S","^3=","~$cljsjs.react.dom","^2V","^3O","^3?","~$rum.specs","~$daiquiri.core","~$rum.cursor","~$rum.util","~$rum.derived-atom"]]],["^1<","garden/compiler.cljc"],["ee5fc50fad089581dd0cf1fd0f16e4ec745a57dd","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^S","^R","^3>","~$garden.compression","~$garden.selectors","~$garden.units","^32","^34"]]],["^1<","daiquiri/core.cljs"],["569584f2f07641708e6d9b858cff5e804bf5e329","^2J",["^ ","^2K",null,"^2L",["^F",[]],"^2M",["^T","^S","~$daiquiri.interpreter","^3="]]]]],"~:clj-info",["^ ","jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/core.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/cljs-css-modules/cljs-css-modules/0.2.1/cljs-css-modules-0.2.1.jar!/cljs_css_modules/macro.cljc",1633636902000,"jar:file:/Users/mehdi/.m2/repository/garden/garden/1.3.2/garden-1.3.2.jar!/garden/types.cljc",1633636901000,"jar:file:/Users/mehdi/.m2/repository/rum/rum/0.12.8/rum-0.12.8.jar!/daiquiri/normalize.cljc",1644311977000,"jar:file:/Users/mehdi/.m2/repository/rum/rum/0.12.8/rum-0.12.8.jar!/daiquiri/util.cljc",1644311977000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/cljs/tools/reader/reader_types.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/env.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/garden/garden/1.3.2/garden-1.3.2.jar!/garden/color.cljc",1633636901000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/js_deps.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/rum/rum/0.12.8/rum-0.12.8.jar!/daiquiri/compiler.clj",1644311977000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/inspect.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/reader_types.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/passes.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/reader.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/garden/garden/1.3.2/garden-1.3.2.jar!/garden/compiler.cljc",1633636901000,"jar:file:/Users/mehdi/.m2/repository/garden/garden/1.3.2/garden-1.3.2.jar!/garden/units.cljc",1633636901000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/default_data_readers.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/errors.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/garden/garden/1.3.2/garden-1.3.2.jar!/garden/compression.cljc",1633636901000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map/base64_vlq.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/passes/and_or.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/rum/rum/0.12.8/rum-0.12.8.jar!/rum/cursor.clj",1644311977000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1633011066000,"jar:file:/Users/mehdi/.m2/repository/garden/garden/1.3.2/garden-1.3.2.jar!/garden/util.cljc",1633636901000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/tagged_literals.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/garden/garden/1.3.2/garden-1.3.2.jar!/garden/selectors.cljc",1633636901000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/instant.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1633011066000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/compiler.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/impl.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1633011066000,"jar:file:/Users/mehdi/.m2/repository/rum/rum/0.12.8/rum-0.12.8.jar!/rum/server_render.clj",1644311977000,"jar:file:/Users/mehdi/.m2/repository/rum/rum/0.12.8/rum-0.12.8.jar!/rum/derived_atom.cljc",1644311977000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/util.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1633011066000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map/base64.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1633011066000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1633011066000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/data.json/2.4.0/data.json-2.4.0.jar!/clojure/data/json.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/rum/rum/0.12.8/rum-0.12.8.jar!/rum/core.clj",1644311977000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/externs.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1633011066000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","wc_rum_lib/numeric_input.cljs","^7",1,"^8",5,"^9",1,"^:",29],"^;",["^ ","^<","^=","^>","^?","^@","^A"],"^B",["^ ","^C","^D"],"^E",["^F",["^G","^H"]],"~:shadow/js-access-properties",["^F",["floor","ceil","abs","round"]],"^I","^J","^K",["^ "],"^N",null,"^O",["^ ","^P","^P","^Q","^P","^R","^R","^D","^D","^S","^S","^T","^T"],"^U",["^F",["^V"]],"~:shadow/js-access-global",["^F",["floor","Number","parseFloat","Math","isNaN","Error"]],"^W",["^ ","^X","^R","^Y","^R","^Z","^R"],"~:defs",["^ ","~$error?",["^ ","~:protocol-inline",null,"^5",["^ ","^6","wc_rum_lib/numeric_input.cljs","^7",22,"^8",7,"^9",22,"^:",13,"~:arglists",["^11",["~$quote",["^11",[["~$value"]]]]]],"^I","^1P","^6","wc_rum_lib/numeric_input.cljs","^:",13,"~:method-params",["^11",[["^5W"]]],"~:protocol-impl",null,"~:arglists-meta",["^11",[null,null]],"^8",1,"~:variadic?",false,"^7",22,"~:ret-tag",["^F",["~$boolean","~$js"]],"^9",22,"~:max-fixed-arity",1,"~:fn-var",true,"^5U",["^11",["^5V",["^11",[["^5W"]]]]]],"~$validate-input",["^ ","^5T",null,"^5",["^ ","^6","wc_rum_lib/numeric_input.cljs","^7",169,"^8",7,"^9",169,"^:",21,"^5U",["^11",["^5V",["^11",[["^5W","~$nmin","~$nmax","~$step"]]]]]],"^I","^1L","^6","wc_rum_lib/numeric_input.cljs","^:",21,"^5X",["^11",[["^5W","^66","^67","^68"]]],"^5Y",null,"^5Z",["^11",[null,null]],"^8",1,"^5[",false,"^7",169,"^60",["^F",["~$number","~$string"]],"^9",169,"^63",4,"^64",true,"^5U",["^11",["^5V",["^11",[["^5W","^66","^67","^68"]]]]]],"~$handle-inc",["^ ","^5T",null,"^5",["^ ","^6","wc_rum_lib/numeric_input.cljs","^7",199,"^8",7,"^9",199,"^:",17,"^5U",["^11",["^5V",["^11",[["^5W","~$onChange","^66","^67","~$precision","^68"]]]]]],"^I","^21","^6","wc_rum_lib/numeric_input.cljs","^:",17,"^5X",["^11",[["^5W","^6<","^66","^67","^6=","^68"]]],"^5Y",null,"^5Z",["^11",[null,null]],"^8",1,"^5[",false,"^7",199,"^60","~$any","^9",199,"^63",6,"^64",true,"^5U",["^11",["^5V",["^11",[["^5W","^6<","^66","^67","^6=","^68"]]]]]],"~$update-value",["^ ","^5T",null,"^5",["^ ","^6","wc_rum_lib/numeric_input.cljs","^7",221,"^8",7,"^9",221,"^:",19,"^5U",["^11",["^5V",["^11",[["^5W","^66","^67","^6=","^68","^6<"]]]]]],"^I","^23","^6","wc_rum_lib/numeric_input.cljs","^:",19,"^5X",["^11",[["^5W","^66","^67","^6=","^68","^6<"]]],"^5Y",null,"^5Z",["^11",[null,null]],"^8",1,"^5[",false,"^7",221,"^60","^6>","^9",221,"^63",6,"^64",true,"^5U",["^11",["^5V",["^11",[["^5W","^66","^67","^6=","^68","^6<"]]]]]],"~$handle-typed-input",["^ ","^5T",null,"^5",["^ ","^6","wc_rum_lib/numeric_input.cljs","^7",205,"^8",7,"^9",205,"^:",25,"^5U",["^11",["^5V",["^11",[["^66","^67","^6=","^6<","~$e"]]]]]],"^I","^27","^6","wc_rum_lib/numeric_input.cljs","^:",25,"^5X",["^11",[["^66","^67","^6=","^6<","~$e"]]],"^5Y",null,"^5Z",["^11",[null,null]],"^8",1,"^5[",false,"^7",205,"^60","^6>","^9",205,"^63",5,"^64",true,"^5U",["^11",["^5V",["^11",[["^66","^67","^6=","^6<","~$e"]]]]]],"~$str-to-num",["^ ","^5T",null,"^5",["^ ","^6","wc_rum_lib/numeric_input.cljs","^7",27,"^8",7,"^9",27,"^:",17,"^5U",["^11",["^5V",["^11",[["~$s"]]]]],"~:doc","convert str to num or to ##NaN if not possible"],"^I","^2:","^6","wc_rum_lib/numeric_input.cljs","^:",17,"^5X",["^11",[["~$s"]]],"^5Y",null,"^5Z",["^11",[null,null]],"^8",1,"^5[",false,"^7",27,"^60","^62","^9",27,"^63",1,"^64",true,"^5U",["^11",["^5V",["^11",[["~$s"]]]]],"^6B","convert str to num or to ##NaN if not possible"],"~$num-to-str",["^ ","^5T",null,"^5",["^ ","^6","wc_rum_lib/numeric_input.cljs","^7",69,"^8",7,"^9",69,"^:",17,"^5U",["^11",["^5V",["^11",[["~$n"],["~$n","^6="]]]]],"~:top-fn",["^ ","^5[",false,"~:fixed-arity",2,"^63",2,"^5X",[["~$n"],["~$n","^6="]],"^5U",["^11",[["~$n"],["~$n","^6="]]],"^5Z",["^11",[null,null]]]],"^I","^28","^6","wc_rum_lib/numeric_input.cljs","^:",17,"^6D",["^ ","^5[",false,"^6E",2,"^63",2,"^5X",[["~$n"],["~$n","^6="]],"^5U",["^11",[["~$n"],["~$n","^6="]]],"^5Z",["^11",[null,null]]],"^5X",[["~$n"],["~$n","^6="]],"^5Y",null,"^6E",2,"^5Z",["^11",[null,null]],"^8",1,"^5[",false,"~:methods",[["^ ","^6E",1,"^5[",false,"~:tag","^6>"],["^ ","^6E",2,"^5[",false,"^6G",["^F",[null,"^6>","^6:","~$clj-nil"]]]],"^7",69,"^9",69,"^63",2,"^64",true,"^5U",["^11",[["~$n"],["~$n","^6="]]]],"~$style",["^ ","^I","^25","^6","wc_rum_lib/numeric_input.cljs","^7",9,"^8",1,"^9",9,"^:",16,"^5",["^ ","^6","wc_rum_lib/numeric_input.cljs","^7",9,"^8",11,"^9",9,"^:",16],"^6G","~$cljs.core/IMap"],"~$numeric-input",["^ ","^5",["^ ","^6","wc_rum_lib/numeric_input.cljs","^7",241,"^8",11,"^9",241,"^:",24,"^5U",["^11",["^5V",["^11",[[["^ ","~:keys",["~$key","~$input-ref","^6<","^G","^H","~$error-color","~$color","^6="],"~:or",["^ ","^6O","red","^6P","black"],"^15","~$props"]]]]]],"~:rum/tag",["^11",["^5V","~$js/React.Element"]]],"^I","^2E","^6","wc_rum_lib/numeric_input.cljs","^:",24,"^8",1,"^7",241,"^6S",["^11",["^5V","^6T"]],"^9",241,"^6G","~$function","^5U",["^11",["^5V",["^11",[[["^ ","^6L",["^6M","^6N","^6<","^G","^H","^6O","^6P","^6="],"^6Q",["^ ","^6O","red","^6P","black"],"^15","^6R"]]]]]]],"~$near-integer?",["^ ","^5T",null,"^5",["^ ","^6","wc_rum_lib/numeric_input.cljs","^7",38,"^8",7,"^9",38,"^:",20,"^5U",["^11",["^5V",["^11",[["~$n"]]]]]],"^I","^2D","^6","wc_rum_lib/numeric_input.cljs","^:",20,"^5X",["^11",[["~$n"]]],"^5Y",null,"^5Z",["^11",[null,null]],"^8",1,"^5[",false,"^7",38,"^60","^61","^9",38,"^63",1,"^64",true,"^5U",["^11",["^5V",["^11",[["~$n"]]]]]],"~$inc-dec-button",["^ ","^5",["^ ","^6","wc_rum_lib/numeric_input.cljs","^7",224,"^8",12,"^9",224,"^:",26,"^5U",["^11",["^5V",["^11",[[["^ ","^6L",["~$cursor","~$increment","^6<","^G","^H","^66","^67","^6="],"^15","^6R"]]]]]],"^6S",["^11",["^5V","^6T"]]],"^I","^2=","^6","wc_rum_lib/numeric_input.cljs","^:",26,"^8",1,"^7",224,"^6S",["^11",["^5V","^6T"]],"^9",224,"^6G","^6U","^5U",["^11",["^5V",["^11",[[["^ ","^6L",["^6X","^6Y","^6<","^G","^H","^66","^67","^6="],"^15","^6R"]]]]]]],"~$at-precision",["^ ","^5T",null,"^5",["^ ","^6","wc_rum_lib/numeric_input.cljs","^7",45,"^8",7,"^9",45,"^:",19,"^5U",["^11",["^5V",["^11",[["~$n","^6="]]]]]],"^I","^1J","^6","wc_rum_lib/numeric_input.cljs","^:",19,"^5X",["^11",[["~$n","^6="]]],"^5Y",null,"^5Z",["^11",[null,null]],"^8",1,"^5[",false,"^7",45,"^60",["^F",[null,"^6>","^6:","^6H"]],"^9",45,"^63",2,"^64",true,"^5U",["^11",["^5V",["^11",[["~$n","^6="]]]]]],"~$epsilon",["^ ","^I","^1Z","^6","wc_rum_lib/numeric_input.cljs","^7",36,"^8",1,"^9",36,"^:",13,"^5",["^ ","^6","wc_rum_lib/numeric_input.cljs","^7",36,"^8",6,"^9",36,"^:",13],"^6G","^69"],"~$trim-trailing-zero",["^ ","^5T",null,"^5",["^ ","^6","wc_rum_lib/numeric_input.cljs","^7",41,"^8",7,"^9",41,"^:",25,"^5U",["^11",["^5V",["^11",[["~$s"]]]]]],"^I","^22","^6","wc_rum_lib/numeric_input.cljs","^:",25,"^5X",["^11",[["~$s"]]],"^5Y",null,"^5Z",["^11",[null,null]],"^8",1,"^5[",false,"^7",41,"^60",["^F",[null,"^6>","^6H"]],"^9",41,"^63",1,"^64",true,"^5U",["^11",["^5V",["^11",[["~$s"]]]]]]],"^[",["^ ","^D","^D","^S","^S","^P","^P","^Q","^P"],"~:cljs.analyzer/constants",["^ ","^U",["^F",["~:tab-index","~:min","~:nmin","~:nmax","~:increment","~:color","~:key","~:else","~:border-top-right-radius","~:input-ref","~:precision","~:width","~:cursor","~:border-bottom-left-radius","~:error-color","~:border-top-left-radius","~:numeric-input","~:max","~:onChange","~:border-bottom-right-radius","~:selectable"]],"~:order",["^7B","^7=","^72","^7F","^7:","^7E","^7A","^7?","^7>","^76","^7D","^73","^7C","^74","^75","^7<","^78","^7;","^7@","^77","^79"]],"^18",["^ ","^V",["^F",[]]],"^19",["^ "],"^1:",["^T","^S","^P","^R","^D"]],"^M","^J","~:ns-specs",["^ "],"~:ns-spec-vars",["^F",[]],"~:compiler-options",["^2H",[["^7J","~:static-fns"],true,["^7J","~:shadow-tweaks"],null,["^7J","~:source-map-inline"],null,["^7J","~:elide-asserts"],false,["^7J","~:optimize-constants"],null,["^7J","^1?"],null,["^7J","~:external-config"],null,["^7J","~:tooling-config"],null,["^7J","~:emit-constants"],null,["^7J","~:load-tests"],null,["^7J","~:form-size-threshold"],null,["^7J","~:data-readers"],null,["^7J","~:infer-externs"],"~:auto",["^7J","^1A"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^7J","~:fn-invoke-direct"],null,["^7J","~:source-map"],"/dev/null"]]]