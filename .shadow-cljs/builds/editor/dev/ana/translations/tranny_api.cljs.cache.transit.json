["^ ","~:output",["^ ","~:js","goog.provide('translations.tranny_api');\ntranslations.tranny_api.server_url = \"https://api-prostate.wintoncentre.uk/\";\ntranslations.tranny_api.base_url = [translations.tranny_api.server_url,\"api/\"].join('');\ntranslations.tranny_api.get_handler = (function translations$tranny_api$get_handler(response){\nvar clj_rsp = cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(response,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"keywordize-keys\",\"keywordize-keys\",1310784252),true], 0));\nvar hit_count = cljs.core.count(clj_rsp);\nvar result = (function (){var pred__32465 = cljs.core._EQ_;\nvar expr__32466 = hit_count;\nif(cljs.core.truth_((pred__32465.cljs$core$IFn$_invoke$arity$2 ? pred__32465.cljs$core$IFn$_invoke$arity$2((0),expr__32466) : pred__32465.call(null,(0),expr__32466)))){\nreturn cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"No results\"], 0));\n} else {\nif(cljs.core.truth_((pred__32465.cljs$core$IFn$_invoke$arity$2 ? pred__32465.cljs$core$IFn$_invoke$arity$2((1),expr__32466) : pred__32465.call(null,(1),expr__32466)))){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.first(clj_rsp),\"text\");\n} else {\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__32464_SHARP_){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(p1__32464_SHARP_,\"text\");\n}),clj_rsp);\n}\n}\n})();\nreturn result;\n});\ntranslations.tranny_api.ta = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);\ntranslations.tranny_api.post_handler = (function translations$tranny_api$post_handler(response){\nreturn cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"successful response\",response], 0));\n});\ntranslations.tranny_api.error_handler = (function translations$tranny_api$error_handler(p__32468){\nvar map__32469 = p__32468;\nvar map__32469__$1 = cljs.core.__destructure_map(map__32469);\nvar status = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__32469__$1,new cljs.core.Keyword(null,\"status\",\"status\",-1997798413));\nvar status_text = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__32469__$1,new cljs.core.Keyword(null,\"status-text\",\"status-text\",-1834235478));\nvar response = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__32469__$1,new cljs.core.Keyword(null,\"response\",\"response\",-1068424192));\nconsole.log([\"something bad happened: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(status),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(status_text)].join(''));\n\nif(cljs.core.truth_(response)){\nreturn console.log(cljs.core.get.cljs$core$IFn$_invoke$arity$2(response,\"message\"));\n} else {\nreturn null;\n}\n});\n/**\n * lookup key in tranny server. 3-arity variant for testing.\n */\ntranslations.tranny_api.lookup_key = (function translations$tranny_api$lookup_key(var_args){\nvar G__32474 = arguments.length;\nswitch (G__32474) {\ncase 1:\nreturn translations.tranny_api.lookup_key.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn translations.tranny_api.lookup_key.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(translations.tranny_api.lookup_key.cljs$core$IFn$_invoke$arity$1 = (function (key){\nreturn translations.tranny_api.lookup_key.cljs$core$IFn$_invoke$arity$2([translations.tranny_api.base_url,\"key/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(key)].join(''),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"handler\",\"handler\",-195596612),translations.tranny_api.get_handler,new cljs.core.Keyword(null,\"error-handler\",\"error-handler\",-484945776),translations.tranny_api.error_handler], null));\n}));\n\n(translations.tranny_api.lookup_key.cljs$core$IFn$_invoke$arity$2 = (function (url,p__32478){\nvar map__32479 = p__32478;\nvar map__32479__$1 = cljs.core.__destructure_map(map__32479);\nvar handler = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__32479__$1,new cljs.core.Keyword(null,\"handler\",\"handler\",-195596612));\nvar error_handler = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__32479__$1,new cljs.core.Keyword(null,\"error-handler\",\"error-handler\",-484945776));\nreturn ajax.core.GET.cljs$core$IFn$_invoke$arity$variadic(url,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"handler\",\"handler\",-195596612),handler,new cljs.core.Keyword(null,\"error-handler\",\"error-handler\",-484945776),error_handler,new cljs.core.Keyword(null,\"mode\",\"mode\",654403691),\"no-cors\"], null)], 0));\n}));\n\n(translations.tranny_api.lookup_key.cljs$lang$maxFixedArity = 2);\n\n/**\n * lookup language and key in tranny server\n */\ntranslations.tranny_api.lookup_key_lang = (function translations$tranny_api$lookup_key_lang(key,lang){\nreturn ajax.core.GET.cljs$core$IFn$_invoke$arity$variadic([translations.tranny_api.base_url,\"key/\",cljs.core.name(key),\"/lang/\",cljs.core.name(lang)].join(''),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"handler\",\"handler\",-195596612),translations.tranny_api.get_handler,new cljs.core.Keyword(null,\"error-handler\",\"error-handler\",-484945776),translations.tranny_api.error_handler], null)], 0));\n});\n/**\n * generates a string representation of a namespaced keyword.\n *   :foo/bar -> \":foo/bar\"\n *   :bar -> \"bar\"\n *   The inverse function to 'keyword'.\n */\ntranslations.tranny_api.wordkey = (function translations$tranny_api$wordkey(key){\nvar ns_key = cljs.core.namespace(key);\nreturn [(cljs.core.truth_(ns_key)?[ns_key,\"/\"].join(''):null),cljs.core.name(key)].join('');\n});\n/**\n * Update a key for a language with new text\n */\ntranslations.tranny_api.upload_translation = (function translations$tranny_api$upload_translation(var_args){\nvar G__32486 = arguments.length;\nswitch (G__32486) {\ncase 3:\nreturn translations.tranny_api.upload_translation.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn translations.tranny_api.upload_translation.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(translations.tranny_api.upload_translation.cljs$core$IFn$_invoke$arity$3 = (function (key,lang,text){\nvar url = [translations.tranny_api.base_url,\"translation\"].join('');\nreturn translations.tranny_api.upload_translation.cljs$core$IFn$_invoke$arity$4(url,key,lang,text);\n}));\n\n(translations.tranny_api.upload_translation.cljs$core$IFn$_invoke$arity$4 = (function (url,key,lang,text){\nreturn ajax.core.POST.cljs$core$IFn$_invoke$arity$variadic(url,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"handler\",\"handler\",-195596612),translations.tranny_api.post_handler,new cljs.core.Keyword(null,\"error-handler\",\"error-handler\",-484945776),translations.tranny_api.error_handler,new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),translations.tranny_api.wordkey(key),new cljs.core.Keyword(null,\"lang\",\"lang\",-1819677104),cljs.core.str.cljs$core$IFn$_invoke$arity$1(lang),new cljs.core.Keyword(null,\"text\",\"text\",-1790561697),cljs.core.str.cljs$core$IFn$_invoke$arity$1(text)], null),new cljs.core.Keyword(null,\"format\",\"format\",-1306924766),new cljs.core.Keyword(null,\"json\",\"json\",1279968570)], null)], 0));\n}));\n\n(translations.tranny_api.upload_translation.cljs$lang$maxFixedArity = 4);\n\n/**\n * Convert a relative endpoint url into an absolute address\n */\ntranslations.tranny_api.end_point = (function translations$tranny_api$end_point(rel_url){\nreturn [translations.tranny_api.base_url,cljs.core.str.cljs$core$IFn$_invoke$arity$1(rel_url)].join('');\n});\n/**\n * Update a key for a language with new text\n */\ntranslations.tranny_api.delete_translation = (function translations$tranny_api$delete_translation(var_args){\nvar G__32499 = arguments.length;\nswitch (G__32499) {\ncase 2:\nreturn translations.tranny_api.delete_translation.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn translations.tranny_api.delete_translation.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(translations.tranny_api.delete_translation.cljs$core$IFn$_invoke$arity$2 = (function (key,lang){\nvar url = translations.tranny_api.end_point(\"delete\");\nreturn translations.tranny_api.delete_translation.cljs$core$IFn$_invoke$arity$3(url,key,lang);\n}));\n\n(translations.tranny_api.delete_translation.cljs$core$IFn$_invoke$arity$3 = (function (url,key,lang){\nreturn ajax.core.POST.cljs$core$IFn$_invoke$arity$variadic(url,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"handler\",\"handler\",-195596612),translations.tranny_api.post_handler,new cljs.core.Keyword(null,\"error-handler\",\"error-handler\",-484945776),translations.tranny_api.error_handler,new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),translations.tranny_api.wordkey(key),new cljs.core.Keyword(null,\"lang\",\"lang\",-1819677104),cljs.core.str.cljs$core$IFn$_invoke$arity$1(lang)], null),new cljs.core.Keyword(null,\"format\",\"format\",-1306924766),new cljs.core.Keyword(null,\"json\",\"json\",1279968570)], null)], 0));\n}));\n\n(translations.tranny_api.delete_translation.cljs$lang$maxFixedArity = 3);\n\n/**\n * Convert a seq of json key-value pairs to a clojure map, replacing # with / to regain namespace.\n *   This assumes the json generator replaced / namespace separators with \\#.\n *   It's necessary to substitute '/' in namespaced keywords as data.json lib throws away namespaces - which we are using\n *   to help identify the page where the translation appears.\n */\ntranslations.tranny_api.json_kvs__GT_m = (function translations$tranny_api$json_kvs__GT_m(kvs){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p__32500){\nvar vec__32501 = p__32500;\nvar s = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32501,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32501,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(clojure.string.replace(s,/#/,\"/\")),v], null);\n}),kvs));\n});\n/**\n * Validate a download containing an upsert or switch operation.\n *   If the op is a valid upsert, return the :upsert with decoded params\n *   If the op is a valid switch, return the :switch with decoded params\n */\ntranslations.tranny_api.parse_downloaded_op = (function translations$tranny_api$parse_downloaded_op(download){\nif(cljs.core.vector_QMARK_(download)){\nvar vec__32504 = download;\nvar op = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32504,(0),null);\nvar lang = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32504,(1),null);\nvar translations__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32504,(2),null);\nvar d = vec__32504;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((2),cljs.core.count(lang))){\nvar pred__32507 = cljs.core._EQ_;\nvar expr__32508 = op;\nif(cljs.core.truth_((pred__32507.cljs$core$IFn$_invoke$arity$2 ? pred__32507.cljs$core$IFn$_invoke$arity$2(\"upsert\",expr__32508) : pred__32507.call(null,\"upsert\",expr__32508)))){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"upsert\",\"upsert\",1416724984),cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(lang),translations.tranny_api.json_kvs__GT_m(translations__$1)], null);\n} else {\nif(cljs.core.truth_((pred__32507.cljs$core$IFn$_invoke$arity$2 ? pred__32507.cljs$core$IFn$_invoke$arity$2(\"switch\",expr__32508) : pred__32507.call(null,\"switch\",expr__32508)))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"switch\",\"switch\",71881310),cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(lang)], null);\n} else {\nif(cljs.core.truth_((pred__32507.cljs$core$IFn$_invoke$arity$2 ? pred__32507.cljs$core$IFn$_invoke$arity$2(\"error\",expr__32508) : pred__32507.call(null,\"error\",expr__32508)))){\nvar vec__32510 = d;\nvar seq__32511 = cljs.core.seq(vec__32510);\nvar first__32512 = cljs.core.first(seq__32511);\nvar seq__32511__$1 = cljs.core.next(seq__32511);\nvar _ = first__32512;\nvar msgs = seq__32511__$1;\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),msgs], null);\n} else {\nreturn null;\n}\n}\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\n/**\n * Parse a server error into something tidier. Expects a map with :status, :status-text and [:response :message]\n */\ntranslations.tranny_api.parse_error = (function translations$tranny_api$parse_error(er_m){\nvar msg = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(er_m,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"response\",\"response\",-1068424192),new cljs.core.Keyword(null,\"message\",\"message\",-406056002)], null));\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(er_m,new cljs.core.Keyword(null,\"response\",\"response\",-1068424192)),new cljs.core.Keyword(null,\"failure\",\"failure\",720415879)),new cljs.core.Keyword(null,\"message\",\"message\",-406056002),msg);\n});\n/**\n * Given bufferless ok-chan and err-chan, will POST a download request to endpoint api/upserts in 3 arity version or to\n *   given url in 4 arity version. Downloads just the dictionary for the given language.\n *   The go block waits for a response on either channel, and returns a channel containing the parsed response.\n * \n *   Intended for a single language. NOT IN USE YET.\n */\ntranslations.tranny_api.download_lang_translations = (function translations$tranny_api$download_lang_translations(var_args){\nvar G__32521 = arguments.length;\nswitch (G__32521) {\ncase 4:\nreturn translations.tranny_api.download_lang_translations.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ncase 3:\nreturn translations.tranny_api.download_lang_translations.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(translations.tranny_api.download_lang_translations.cljs$core$IFn$_invoke$arity$4 = (function (ok_chan,err_chan,lang,url){\najax.core.POST.cljs$core$IFn$_invoke$arity$variadic(url,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"handler\",\"handler\",-195596612),(function (p1__32518_SHARP_){\nreturn cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(ok_chan,p1__32518_SHARP_);\n}),new cljs.core.Keyword(null,\"error-handler\",\"error-handler\",-484945776),(function (p1__32519_SHARP_){\nreturn cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(err_chan,p1__32519_SHARP_);\n}),new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"lang\",\"lang\",-1819677104),lang], null),new cljs.core.Keyword(null,\"format\",\"format\",-1306924766),new cljs.core.Keyword(null,\"json\",\"json\",1279968570)], null)], 0));\n\nvar c__30885__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run((function (){\nvar f__30886__auto__ = (function (){var switch__30824__auto__ = (function (state_32604){\nvar state_val_32609 = (state_32604[(1)]);\nif((state_val_32609 === (1))){\nvar inst_32546 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_32547 = [ok_chan,err_chan];\nvar inst_32548 = (new cljs.core.PersistentVector(null,2,(5),inst_32546,inst_32547,null));\nvar state_32604__$1 = state_32604;\nreturn cljs.core.async.ioc_alts_BANG_(state_32604__$1,(2),inst_32548);\n} else {\nif((state_val_32609 === (2))){\nvar inst_32550 = (state_32604[(2)]);\nvar inst_32559 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_32550,(0),null);\nvar inst_32561 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_32550,(1),null);\nvar inst_32564 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_32561,ok_chan);\nvar state_32604__$1 = (function (){var statearr_32630 = state_32604;\n(statearr_32630[(7)] = inst_32559);\n\nreturn statearr_32630;\n})();\nif(inst_32564){\nvar statearr_32631_32727 = state_32604__$1;\n(statearr_32631_32727[(1)] = (3));\n\n} else {\nvar statearr_32632_32728 = state_32604__$1;\n(statearr_32632_32728[(1)] = (4));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_32609 === (3))){\nvar inst_32559 = (state_32604[(7)]);\nvar inst_32568 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(inst_32559,\"body\");\nvar inst_32569 = translations.tranny_api.parse_downloaded_op(inst_32568);\nvar state_32604__$1 = state_32604;\nvar statearr_32633_32731 = state_32604__$1;\n(statearr_32633_32731[(2)] = inst_32569);\n\n(statearr_32633_32731[(1)] = (5));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_32609 === (4))){\nvar inst_32559 = (state_32604[(7)]);\nvar inst_32574 = clojure.walk.keywordize_keys(inst_32559);\nvar inst_32575 = translations.tranny_api.parse_error(inst_32574);\nvar state_32604__$1 = state_32604;\nvar statearr_32634_32732 = state_32604__$1;\n(statearr_32634_32732[(2)] = inst_32575);\n\n(statearr_32634_32732[(1)] = (5));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_32609 === (5))){\nvar inst_32577 = (state_32604[(2)]);\nvar state_32604__$1 = state_32604;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_32604__$1,inst_32577);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n});\nreturn (function() {\nvar translations$tranny_api$state_machine__30825__auto__ = null;\nvar translations$tranny_api$state_machine__30825__auto____0 = (function (){\nvar statearr_32636 = [null,null,null,null,null,null,null,null];\n(statearr_32636[(0)] = translations$tranny_api$state_machine__30825__auto__);\n\n(statearr_32636[(1)] = (1));\n\nreturn statearr_32636;\n});\nvar translations$tranny_api$state_machine__30825__auto____1 = (function (state_32604){\nwhile(true){\nvar ret_value__30826__auto__ = (function (){try{while(true){\nvar result__30827__auto__ = switch__30824__auto__(state_32604);\nif(cljs.core.keyword_identical_QMARK_(result__30827__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__30827__auto__;\n}\nbreak;\n}\n}catch (e32637){var ex__30828__auto__ = e32637;\nvar statearr_32639_32737 = state_32604;\n(statearr_32639_32737[(2)] = ex__30828__auto__);\n\n\nif(cljs.core.seq((state_32604[(4)]))){\nvar statearr_32641_32738 = state_32604;\n(statearr_32641_32738[(1)] = cljs.core.first((state_32604[(4)])));\n\n} else {\nthrow ex__30828__auto__;\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__30826__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__32742 = state_32604;\nstate_32604 = G__32742;\ncontinue;\n} else {\nreturn ret_value__30826__auto__;\n}\nbreak;\n}\n});\ntranslations$tranny_api$state_machine__30825__auto__ = function(state_32604){\nswitch(arguments.length){\ncase 0:\nreturn translations$tranny_api$state_machine__30825__auto____0.call(this);\ncase 1:\nreturn translations$tranny_api$state_machine__30825__auto____1.call(this,state_32604);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntranslations$tranny_api$state_machine__30825__auto__.cljs$core$IFn$_invoke$arity$0 = translations$tranny_api$state_machine__30825__auto____0;\ntranslations$tranny_api$state_machine__30825__auto__.cljs$core$IFn$_invoke$arity$1 = translations$tranny_api$state_machine__30825__auto____1;\nreturn translations$tranny_api$state_machine__30825__auto__;\n})()\n})();\nvar state__30887__auto__ = (function (){var statearr_32642 = f__30886__auto__();\n(statearr_32642[(6)] = c__30885__auto__);\n\nreturn statearr_32642;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__30887__auto__);\n}));\n\nreturn c__30885__auto__;\n}));\n\n(translations.tranny_api.download_lang_translations.cljs$core$IFn$_invoke$arity$3 = (function (ok_chan,err_chan,lang){\nreturn translations.tranny_api.download_lang_translations.cljs$core$IFn$_invoke$arity$4(ok_chan,err_chan,lang,translations.tranny_api.end_point(\"upserts\"));\n}));\n\n(translations.tranny_api.download_lang_translations.cljs$lang$maxFixedArity = 4);\n\n/**\n * Given bufferless ok-chan and err-chan, will POST a download-all-translations request to endpoint upserts-all in\n *   2-arity or given url in 3 arity version.\n *   The go block waits for a response on either chan, and returns a chan containing the parsed response.\n */\ntranslations.tranny_api.download_all_translations = (function translations$tranny_api$download_all_translations(var_args){\nvar G__32647 = arguments.length;\nswitch (G__32647) {\ncase 3:\nreturn translations.tranny_api.download_all_translations.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 2:\nreturn translations.tranny_api.download_all_translations.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(translations.tranny_api.download_all_translations.cljs$core$IFn$_invoke$arity$3 = (function (ok_chan,err_chan,url){\najax.core.POST.cljs$core$IFn$_invoke$arity$variadic(url,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"handler\",\"handler\",-195596612),(function (p1__32643_SHARP_){\nreturn cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(ok_chan,p1__32643_SHARP_);\n}),new cljs.core.Keyword(null,\"error-handler\",\"error-handler\",-484945776),(function (p1__32644_SHARP_){\nreturn cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(err_chan,p1__32644_SHARP_);\n}),new cljs.core.Keyword(null,\"format\",\"format\",-1306924766),new cljs.core.Keyword(null,\"json\",\"json\",1279968570)], null)], 0));\n\nvar c__30885__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run((function (){\nvar f__30886__auto__ = (function (){var switch__30824__auto__ = (function (state_32679){\nvar state_val_32680 = (state_32679[(1)]);\nif((state_val_32680 === (1))){\nvar inst_32657 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_32658 = [ok_chan,err_chan];\nvar inst_32659 = (new cljs.core.PersistentVector(null,2,(5),inst_32657,inst_32658,null));\nvar state_32679__$1 = state_32679;\nreturn cljs.core.async.ioc_alts_BANG_(state_32679__$1,(2),inst_32659);\n} else {\nif((state_val_32680 === (2))){\nvar inst_32661 = (state_32679[(2)]);\nvar inst_32662 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_32661,(0),null);\nvar inst_32663 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_32661,(1),null);\nvar inst_32664 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_32663,ok_chan);\nvar state_32679__$1 = (function (){var statearr_32685 = state_32679;\n(statearr_32685[(7)] = inst_32662);\n\nreturn statearr_32685;\n})();\nif(inst_32664){\nvar statearr_32687_32773 = state_32679__$1;\n(statearr_32687_32773[(1)] = (3));\n\n} else {\nvar statearr_32689_32774 = state_32679__$1;\n(statearr_32689_32774[(1)] = (4));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_32680 === (3))){\nvar inst_32662 = (state_32679[(7)]);\nvar inst_32666 = cljs.core.vector_QMARK_(inst_32662);\nvar state_32679__$1 = state_32679;\nif(inst_32666){\nvar statearr_32690_32775 = state_32679__$1;\n(statearr_32690_32775[(1)] = (6));\n\n} else {\nvar statearr_32691_32776 = state_32679__$1;\n(statearr_32691_32776[(1)] = (7));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_32680 === (4))){\nvar inst_32662 = (state_32679[(7)]);\nvar inst_32673 = clojure.walk.keywordize_keys(inst_32662);\nvar inst_32674 = translations.tranny_api.parse_error(inst_32673);\nvar state_32679__$1 = state_32679;\nvar statearr_32694_32777 = state_32679__$1;\n(statearr_32694_32777[(2)] = inst_32674);\n\n(statearr_32694_32777[(1)] = (5));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_32680 === (5))){\nvar inst_32676 = (state_32679[(2)]);\nvar state_32679__$1 = state_32679;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_32679__$1,inst_32676);\n} else {\nif((state_val_32680 === (6))){\nvar inst_32662 = (state_32679[(7)]);\nvar inst_32668 = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(translations.tranny_api.parse_downloaded_op,inst_32662);\nvar state_32679__$1 = state_32679;\nvar statearr_32696_32778 = state_32679__$1;\n(statearr_32696_32778[(2)] = inst_32668);\n\n(statearr_32696_32778[(1)] = (8));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_32680 === (7))){\nvar state_32679__$1 = state_32679;\nvar statearr_32698_32779 = state_32679__$1;\n(statearr_32698_32779[(2)] = null);\n\n(statearr_32698_32779[(1)] = (8));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_32680 === (8))){\nvar inst_32671 = (state_32679[(2)]);\nvar state_32679__$1 = state_32679;\nvar statearr_32699_32780 = state_32679__$1;\n(statearr_32699_32780[(2)] = inst_32671);\n\n(statearr_32699_32780[(1)] = (5));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n});\nreturn (function() {\nvar translations$tranny_api$state_machine__30825__auto__ = null;\nvar translations$tranny_api$state_machine__30825__auto____0 = (function (){\nvar statearr_32701 = [null,null,null,null,null,null,null,null];\n(statearr_32701[(0)] = translations$tranny_api$state_machine__30825__auto__);\n\n(statearr_32701[(1)] = (1));\n\nreturn statearr_32701;\n});\nvar translations$tranny_api$state_machine__30825__auto____1 = (function (state_32679){\nwhile(true){\nvar ret_value__30826__auto__ = (function (){try{while(true){\nvar result__30827__auto__ = switch__30824__auto__(state_32679);\nif(cljs.core.keyword_identical_QMARK_(result__30827__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__30827__auto__;\n}\nbreak;\n}\n}catch (e32704){var ex__30828__auto__ = e32704;\nvar statearr_32706_32781 = state_32679;\n(statearr_32706_32781[(2)] = ex__30828__auto__);\n\n\nif(cljs.core.seq((state_32679[(4)]))){\nvar statearr_32707_32782 = state_32679;\n(statearr_32707_32782[(1)] = cljs.core.first((state_32679[(4)])));\n\n} else {\nthrow ex__30828__auto__;\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__30826__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__32784 = state_32679;\nstate_32679 = G__32784;\ncontinue;\n} else {\nreturn ret_value__30826__auto__;\n}\nbreak;\n}\n});\ntranslations$tranny_api$state_machine__30825__auto__ = function(state_32679){\nswitch(arguments.length){\ncase 0:\nreturn translations$tranny_api$state_machine__30825__auto____0.call(this);\ncase 1:\nreturn translations$tranny_api$state_machine__30825__auto____1.call(this,state_32679);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntranslations$tranny_api$state_machine__30825__auto__.cljs$core$IFn$_invoke$arity$0 = translations$tranny_api$state_machine__30825__auto____0;\ntranslations$tranny_api$state_machine__30825__auto__.cljs$core$IFn$_invoke$arity$1 = translations$tranny_api$state_machine__30825__auto____1;\nreturn translations$tranny_api$state_machine__30825__auto__;\n})()\n})();\nvar state__30887__auto__ = (function (){var statearr_32709 = f__30886__auto__();\n(statearr_32709[(6)] = c__30885__auto__);\n\nreturn statearr_32709;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__30887__auto__);\n}));\n\nreturn c__30885__auto__;\n}));\n\n(translations.tranny_api.download_all_translations.cljs$core$IFn$_invoke$arity$2 = (function (ok_chan,err_chan){\nreturn translations.tranny_api.download_all_translations.cljs$core$IFn$_invoke$arity$3(ok_chan,err_chan,translations.tranny_api.end_point(\"upserts/all\"));\n}));\n\n(translations.tranny_api.download_all_translations.cljs$lang$maxFixedArity = 3);\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","translations/tranny_api.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",28],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",["^ ","~$go","~$cljs.core.async"],"~:excludes",["~#set",[]],"~:name","~$translations.tranny-api","~:reader-aliases",["^ "],"~:op","~:ns","~:imports",null,"~:requires",["^ ","~$ajax.core","^N","^D","^D","~$clojure.string","^O","~$str","^O","~$clojure.walk","^Q","~$cljs.core","^R","~$goog","^S"],"~:seen",["^F",["~:require","~:require-macros"]],"~:uses",["^ ","~$GET","^N","~$POST","^N","~$chan","^D","~$<!","^D","~$put!","^D","~$alts!","^D","~$keywordize-keys","^Q"],"^V",["^ ","^D","^D","^R","^R"],"~:form",["~#list",["~$ns","^H",["^14",["^U",["^N","~:refer",["^X","^Y"]],["^D","^16",["^Z","^[","^10","^11"]],["^O","~:as","^P"],["^Q","^16",["^12"]]]],["^14",["^V",["^D","^16",["^C"]]]]]],"~:flags",["^ ","^U",["^F",[]],"^V",["^F",[]]],"~:js-deps",["^ "],"~:deps",["^S","^R","^N","^D","^O","^Q"]],"^K","^H","~:resource-id",["~:shadow.build.classpath/resource","translations/tranny_api.cljs"],"~:compiled-at",1648462150949,"^I",["^ ","^N","^N","^D","^D","^O","^O","^P","^O","^Q","^Q","^R","^R","^S","^S"],"~:resource-name","translations/tranny_api.cljs","~:warnings",[],"~:source","(ns translations.tranny-api\n  (:require [ajax.core :refer [GET POST]]\n            [cljs.core.async :refer [chan <! put! alts!]]\n            [clojure.string :as str]\n            [clojure.walk :refer [keywordize-keys]])\n  (:require-macros [cljs.core.async :refer [go]]))\n\n; For remote editing\n;(def server-url \"http://localhost:1337/\")\n(def server-url \"https://api-prostate.wintoncentre.uk/\")                     ;breast -> prostate? or same server?\n\n; For local testing\n(def base-url (str server-url \"api/\"))\n\n(defn get-handler [response]\n  ;(println response)\n  (let [clj-rsp (js->clj response :keywordize-keys true)\n        hit-count (count clj-rsp)\n        result (condp = hit-count\n                 0 (println \"No results\")\n                 1 (get (first clj-rsp) \"text\")\n                 (map #(get % \"text\") clj-rsp))]\n    ;(println result)\n    result))\n\n(def ta (atom nil))\n\n(defn post-handler [response]\n  (println \"successful response\" response)\n  ;(println (get (js->clj response :keywordize-keys true) \"body\"))\n  )\n\n\n(defn error-handler [{:keys [status status-text response]}]\n  (.log js/console (str \"something bad happened: \" status \" \" status-text))\n  (when response (.log js/console (get response \"message\"))))\n\n\n(defn lookup-key\n  \"lookup key in tranny server. 3-arity variant for testing.\"\n  ([key]\n   (lookup-key (str base-url \"key/\" key) {:handler get-handler :error-handler error-handler}))\n  ([url {:keys [handler error-handler]}]\n   (GET url {:handler handler :error-handler error-handler :mode \"no-cors\"})))\n\n(defn lookup-key-lang\n  \"lookup language and key in tranny server\"\n  [key lang]\n  (GET (str base-url \"key/\" (name key) \"/lang/\" (name lang))\n    {:handler       get-handler\n     :error-handler error-handler}))\n\n(defn wordkey\n  \"generates a string representation of a namespaced keyword.\n  :foo/bar -> \\\":foo/bar\\\"\n  :bar -> \\\"bar\\\"\n  The inverse function to 'keyword'.\"\n  [key]\n  (let [ns-key (namespace key)]\n    (str (if ns-key (str ns-key \"/\") nil) (name key))))\n\n\n\n(comment\n  (wordkey :foo/bar)\n  (js/console.log (lookup-key :results/display-title-percentage))\n  (lookup-key-lang (wordkey :results/display-title-percentage) \"sc\"))\n\n\n(defn upload-translation\n  \"Update a key for a language with new text\"\n  ([key lang text]\n   (let [url (str base-url \"translation\")]\n     (upload-translation url key lang text)))\n  ([url key lang text]\n   (POST url {:handler post-handler :error-handler error-handler :params {:key (wordkey key) :lang (str lang) :text (str text)} :format :json})))\n\n(defn end-point\n  \"Convert a relative endpoint url into an absolute address\"\n  [rel-url]\n  (str base-url rel-url))\n\n(defn delete-translation\n  \"Update a key for a language with new text\"\n  ([key lang]\n   (let [url (end-point \"delete\")]\n     (delete-translation url key lang)))\n  ([url key lang]\n   (POST url {:handler post-handler :error-handler error-handler :params {:key (wordkey key) :lang (str lang)} :format :json})))\n\n(defn json-kvs->m\n  \"Convert a seq of json key-value pairs to a clojure map, replacing # with / to regain namespace.\n  This assumes the json generator replaced / namespace separators with \\\\#.\n  It's necessary to substitute '/' in namespaced keywords as data.json lib throws away namespaces - which we are using\n  to help identify the page where the translation appears.\"\n  [kvs]\n  (->> kvs\n       (map (fn [[s v]] [(keyword (str/replace s #\"#\" \"/\")) v]))\n       (into {})))\n\n(defn parse-downloaded-op\n  \"Validate a download containing an upsert or switch operation.\n  If the op is a valid upsert, return the :upsert with decoded params\n  If the op is a valid switch, return the :switch with decoded params\"\n  [download]\n  (when (vector? download)\n    (let [[op lang translations :as d] download]\n      (when (= 2 (count lang))\n        (condp = op\n          \"upsert\" [:upsert (keyword lang) (json-kvs->m translations)]\n          \"switch\" [:switch (keyword lang)]\n          \"error\" (let [[_ & msgs] d] [:error msgs])\n          nil)))))\n\n(defn parse-error\n  \"Parse a server error into something tidier. Expects a map with :status, :status-text and [:response :message]\"\n  [er-m]\n  (let [msg (get-in er-m [:response :message])]\n    (-> er-m\n        (dissoc :response)\n        (dissoc :failure)\n        (assoc :message msg))))\n\n(defn download-lang-translations\n  \"Given bufferless ok-chan and err-chan, will POST a download request to endpoint api/upserts in 3 arity version or to\n  given url in 4 arity version. Downloads just the dictionary for the given language.\n  The go block waits for a response on either channel, and returns a channel containing the parsed response.\n\n  Intended for a single language. NOT IN USE YET.\"\n  ([ok-chan err-chan lang url]\n   (POST url {:handler #(put! ok-chan %) :error-handler #(put! err-chan %) :params {:lang lang} :format :json})\n   (go\n     (let [[response port] (alts! [ok-chan err-chan])]\n       (if (= port ok-chan)\n         (parse-downloaded-op (get response \"body\"))\n         (parse-error (keywordize-keys response))))))\n  ([ok-chan err-chan lang]\n   (download-lang-translations ok-chan err-chan lang (end-point \"upserts\"))))\n\n\n(defn download-all-translations\n  \"Given bufferless ok-chan and err-chan, will POST a download-all-translations request to endpoint upserts-all in\n  2-arity or given url in 3 arity version.\n  The go block waits for a response on either chan, and returns a chan containing the parsed response.\"\n  ([ok-chan err-chan url]\n   (POST url {:handler #(put! ok-chan %) :error-handler #(put! err-chan %) :format :json})\n   (go\n     (let [[response port] (alts! [ok-chan err-chan])]\n       (if (= port ok-chan)\n         (when (vector? response)\n           (mapv parse-downloaded-op response))\n         (parse-error (keywordize-keys response))))))\n  ([ok-chan err-chan]\n   (download-all-translations ok-chan err-chan (end-point \"upserts/all\"))))\n\n\n(comment\n\n  (def success-chan (chan 0))\n  (def error-chan (chan 0))\n\n  ; Start the tranny server before testing these.\n  (go\n    (println \"get single languages\" (<! (download-lang-translations success-chan error-chan \"en\"))))\n\n  (go\n    (println \"get all languages!\" (<! (download-all-translations success-chan error-chan))))\n\n  (upload-translation :home/what-is-predict \"de\" \"Was istttt Predict?\")\n  (upload-translation :foo \"de\" \"Foo\")\n  (delete-translation :foo \"de\")\n\n  (lookup-key \"foo\")\n  (lookup-key \"hello\")\n  (lookup-key-lang \"hello\" \"fr\")\n  ;(update-key-lang \"hello\" \"de\" \"Gooey\")\n  ;(update-key-lang \"hello\" \"de\" \"Hallo\")\n  ;(update-key-lang \"hello\" \"ar\" \"مرحبا\")\n  ;(update-key-lang :home/the-answer \"en\" \"42\")\n  ;(update-key-lang :home/what-is-predict \"de\" \"Was istttt Predict?\")\n\n  (str (namespace :home/what-is-predict) \"/\" (name :home/what-is-predict))\n  ;=> \"home/what-is-predict\"\n\n  (keyword (str (namespace :home/what-is-predict) \"/\" (name :home/what-is-predict)))\n  ;=> :home/what-is-predict\n\n  (wordkey :foo)\n  ;=> \"foo\"\n\n  (wordkey :foo/bar)\n  ;=> \"foo/bar\n\n  (keyword \"foo\")\n  ;=> :foo\n\n  (keyword \"foo/bar\")\n  :foo/bar)\n\n\n; coast should execute:\n;(coast/q '[:select * :from translation :where [:key ?key] [:lang ?lang]] {:key \"hello\" :lang \"fr\"})\n\n\n","~:reader-features",["^F",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["translations.tranny-api/server-url","translations.tranny-api/base-url","translations.tranny-api/get-handler","response","clj-rsp","cljs.core.js__GT_clj","hit-count","cljs.core/count","result","pred__32465","expr__32466","cljs.core/=","cljs.core.println","cljs.core.get","cljs.core/first","p1__32464#","cljs.core.map","translations.tranny-api/ta","cljs.core.atom","translations.tranny-api/post-handler","p__32468","map__32469","cljs.core/--destructure-map","translations.tranny-api/error-handler","status","status-text","js/console","var_args","G__32474","translations.tranny-api/lookup-key","js/Error","p__32478","map__32479","key","translations.tranny_api.lookup_key","url","handler","error-handler","ajax.core.GET","translations.tranny-api/lookup-key-lang","lang","cljs.core/name","translations.tranny-api/wordkey","ns-key","cljs.core/namespace","G__32486","translations.tranny-api/upload-translation","text","translations.tranny_api.upload_translation","ajax.core.POST","translations.tranny-api/end-point","rel-url","G__32499","translations.tranny-api/delete-translation","translations.tranny_api.delete_translation","translations.tranny-api/json-kvs->m","kvs","p__32500","vec__32501","cljs.core.nth","s","v","cljs.core.keyword","clojure.string/replace","cljs.core.into","translations.tranny-api/parse-downloaded-op","download","cljs.core/vector?","vec__32504","op","translations","d","cljs.core._EQ_","pred__32507","expr__32508","vec__32510","seq__32511","cljs.core/seq","first__32512","cljs.core/next","_","msgs","translations.tranny-api/parse-error","er-m","msg","cljs.core.get_in","cljs.core.dissoc","cljs.core.assoc","G__32521","translations.tranny-api/download-lang-translations","ok-chan","err-chan","p1__32518#","p1__32519#","cljs.core.async.put_BANG_","c__30885__auto__","cljs.core.async.chan","cljs.core.async.impl.dispatch/run","f__30886__auto__","switch__30824__auto__","state_32604","state_val_32609","inst_32546","cljs.core/PersistentVector","inst_32547","inst_32548","cljs.core.async/ioc-alts!","inst_32550","inst_32559","inst_32561","inst_32564","statearr-32630","statearr-32631","statearr-32632","inst_32568","inst_32569","statearr-32633","inst_32574","inst_32575","statearr-32634","inst_32577","cljs.core.async.impl.ioc-helpers/return-chan","statearr-32636","state-machine__30825__auto__","ret-value__30826__auto__","result__30827__auto__","cljs.core/keyword-identical?","ex__30828__auto__","e32637","statearr-32639","statearr-32641","state__30887__auto__","statearr-32642","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","clojure.walk/keywordize-keys","translations.tranny_api.download_lang_translations","G__32647","translations.tranny-api/download-all-translations","p1__32643#","p1__32644#","state_32679","state_val_32680","inst_32657","inst_32658","inst_32659","inst_32661","inst_32662","inst_32663","inst_32664","statearr-32685","statearr-32687","statearr-32689","inst_32666","statearr-32690","statearr-32691","inst_32673","inst_32674","statearr-32694","inst_32676","inst_32668","statearr-32696","statearr-32698","inst_32671","statearr-32699","statearr-32701","e32704","statearr-32706","statearr-32707","statearr-32709","cljs.core.mapv","translations.tranny_api.download_all_translations"]],"~:used-vars",["^F",["~$cljs.core/--destructure-map","~$translations.tranny-api/lookup-key","~$cljs.core/keyword","~$translations.tranny-api/get-handler","~$translations.tranny-api/end-point","~$translations.tranny-api/base-url","~$cljs.core/vector?","~$translations.tranny-api/error-handler","~$cljs.core/=","~$translations.tranny-api/parse-error","~$translations.tranny-api/server-url","~$cljs.core.async/ioc-alts!","~$cljs.core/count","~$cljs.core/seq","~$cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","~$cljs.core/mapv","~$cljs.core/dissoc","~$cljs.core/keyword-identical?","~$cljs.core.async/put!","~$cljs.core/atom","~$js/console","~$cljs.core/js->clj","~$ajax.core/GET","~$cljs.core/into","~$cljs.core/namespace","~$cljs.core/map","~$ajax.core/POST","~$cljs.core.async.impl.dispatch/run","~$cljs.core/PersistentVector","~$cljs.core/get-in","~$cljs.core.async/chan","~$cljs.core/get","~$translations.tranny-api/ta","~$cljs.core.async.impl.ioc-helpers/USER-START-IDX","~$cljs.core/nth","~$cljs.core/println","~$clojure.string/replace","~$cljs.core/next","~$translations.tranny-api/download-all-translations","~$cljs.core.async.impl.ioc-helpers/return-chan","~$translations.tranny-api/upload-translation","~$translations.tranny-api/lookup-key-lang","~$translations.tranny-api/json-kvs->m","~$cljs.core/assoc","~$clojure.walk/keywordize-keys","~$translations.tranny-api/parse-downloaded-op","~$translations.tranny-api/wordkey","~$cljs.core/first","~$translations.tranny-api/download-lang-translations","~$translations.tranny-api/delete-translation","~$cljs.core/name","~$translations.tranny-api/post-handler","~$js/Error"]]],"~:cache-keys",["~#cmap",[["^1<","goog/dom/tagname.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^F",[]],"~:deps-syms",["^S","~$goog.dom.HtmlElement"]]],["^1<","goog/async/freelist.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S"]]],["^1<","cljs/core/async/impl/ioc_helpers.cljs"],["68f362bbfe82f1288335b07d726f5cd014e3e9dc","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^R","~$cljs.core.async.impl.protocols"]]],["^1<","goog/labs/useragent/platform.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","~$goog.labs.userAgent.util","~$goog.string"]]],["^1<","cljs/core/async.cljs"],["68f362bbfe82f1288335b07d726f5cd014e3e9dc","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^R","^2X","~$cljs.core.async.impl.channels","~$cljs.core.async.impl.buffers","~$cljs.core.async.impl.timers","~$cljs.core.async.impl.dispatch","~$cljs.core.async.impl.ioc-helpers","~$goog.array"]]],["^1<","goog/timer/timer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","~$goog.Promise","~$goog.events.EventTarget","~$goog.Thenable"]]],["^1<","goog/math/math.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^34","~$goog.asserts"]]],["^1<","goog/html/trustedtypes.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S"]]],["^1<","goog/events/eventtype.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","~$goog.events.BrowserFeature","~$goog.userAgent"]]],["^1<","goog/labs/useragent/browser.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^34","^2Y","~$goog.object","~$goog.string.internal"]]],["^1<","goog/html/safeurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^38","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^3<"]]],["^1<","goog/array/array.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^38"]]],["^1<","goog/useragent/useragent.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^2Y","~$goog.reflect","^2Z"]]],["^1<","goog/structs/prioritypool.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","~$goog.structs.Pool","~$goog.structs.PriorityQueue"]]],["^1<","goog/async/run.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","~$goog.async.WorkQueue","~$goog.async.nextTick","~$goog.async.throwException"]]],["^1<","com/cognitect/transit/impl/reader.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","~$com.cognitect.transit.impl.decoder","~$com.cognitect.transit.caching"]]],["^1<","goog/debug/error.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S"]]],["^1<","goog/net/xhrmanager.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","~$goog.events","~$goog.events.Event","~$goog.events.EventHandler","^36","~$goog.net.ErrorCode","~$goog.net.EventType","~$goog.net.XhrIo","~$goog.net.XhrIoPool","~$goog.structs.Map"]]],["^1<","goog/async/workqueue.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^38","~$goog.async.FreeList"]]],["^1<","ajax/interceptors.cljc"],["734ef60554b0b4902cfe10b10e586d0625b807d2","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^R","^O","~$ajax.util","~$ajax.url","~$ajax.protocols"]]],["^1<","goog/events/events.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^38","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","^39","~$goog.events.Listenable","~$goog.events.ListenerMap","~$goog.debug.ErrorHandler","~$goog.events.EventId","~$goog.events.EventLike","~$goog.events.EventWrapper","~$goog.events.ListenableKey","~$goog.events.Listener"]]],["^1<","goog/promise/resolver.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^35"]]],["^1<","goog/events/browserfeature.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^3:"]]],["^1<","goog/structs/priorityqueue.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","~$goog.structs.Heap"]]],["^1<","goog/net/xhrio.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","~$goog.Timer","^34","^38","^3Z","^36","~$goog.json.hybrid","~$goog.log","^3Q","^3R","~$goog.net.HttpStatus","~$goog.net.XmlHttp","^3;","^2Z","~$goog.structs","^3U","~$goog.uri.utils","^3:","~$goog.Uri","^42","~$goog.net.XhrLike","~$goog.net.XmlHttpFactory"]]],["^1<","goog/promise/thenable.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^35"]]],["^1<","goog/dom/nodetype.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S"]]],["^1<","com/cognitect/transit/util.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^3;"]]],["^1<","ajax/protocols.cljc"],["734ef60554b0b4902cfe10b10e586d0625b807d2","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^R"]]],["^1<","ajax/transit.cljc"],["734ef60554b0b4902cfe10b10e586d0625b807d2","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^R","~$cognitect.transit","~$ajax.interceptors","^3Y","^3W"]]],["^1<","goog/net/wrapperxmlhttpfactory.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^4A","^4B"]]],["^1<","ajax/simple.cljc"],["734ef60554b0b4902cfe10b10e586d0625b807d2","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^R","^O","^3Y","^4D","~$ajax.formats","^3W","^3S"]]],["^1<","goog/events/eventtarget.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","~$goog.Disposable","^38","^3N","^3O","^40","^41","^3;","^43","^44","^46"]]],["^1<","goog/disposable/disposable.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","~$goog.disposable.IDisposable"]]],["^1<","ajax/url.cljc"],["734ef60554b0b4902cfe10b10e586d0625b807d2","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^R","^O","^3W"]]],["^1<","goog/string/typedstring.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S"]]],["^1<","goog/object/object.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S"]]],["^1<","goog/dom/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^38"]]],["^1<","goog/structs/set.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^4>","~$goog.structs.Collection","^3U","~$goog.iter.Iterator"]]],"~:SHADOW-TIMESTAMP",[1647940543000,1647940543000,1633031471000],["^1<","ajax/xml_http_request.cljs"],["734ef60554b0b4902cfe10b10e586d0625b807d2","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^R","^3Y","^2Z"]]],["^1<","goog/math/long.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^38","^3F"]]],["^1<","goog/events/listener.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^46","^40"]]],["^1<","goog/html/trustedresourceurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^38","~$goog.fs.blob","^3=","~$goog.html.SafeScript","~$goog.html.trustedtypes","^3?","^3@","^3A","^3B"]]],["^1<","goog/debug/tracer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^34","^38","~$goog.debug","~$goog.debug.Logger","~$goog.iter","^4;","^3U","~$goog.structs.SimplePool"]]],["^1<","cljs/core/async/impl/channels.cljs"],["68f362bbfe82f1288335b07d726f5cd014e3e9dc","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^R","^2X","^32","^30"]]],["^1<","goog/events/listenermap.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^34","^47","^3;","^43","^40","^46"]]],["^1<","goog/events/eventid.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S"]]],["^1<","goog/string/internal.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S"]]],["^1<","goog/events/eventwrapper.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^3P","~$goog.events.ListenableType"]]],["^1<","goog/functions/functions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S"]]],["^1<","cljs/core/async/impl/dispatch.cljs"],["68f362bbfe82f1288335b07d726f5cd014e3e9dc","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^R","^30","^3J"]]],["^1<","goog/html/safestyle.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^34","^38","~$goog.html.SafeUrl","^3A","^3B","^3<"]]],["^1<","goog/dom/safe.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^38","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^4L","~$goog.html.SafeStyle","^4S","^3>","~$goog.html.uncheckedconversions","^3A","^3<"]]],["^1<","clojure/walk.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^R"]]],["^1<","cljs/core/async/impl/protocols.cljs"],["68f362bbfe82f1288335b07d726f5cd014e3e9dc","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^R"]]],["^1<","goog/net/eventtype.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S"]]],["^1<","goog/structs/map.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^4I","~$goog.iter.StopIteration"]]],["^1<","goog/net/xhriopool.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^3S","~$goog.structs.PriorityPool","^3U"]]],["^1<","com/cognitect/transit/delimiters.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S"]]],["^1<","goog/html/safehtml.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^34","^38","~$goog.dom.TagName","~$goog.dom.tags","^4L","^4W","~$goog.html.SafeStyleSheet","^4S","^3>","^4M","^3?","^3@","^3C","^3;","^3A","^3B","^3<"]]],["^1<","ajax/easy.cljc"],["734ef60554b0b4902cfe10b10e586d0625b807d2","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^R","~$ajax.simple","~$ajax.transit","~$ajax.json","~$ajax.ring","^3X","^4E"]]],["^1<","goog/dom/tags.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^3;"]]],["^1<","ajax/util.cljc"],["734ef60554b0b4902cfe10b10e586d0625b807d2","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^R","^3Y"]]],["^1<","goog/math/size.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S"]]],["^1<","ajax/xhrio.cljs"],["734ef60554b0b4902cfe10b10e586d0625b807d2","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^R","^3R","^3Q","^3S","~$goog.net.XhrManager","^4@","~$goog.json","^3N","^3Y"]]],["^1<","goog/structs/queue.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^34"]]],["^1<","goog/labs/useragent/engine.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^34","^2Y","^2Z"]]],["^1<","ajax/ring.cljc"],["734ef60554b0b4902cfe10b10e586d0625b807d2","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^R","^4D","^3Y","^4E"]]],["^1<","com/cognitect/transit/impl/decoder.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","~$com.cognitect.transit.util","~$com.cognitect.transit.delimiters","^3M","~$com.cognitect.transit.types"]]],["^1<","goog/fs/blob.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^34"]]],["^1<","goog/dom/dom.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^34","^38","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^4[","~$goog.dom.safe","^4V","^4X","~$goog.math.Coordinate","~$goog.math.Size","^3;","^2Z","^3A","~$goog.string.Unicode","^3:"]]],["^1<","goog/asserts/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","~$goog.debug.Error","^5<"]]],["^1<","cljs/core/async/impl/buffers.cljs"],["68f362bbfe82f1288335b07d726f5cd014e3e9dc","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^R","^2X"]]],["^1<","goog/uri/uri.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^34","^38","^2Z","^4>","^3U","^4?","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1<","goog/net/errorcode.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S"]]],["^1<","goog/i18n/bidi.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S"]]],["^1<","translations/tranny_api.cljs"],["041e036aa644dcffc5031798d64a7e88cda46069","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^R","^N","^D","^O","^Q"]]],["^1<","goog/debug/errorhandler.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^4F","^38","^4N","~$goog.debug.EntryPointMonitor","^5A","~$goog.debug.Trace"]]],["^1<","goog/disposable/idisposable.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S"]]],["^1<","goog/promise/promise.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^37","^38","^3V","~$goog.async.run","^3K","^5A","~$goog.promise.Resolver"]]],["^1<","cljs/core/async/impl/timers.cljs"],["68f362bbfe82f1288335b07d726f5cd014e3e9dc","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^R","^2X","^2[","^32"]]],["^1<","goog/fs/url.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S"]]],["^1<","goog/base.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",[]]],["^1<","goog/json/hybrid.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^38","^57"]]],["^1<","goog/structs/structs.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^34","^3;"]]],["^1<","clojure/string.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^R","^2Z","~$goog.string.StringBuffer"]]],["^1<","goog/structs/pool.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^4F","~$goog.structs.Queue","~$goog.structs.Set"]]],["^1<","goog/net/httpstatus.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S"]]],["^1<","com/cognitect/transit/handlers.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^58","^5:","~$goog.math.Long"]]],["^1<","goog/structs/heap.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^34","^3;","~$goog.structs.Node"]]],["^1<","ajax/json.cljc"],["734ef60554b0b4902cfe10b10e586d0625b807d2","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^R","^4C","^Q","^4D","^3Y"]]],["^1<","goog/debug/entrypointregistry.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^38"]]],["^1<","goog/string/string.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^5=","^4X","^3A","^3<"]]],["^1<","com/cognitect/transit/types.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^58","~$com.cognitect.transit.eq","^5K"]]],["^1<","ajax/formats.cljc"],["734ef60554b0b4902cfe10b10e586d0625b807d2","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^R","^4D","^3W","^3Y"]]],["^1<","goog/reflect/reflect.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S"]]],["^1<","goog/labs/useragent/util.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^3<"]]],["^1<","com/cognitect/transit/eq.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^58"]]],["^1<","goog/debug/debug.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^34","~$goog.debug.errorcontext","^3:"]]],["^1<","goog/string/stringbuffer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S"]]],["^1<","goog/math/coordinate.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","~$goog.math"]]],["^1<","goog/debug/errorcontext.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S"]]],["^1<","goog/iter/iter.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^34","^38","^4U","^5O"]]],["^1<","ajax/core.cljc"],["734ef60554b0b4902cfe10b10e586d0625b807d2","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^R","^O","^3X","^54","^53","^55","^4E","^3W","^4D","^52","~$ajax.easy","^3Y","~$ajax.xhrio","~$ajax.xml-http-request"]]],["^1<","goog/async/nexttick.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^3Z","~$goog.dom","^4[","^4U","^3C","^3D"]]],["^1<","goog/html/uncheckedconversions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^38","^4V","^4L","^4W","^51","^4S","^3>","^3A","^3<","^3?"]]],["^1<","goog/debug/logger.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^4N","^4;","~$goog.log.Level","~$goog.log.LogRecord","~$goog.log.Logger"]]],["^1<","com/cognitect/transit/caching.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^59"]]],["^1<","goog/events/event.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^4F","^43"]]],["^1<","goog/events/eventhandler.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^4F","^3N","^3;","^3O","^43","^36","^45"]]],["^1<","goog/dom/htmlelement.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S"]]],["^1<","cljs/core.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^5K","~$goog.math.Integer","^2Z","^3;","^34","^4@","^5H"]]],["^1<","com/cognitect/transit.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^58","~$com.cognitect.transit.impl.reader","~$com.cognitect.transit.impl.writer","^5:","^5M","^3L","^3M"]]],["^1<","goog/html/safescript.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^3A","^3B","^4M","^38"]]],["^1<","goog/log/log.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^38","^4N"]]],["^1<","goog/html/safestylesheet.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^3A","^4W","^3B","^34","^3;","^38","^3<"]]],["^1<","goog/structs/collection.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S"]]],["^1<","goog/events/browserevent.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^4N","^39","^3O","~$goog.events.EventType","^3F","^3:"]]],["^1<","goog/math/integer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^3F"]]],["^1<","goog/structs/node.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S"]]],["^1<","goog/structs/simplepool.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^4F"]]],["^1<","goog/dom/browserfeature.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^3:"]]],["^1<","goog/uri/utils.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^38","^2Z"]]],["^1<","goog/string/const.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^38","^3B"]]],["^1<","goog/json/json.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S"]]],["^1<","goog/events/listenable.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^43","^44"]]],["^1<","com/cognitect/transit/impl/writer.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^58","^3M","~$com.cognitect.transit.handlers","^5:","^59","^5K"]]],["^1<","goog/net/xmlhttpfactory.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^4A"]]],["^1<","goog/net/xmlhttp.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^38","~$goog.net.WrapperXmlHttpFactory","^4B","^4A"]]],["^1<","goog/net/xhrlike.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S"]]],["^1<","cognitect/transit.cljs"],["ae688999ee978d238bffd4df0c0323e552d6d8dc","^2S",["^ ","^2T",null,"^2U",["^F",[]],"^2V",["^S","^R","~$com.cognitect.transit","^5:","^5M","^5K"]]]]],"~:clj-info",["^ ","jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/core.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/core.async/1.3.618/core.async-1.3.618.jar!/cljs/core/async/impl/ioc_macros.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/core.async/1.3.618/core.async-1.3.618.jar!/clojure/core/async/impl/protocols.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/env.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/js_deps.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/inspect.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/reader_types.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/passes.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/core.async/1.3.618/core.async-1.3.618.jar!/clojure/core/async/impl/dispatch.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/core.async/1.3.618/core.async-1.3.618.jar!/cljs/core/async.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/default_data_readers.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/errors.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map/base64_vlq.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/passes/and_or.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1633011066000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/tagged_literals.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/instant.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/core.async/1.3.618/core.async-1.3.618.jar!/clojure/core/async/impl/concurrent.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1633011066000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/compiler.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/impl.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1633011066000,"jar:file:/Users/mehdi/.m2/repository/binaryage/devtools/1.0.4/devtools-1.0.4.jar!/devtools/defaults.clj",1648121537000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/util.cljc",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/cljs-ajax/cljs-ajax/0.8.4/cljs-ajax-0.8.4.jar!/ajax/macros.clj",1640963189000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1633011066000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map/base64.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1633011066000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/core.async/1.3.618/core.async-1.3.618.jar!/clojure/core/async/impl/exec/threadpool.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1633011066000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/data.json/2.4.0/data.json-2.4.0.jar!/clojure/data/json.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/externs.clj",1633031471000,"jar:file:/Users/mehdi/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1633011066000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","translations/tranny_api.cljs","^7",1,"^8",5,"^9",1,"^:",28],"^;",["^ ","^<","^=","^>","^?","^@","^A"],"^B",["^ ","^C","^D"],"^E",["^F",[]],"^G","^H","^I",["^ "],"^L",null,"^M",["^ ","^N","^N","^D","^D","^O","^O","^P","^O","^Q","^Q","^R","^R","^S","^S"],"^T",["^F",["^U","^V"]],"~:shadow/js-access-global",["^F",["Error"]],"^W",["^ ","^X","^N","^Y","^N","^Z","^D","^[","^D","^10","^D","^11","^D","^12","^Q"],"~:defs",["^ ","~$json-kvs->m",["^ ","~:protocol-inline",null,"^5",["^ ","^6","translations/tranny_api.cljs","^7",91,"^8",7,"^9",91,"^:",18,"~:arglists",["^14",["~$quote",["^14",[["~$kvs"]]]]],"~:doc","Convert a seq of json key-value pairs to a clojure map, replacing # with / to regain namespace.\n  This assumes the json generator replaced / namespace separators with \\#.\n  It's necessary to substitute '/' in namespaced keywords as data.json lib throws away namespaces - which we are using\n  to help identify the page where the translation appears."],"^G","^2F","^6","translations/tranny_api.cljs","^:",18,"~:method-params",["^14",[["^72"]]],"~:protocol-impl",null,"~:arglists-meta",["^14",[null,null]],"^8",1,"~:variadic?",false,"^7",91,"~:ret-tag",["^F",[null,"~$clj","~$any"]],"^9",91,"~:max-fixed-arity",1,"~:fn-var",true,"^70",["^14",["^71",["^14",[["^72"]]]]],"^73","Convert a seq of json key-value pairs to a clojure map, replacing # with / to regain namespace.\n  This assumes the json generator replaced / namespace separators with \\#.\n  It's necessary to substitute '/' in namespaced keywords as data.json lib throws away namespaces - which we are using\n  to help identify the page where the translation appears."],"~$download-all-translations",["^ ","^6[",null,"^5",["^ ","^6","translations/tranny_api.cljs","^7",141,"^8",7,"^9",141,"^:",32,"^70",["^14",["^71",["^14",[["~$ok-chan","~$err-chan","~$url"],["^7>","^7?"]]]]],"^73","Given bufferless ok-chan and err-chan, will POST a download-all-translations request to endpoint upserts-all in\n  2-arity or given url in 3 arity version.\n  The go block waits for a response on either chan, and returns a chan containing the parsed response.","~:top-fn",["^ ","^77",false,"~:fixed-arity",3,"^7;",3,"^74",[["^7>","^7?","^7@"],["^7>","^7?"]],"^70",["^14",[["^7>","^7?","^7@"],["^7>","^7?"]]],"^76",["^14",[null,null]]]],"^G","^2B","^6","translations/tranny_api.cljs","^:",32,"^7A",["^ ","^77",false,"^7B",3,"^7;",3,"^74",[["^7>","^7?","^7@"],["^7>","^7?"]],"^70",["^14",[["^7>","^7?","^7@"],["^7>","^7?"]]],"^76",["^14",[null,null]]],"^74",[["^7>","^7?","^7@"],["^7>","^7?"]],"^75",null,"^7B",3,"^76",["^14",[null,null]],"^8",1,"^77",false,"~:methods",[["^ ","^7B",3,"^77",false,"~:tag","^7:"],["^ ","^7B",2,"^77",false,"^7D","^7:"]],"^7",141,"^9",141,"^7;",3,"^7<",true,"^70",["^14",[["^7>","^7?","^7@"],["^7>","^7?"]]],"^73","Given bufferless ok-chan and err-chan, will POST a download-all-translations request to endpoint upserts-all in\n  2-arity or given url in 3 arity version.\n  The go block waits for a response on either chan, and returns a chan containing the parsed response."],"~$upload-translation",["^ ","^6[",null,"^5",["^ ","^6","translations/tranny_api.cljs","^7",70,"^8",7,"^9",70,"^:",25,"^70",["^14",["^71",["^14",[["~$key","~$lang","~$text"],["^7@","^7F","^7G","^7H"]]]]],"^73","Update a key for a language with new text","^7A",["^ ","^77",false,"^7B",4,"^7;",4,"^74",[["^7F","^7G","^7H"],["^7@","^7F","^7G","^7H"]],"^70",["^14",[["^7F","^7G","^7H"],["^7@","^7F","^7G","^7H"]]],"^76",["^14",[null,null]]]],"^G","^2D","^6","translations/tranny_api.cljs","^:",25,"^7A",["^ ","^77",false,"^7B",4,"^7;",4,"^74",[["^7F","^7G","^7H"],["^7@","^7F","^7G","^7H"]],"^70",["^14",[["^7F","^7G","^7H"],["^7@","^7F","^7G","^7H"]]],"^76",["^14",[null,null]]],"^74",[["^7F","^7G","^7H"],["^7@","^7F","^7G","^7H"]],"^75",null,"^7B",4,"^76",["^14",[null,null]],"^8",1,"^77",false,"^7C",[["^ ","^7B",3,"^77",false,"^7D","^7:"],["^ ","^7B",4,"^77",false,"^7D","^7:"]],"^7",70,"^9",70,"^7;",4,"^7<",true,"^70",["^14",[["^7F","^7G","^7H"],["^7@","^7F","^7G","^7H"]]],"^73","Update a key for a language with new text"],"~$lookup-key-lang",["^ ","^6[",null,"^5",["^ ","^6","translations/tranny_api.cljs","^7",46,"^8",7,"^9",46,"^:",22,"^70",["^14",["^71",["^14",[["^7F","^7G"]]]]],"^73","lookup language and key in tranny server"],"^G","^2E","^6","translations/tranny_api.cljs","^:",22,"^74",["^14",[["^7F","^7G"]]],"^75",null,"^76",["^14",[null,null]],"^8",1,"^77",false,"^7",46,"^78","^7:","^9",46,"^7;",2,"^7<",true,"^70",["^14",["^71",["^14",[["^7F","^7G"]]]]],"^73","lookup language and key in tranny server"],"~$delete-translation",["^ ","^6[",null,"^5",["^ ","^6","translations/tranny_api.cljs","^7",83,"^8",7,"^9",83,"^:",25,"^70",["^14",["^71",["^14",[["^7F","^7G"],["^7@","^7F","^7G"]]]]],"^73","Update a key for a language with new text","^7A",["^ ","^77",false,"^7B",3,"^7;",3,"^74",[["^7F","^7G"],["^7@","^7F","^7G"]],"^70",["^14",[["^7F","^7G"],["^7@","^7F","^7G"]]],"^76",["^14",[null,null]]]],"^G","^2M","^6","translations/tranny_api.cljs","^:",25,"^7A",["^ ","^77",false,"^7B",3,"^7;",3,"^74",[["^7F","^7G"],["^7@","^7F","^7G"]],"^70",["^14",[["^7F","^7G"],["^7@","^7F","^7G"]]],"^76",["^14",[null,null]]],"^74",[["^7F","^7G"],["^7@","^7F","^7G"]],"^75",null,"^7B",3,"^76",["^14",[null,null]],"^8",1,"^77",false,"^7C",[["^ ","^7B",2,"^77",false,"^7D","^7:"],["^ ","^7B",3,"^77",false,"^7D","^7:"]],"^7",83,"^9",83,"^7;",3,"^7<",true,"^70",["^14",[["^7F","^7G"],["^7@","^7F","^7G"]]],"^73","Update a key for a language with new text"],"~$post-handler",["^ ","^6[",null,"^5",["^ ","^6","translations/tranny_api.cljs","^7",28,"^8",7,"^9",28,"^:",19,"^70",["^14",["^71",["^14",[["~$response"]]]]]],"^G","^2O","^6","translations/tranny_api.cljs","^:",19,"^74",["^14",[["^7L"]]],"^75",null,"^76",["^14",[null,null]],"^8",1,"^77",false,"^7",28,"^78","~$clj-nil","^9",28,"^7;",1,"^7<",true,"^70",["^14",["^71",["^14",[["^7L"]]]]]],"~$wordkey",["^ ","^6[",null,"^5",["^ ","^6","translations/tranny_api.cljs","^7",53,"^8",7,"^9",53,"^:",14,"^70",["^14",["^71",["^14",[["^7F"]]]]],"^73","generates a string representation of a namespaced keyword.\n  :foo/bar -> \":foo/bar\"\n  :bar -> \"bar\"\n  The inverse function to 'keyword'."],"^G","^2J","^6","translations/tranny_api.cljs","^:",14,"^74",["^14",[["^7F"]]],"^75",null,"^76",["^14",[null,null]],"^8",1,"^77",false,"^7",53,"^78","~$string","^9",53,"^7;",1,"^7<",true,"^70",["^14",["^71",["^14",[["^7F"]]]]],"^73","generates a string representation of a namespaced keyword.\n  :foo/bar -> \":foo/bar\"\n  :bar -> \"bar\"\n  The inverse function to 'keyword'."],"~$download-lang-translations",["^ ","^6[",null,"^5",["^ ","^6","translations/tranny_api.cljs","^7",124,"^8",7,"^9",124,"^:",33,"^70",["^14",["^71",["^14",[["^7>","^7?","^7G","^7@"],["^7>","^7?","^7G"]]]]],"^73","Given bufferless ok-chan and err-chan, will POST a download request to endpoint api/upserts in 3 arity version or to\n  given url in 4 arity version. Downloads just the dictionary for the given language.\n  The go block waits for a response on either channel, and returns a channel containing the parsed response.\n\n  Intended for a single language. NOT IN USE YET.","^7A",["^ ","^77",false,"^7B",4,"^7;",4,"^74",[["^7>","^7?","^7G","^7@"],["^7>","^7?","^7G"]],"^70",["^14",[["^7>","^7?","^7G","^7@"],["^7>","^7?","^7G"]]],"^76",["^14",[null,null]]]],"^G","^2L","^6","translations/tranny_api.cljs","^:",33,"^7A",["^ ","^77",false,"^7B",4,"^7;",4,"^74",[["^7>","^7?","^7G","^7@"],["^7>","^7?","^7G"]],"^70",["^14",[["^7>","^7?","^7G","^7@"],["^7>","^7?","^7G"]]],"^76",["^14",[null,null]]],"^74",[["^7>","^7?","^7G","^7@"],["^7>","^7?","^7G"]],"^75",null,"^7B",4,"^76",["^14",[null,null]],"^8",1,"^77",false,"^7C",[["^ ","^7B",4,"^77",false,"^7D","^7:"],["^ ","^7B",3,"^77",false,"^7D","^7:"]],"^7",124,"^9",124,"^7;",4,"^7<",true,"^70",["^14",[["^7>","^7?","^7G","^7@"],["^7>","^7?","^7G"]]],"^73","Given bufferless ok-chan and err-chan, will POST a download request to endpoint api/upserts in 3 arity version or to\n  given url in 4 arity version. Downloads just the dictionary for the given language.\n  The go block waits for a response on either channel, and returns a channel containing the parsed response.\n\n  Intended for a single language. NOT IN USE YET."],"~$parse-downloaded-op",["^ ","^6[",null,"^5",["^ ","^6","translations/tranny_api.cljs","^7",101,"^8",7,"^9",101,"^:",26,"^70",["^14",["^71",["^14",[["~$download"]]]]],"^73","Validate a download containing an upsert or switch operation.\n  If the op is a valid upsert, return the :upsert with decoded params\n  If the op is a valid switch, return the :switch with decoded params"],"^G","^2I","^6","translations/tranny_api.cljs","^:",26,"^74",["^14",[["^7R"]]],"^75",null,"^76",["^14",[null,null]],"^8",1,"^77",false,"^7",101,"^78",["^F",["~$cljs.core/IVector","^7M"]],"^9",101,"^7;",1,"^7<",true,"^70",["^14",["^71",["^14",[["^7R"]]]]],"^73","Validate a download containing an upsert or switch operation.\n  If the op is a valid upsert, return the :upsert with decoded params\n  If the op is a valid switch, return the :switch with decoded params"],"~$get-handler",["^ ","^6[",null,"^5",["^ ","^6","translations/tranny_api.cljs","^7",15,"^8",7,"^9",15,"^:",18,"^70",["^14",["^71",["^14",[["^7L"]]]]]],"^G","^1K","^6","translations/tranny_api.cljs","^:",18,"^74",["^14",[["^7L"]]],"^75",null,"^76",["^14",[null,null]],"^8",1,"^77",false,"^7",15,"^78",["^F",["^7:","~$cljs.core/LazySeq","^7M"]],"^9",15,"^7;",1,"^7<",true,"^70",["^14",["^71",["^14",[["^7L"]]]]]],"~$lookup-key",["^ ","^6[",null,"^5",["^ ","^6","translations/tranny_api.cljs","^7",39,"^8",7,"^9",39,"^:",17,"^70",["^14",["^71",["^14",[["^7F"],["^7@",["^ ","~:keys",["~$handler","~$error-handler"]]]]]]],"^73","lookup key in tranny server. 3-arity variant for testing.","^7A",["^ ","^77",false,"^7B",2,"^7;",2,"^74",[["^7F"],["^7@",["^ ","^7W",["^7X","^7Y"]]]],"^70",["^14",[["^7F"],["^7@",["^ ","^7W",["^7X","^7Y"]]]]],"^76",["^14",[null,null]]]],"^G","^1I","^6","translations/tranny_api.cljs","^:",17,"^7A",["^ ","^77",false,"^7B",2,"^7;",2,"^74",[["^7F"],["^7@",["^ ","^7W",["^7X","^7Y"]]]],"^70",["^14",[["^7F"],["^7@",["^ ","^7W",["^7X","^7Y"]]]]],"^76",["^14",[null,null]]],"^74",[["^7F"],["^7@",["^ ","^7W",["^7X","^7Y"]]]],"^75",null,"^7B",2,"^76",["^14",[null,null]],"^8",1,"^77",false,"^7C",[["^ ","^7B",1,"^77",false,"^7D","^7:"],["^ ","^7B",2,"^77",false,"^7D","^7:"]],"^7",39,"^9",39,"^7;",2,"^7<",true,"^70",["^14",[["^7F"],["^7@",["^ ","^7W",["^7X","^7Y"]]]]],"^73","lookup key in tranny server. 3-arity variant for testing."],"~$end-point",["^ ","^6[",null,"^5",["^ ","^6","translations/tranny_api.cljs","^7",78,"^8",7,"^9",78,"^:",16,"^70",["^14",["^71",["^14",[["~$rel-url"]]]]],"^73","Convert a relative endpoint url into an absolute address"],"^G","^1L","^6","translations/tranny_api.cljs","^:",16,"^74",["^14",[["^7["]]],"^75",null,"^76",["^14",[null,null]],"^8",1,"^77",false,"^7",78,"^78","^7O","^9",78,"^7;",1,"^7<",true,"^70",["^14",["^71",["^14",[["^7["]]]]],"^73","Convert a relative endpoint url into an absolute address"],"~$parse-error",["^ ","^6[",null,"^5",["^ ","^6","translations/tranny_api.cljs","^7",115,"^8",7,"^9",115,"^:",18,"^70",["^14",["^71",["^14",[["~$er-m"]]]]],"^73","Parse a server error into something tidier. Expects a map with :status, :status-text and [:response :message]"],"^G","^1Q","^6","translations/tranny_api.cljs","^:",18,"^74",["^14",[["^81"]]],"^75",null,"^76",["^14",[null,null]],"^8",1,"^77",false,"^7",115,"^78",["^F",["^79","^7:"]],"^9",115,"^7;",1,"^7<",true,"^70",["^14",["^71",["^14",[["^81"]]]]],"^73","Parse a server error into something tidier. Expects a map with :status, :status-text and [:response :message]"],"~$base-url",["^ ","^G","^1M","^6","translations/tranny_api.cljs","^7",13,"^8",1,"^9",13,"^:",14,"^5",["^ ","^6","translations/tranny_api.cljs","^7",13,"^8",6,"^9",13,"^:",14],"^7D","^7O"],"~$server-url",["^ ","^G","^1R","^6","translations/tranny_api.cljs","^7",10,"^8",1,"^9",10,"^:",16,"^5",["^ ","^6","translations/tranny_api.cljs","^7",10,"^8",6,"^9",10,"^:",16],"^7D","^7O"],"^7Y",["^ ","^6[",null,"^5",["^ ","^6","translations/tranny_api.cljs","^7",34,"^8",7,"^9",34,"^:",20,"^70",["^14",["^71",["^14",[[["^ ","^7W",["~$status","~$status-text","^7L"]]]]]]]],"^G","^1O","^6","translations/tranny_api.cljs","^:",20,"^74",["^14",[["~$p__32468"]]],"^75",null,"^76",["^14",[null,null]],"^8",1,"^77",false,"^7",34,"^78",["^F",["~$js","^7M"]],"^9",34,"^7;",1,"^7<",true,"^70",["^14",["^71",["^14",[[["^ ","^7W",["^84","^85","^7L"]]]]]]]],"~$ta",["^ ","^G","^2<","^6","translations/tranny_api.cljs","^7",26,"^8",1,"^9",26,"^:",8,"^5",["^ ","^6","translations/tranny_api.cljs","^7",26,"^8",6,"^9",26,"^:",8],"^7D","~$cljs.core/Atom"]],"^V",["^ ","^D","^D","^R","^R"],"~:cljs.analyzer/constants",["^ ","^T",["^F",["~:response","~:format","~:key","~:failure","~:status-text","~:mode","~:params","~:recur","~:error-handler","~:lang","~:status","~:upsert","~:error","~:json","~:handler","~:keywordize-keys","~:switch","~:message","~:text"]],"~:order",["^8J","^8E","^8?","^8;","^8I","^8C","^8@","^8A","^8<","^8=","^8D","^8M","^8H","^8F","^8K","^8G","^8L","^8>","^8B"]],"^18",["^ ","^U",["^F",[]],"^V",["^F",[]]],"^19",["^ "],"^1:",["^S","^R","^N","^D","^O","^Q"]],"^K","^H","~:ns-specs",["^ "],"~:ns-spec-vars",["^F",[]],"~:compiler-options",["^2R",[["^8Q","~:static-fns"],true,["^8Q","~:shadow-tweaks"],null,["^8Q","~:source-map-inline"],null,["^8Q","~:elide-asserts"],false,["^8Q","~:optimize-constants"],null,["^8Q","^1?"],null,["^8Q","~:external-config"],null,["^8Q","~:tooling-config"],null,["^8Q","~:emit-constants"],null,["^8Q","~:load-tests"],null,["^8Q","~:form-size-threshold"],null,["^8Q","~:data-readers"],null,["^8Q","~:infer-externs"],"~:auto",["^8Q","^1A"],null,["~:js-options","~:js-provider"],"~:shadow",["^8@"],"~:dev",["^8Q","~:fn-invoke-direct"],null,["^8Q","~:source-map"],"/dev/null"]]]